{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./sources/utils/utils.js","webpack:///./sources/utils/dom_helpers.js","webpack:///./sources/utils/extends.js","webpack:///./sources/utils/helpers.js","webpack:///./sources/utils/eventable.js","webpack:///./sources/core/lightbox/controls/base_control.js","webpack:///./sources/core/ui/grid/editors/editors/base.js","webpack:///./sources/core/ui/layout/cell.js","webpack:///./sources/core/lightbox/controls/select_control.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker_helpers/drop_target.js","webpack:///./sources/core/ui/mouse_event_container.js","webpack:///./sources/core/ui/timeline/timeline.js","webpack:///./sources/utils/env.js","webpack:///./sources/locale/locale.js","webpack:///./sources/core/worktime/calendar_arguments_helper.js","webpack:///./sources/utils/task_tree_helpers.js","webpack:///./sources/core/gantt_data_range.js","webpack:///./sources/core/datastore/power_array.js","webpack:///./sources/core/datastore/datastore.js","webpack:///./sources/core/ui/render/task_bar_render.js","webpack:///./sources/core/ui/grid/grid.js","webpack:///./sources/core/ui/row_position_mixin.js","webpack:///./sources/core/ui/timeline/scales.js","webpack:///./sources/core/ui/layout/layout.js","webpack:///./sources/utils/timeout.js","webpack:///./sources/core/destructor.js","webpack:///./sources/core/common/assert.js","webpack:///./sources/core/gantt_core.js","webpack:///./sources/core/touch.js","webpack:///./sources/css/skins/contrast_white.js","webpack:///./sources/css/skins/contrast_black.js","webpack:///./sources/css/skins/material.js","webpack:///./sources/css/skins/broadway.js","webpack:///./sources/css/skins/terrace.js","webpack:///./sources/css/skins/meadow.js","webpack:///./sources/css/skins/skyblue.js","webpack:///./sources/core/skin.js","webpack:///./sources/core/cached_functions.js","webpack:///./sources/core/data_task_types.gpl.js","webpack:///./sources/core/lightbox_optional_time.js","webpack:///./sources/core/lightbox/controls/parent_control.js","webpack:///./sources/core/lightbox/controls/duration_control.js","webpack:///./sources/core/lightbox/controls/radio_control.js","webpack:///./sources/core/lightbox/controls/checkbox_control.js","webpack:///./sources/utils/html_helpers.js","webpack:///./sources/core/lightbox/controls/time_control.js","webpack:///./sources/core/lightbox/controls/textarea_control.js","webpack:///./sources/core/lightbox/controls/template_control.js","webpack:///./sources/core/lightbox/index.js","webpack:///./sources/core/data.js","webpack:///./sources/core/facades/worktime_calendars.js","webpack:///./sources/core/worktime/strategy/no_work_time.js","webpack:///./sources/core/worktime/time_calculator.js","webpack:///./sources/core/worktime/strategy/calendar_workunit_cache.js","webpack:///./sources/core/worktime/strategy/calendar_strategy.js","webpack:///./sources/core/worktime/calendar_manager.js","webpack:///./sources/core/worktime/work_time.js","webpack:///./sources/core/load.js","webpack:///./sources/core/tasks.js","webpack:///./sources/core/wai_aria.js","webpack:///./sources/core/grid_column_api.gpl.js","webpack:///./sources/core/dynamic_loading.gpl.js","webpack:///./sources/core/plugins/auto_task_types.js","webpack:///./sources/core/plugins/new_task_placeholder.js","webpack:///./sources/core/plugins/resources.js","webpack:///./sources/core/plugins/dhtmlx_hooks.js","webpack:///./sources/core/plugins/jquery_hooks.js","webpack:///./sources/core/plugins/wbs.js","webpack:///./sources/core/plugins/batch_update.js","webpack:///./sources/core/plugins/autoscroll.js","webpack:///./sources/core/plugins/index.js","webpack:///./sources/core/dataprocessor/dataprocessor.js","webpack:///./sources/core/dataprocessor/live_update_hooks.js","webpack:///./sources/core/dataprocessor/hooks.js","webpack:///./sources/core/datastore/datastore_render.js","webpack:///./sources/core/datastore/select.js","webpack:///./sources/core/datastore/treedatastore.js","webpack:///./sources/core/facades/datastore_links.js","webpack:///./sources/core/facades/datastore_tasks.js","webpack:///./sources/core/facades/datastore.js","webpack:///./sources/core/datastore/datastore_hooks.js","webpack:///./sources/core/facades/layout.js","webpack:///./sources/core/data_task_layers.gpl.js","webpack:///./sources/core/ui/main_layout_initializer.js","webpack:///./sources/core/ui/timeline/links_dnd.js","webpack:///./sources/core/ui/timeline/tasks_dnd.js","webpack:///./sources/core/ui/timeline/main_timeline_initializer.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker_helpers/highlight.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker_helpers/multi_level.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker_helpers/locked_level.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd.js","webpack:///./sources/core/ui/grid/main_grid_initializer.js","webpack:///./sources/core/ui/render/task_grid_line_render.js","webpack:///./sources/core/ui/render/link_render.js","webpack:///./sources/core/ui/render/task_bg_render.js","webpack:///./sources/core/ui/render/task_split_render.js","webpack:///./sources/core/ui/grid/editors/editors/predecessor.js","webpack:///./sources/core/ui/grid/editors/editors/date.js","webpack:///./sources/core/ui/grid/editors/editors/select.js","webpack:///./sources/core/ui/grid/editors/editors/number.js","webpack:///./sources/core/ui/grid/editors/editors/text.js","webpack:///./sources/core/ui/grid/editors/keyboard_mappings/keyboard_navigation.js","webpack:///./sources/core/ui/grid/editors/keyboard_mappings/default.js","webpack:///./sources/core/ui/grid/editors/keyboard_mappings.js","webpack:///./sources/core/ui/grid/editors/controller.js","webpack:///./sources/core/ui/grid/grid_resize.gpl.js","webpack:///./sources/core/ui/timeline/tasks_canvas_render.gpl.js","webpack:///./sources/core/ui/layout/scrollbar_cell.js","webpack:///./sources/core/ui/layout/resizer_cell.gpl.js","webpack:///./sources/core/ui/layout/view_cell.js","webpack:///./sources/core/ui/layout/view_layout.js","webpack:///./sources/core/ui/render/render_factory.js","webpack:///./sources/core/ui/render/layer_engine.js","webpack:///./sources/core/ui/gantt_layers.js","webpack:///./sources/core/ui/mouse.js","webpack:///./sources/core/ui/configurable.js","webpack:///./sources/core/ui/ui_factory.js","webpack:///./sources/core/ui/index.js","webpack:///./sources/core/message.js","webpack:///./sources/utils/dom_event_scope.js","webpack:///./sources/core/common/state.js","webpack:///./sources/core/common/templates.js","webpack:///./sources/core/common/dnd.js","webpack:///./sources/core/common/date.js","webpack:///./sources/core/common/ajax.js","webpack:///./sources/core/common/config.js","webpack:///./sources/core/common/services.js","webpack:///./sources/core/common/import.js","webpack:///./sources/constants/index.js","webpack:///./sources/core/gantt.js","webpack:///./sources/core/deprecated_warnings.js","webpack:///./sources/dhtmlxgantt.gpl.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","seed","helpers","copy","result","isDate","Date","isArray","Array","length","isStringObject","String","isNumberObject","Number","isBooleanObject","Boolean","apply","defined","obj","mixin","target","source","force","f","undefined","uid","valueOf","functor","arguments","event","el","handler","capture","addEventListener","attachEvent","eventRemove","removeEventListener","detachEvent","elementPosition","elem","top","left","right","bottom","getBoundingClientRect","box","body","document","docElem","documentElement","parentNode","scrollTop","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","offsetWidth","offsetHeight","parseInt","offsetTop","offsetLeft","offsetParent","y","Math","round","x","width","height","isVisible","node","display","visibility","getComputedStyle","style","currentStyle","hasNonNegativeTabIndex","isNaN","getAttribute","hasHref","a","area","nodeName","loLowerCase","isEnabled","input","select","textarea","button","toLowerCase","hasAttribute","getClassName","className","baseVal","indexOf","_trimString","_slave","createElement","getTargetNode","e","tagName","srcElement","str","trim","this","replace","getNodePosition","getFocusableNodes","root","nodes","querySelectorAll","join","nodesArray","slice","splice","getScrollSize","div","cssText","appendChild","clientWidth","removeChild","addClassName","removeClassName","split","regEx","RegExp","insertNode","newone","innerHTML","child","firstChild","removeNode","getChildNodes","css","ch","childNodes","len","out","push","toNode","getElementById","querySelector","locateClassName","classname","strict","trg","ind","charAt","locateAttribute","attribute","getRelativeEventPosition","ev","clientX","clientY","isChildOf","parent","hasClass","element","classList","contains","test","b","__","constructor","units","second","minute","hour","day","week","month","quarter","year","arrayFilter","arr","callback","filter","getSecondsInUnit","unit","forEach","workArray","arrayMap","map","resArray","arrayFind","find","arrayDifference","item","arraySome","hashToArray","hash","sortArrayOfHash","field","desc","compare","sort","throttle","timeout","wait","setTimeout","pop","getFullYear","getMonth","getDate","Function","toString","delay","timer","clearTimeout","EventHost","_connected","_silent_mode","_silentStart","_silentEnd","createEventStorage","dhx_catch","z","res","zr","addEvent","removeEvent","id","eventHost","catcher","callObj","attachAll","callEvent","arg0","handlerName","concat","checkEvent","list","detachAllEvents","dummy","console","log","BaseControl","render","set_value","get_value","focus","gantt","BaseEditor","show","column","config","placeholder","hide","get_input","is_changed","currentValue","is_valid","save","utils","eventable","domHelpers","Cell","factory","$container","$parent","$config","headerHeight","$gantt","$domEvents","_createDomEventScope","$id","$name","$factory","destructor","$view","$services","getService","detach","_headerClickHandler","detachAll","cell","scrollTo","clear","getNode","padding","resize","final","$preResize","topCont","topSize","getSize","minWidth","maxWidth","minHeight","maxHeight","setSize","_hide","index","cellIndex","moveView","hidden","$toHTML","content","header","raw","html","canCollapse","$fill","init","self","toggle","delegate","collapsed","size","gravity","getContentSize","$lastSize","contentX","contentY","_getBorderSizes","borders","horizontal","vertical","_currentBorders","_borders","_sizeHeader","_sizeContent","_setBorders","view","cssHash","xLayout","floor","transform","__extends","htmlHelpers","_super","SelectControl","sns","getHtmlSelect","options","_dhx_onchange","onchange","_focus","createDropTargetObject","targetParent","targetIndex","targetId","nextSibling","prevSibling","nextSiblingTarget","dndTaskId","targetTaskId","store","getParent","getBranchIndex","prevSiblingTarget","firstChildTarget","lastChildTarget","children","getChildren","events","mouseEvents","h","ScaleHelper","topPositionMixin","canvasRender","Timeline","$scaleHelper","_findBinary","array","prev","low","high","container","$task","$task_scale","$task_data","$task_bg","$task_links","$task_bars","_tasks","col_width","full_width","trace_x","rendered","$getConfig","attr","linksAttr","bindLinks","item_attribute","link_attribute","layers","_createLayerConfig","tasks","linkLayers","links","_attachLayers","dataHeight","max","scale_height","refresh","backgroundImage","smart_rendering","rowStore","row_height","countVisible","scale","data_els","contentHeight","contentWidth","scrollHeight","scrollWidth","_refreshScales","smart_scales","scales","_scales","_getScaleChunkHtml","taskFilter","expose","renderer","$ui","taskBar","taskSplitBar","append","taskBg","static_background","link","_taskLayers","_linkLayers","getDatastore","taskRenderer","getDataRender","createDataRender","defaultContainer","taskLayers","layer","host","bar_layer","addLayer","_taskRenderer","getLayer","_initStaticBackgroundRender","linkStore","linkRenderer","linkLayer","_linkRenderer","staticRender","_staticBgHandler","getScale","_clearLayers","removeLayer","_render_tasks_scales","scales_html","outer_width","state","getState","_getScales","availWidth","autosize","autosize_min_width","cfgs","prepareConfigs","min_column_width","min_date","max_date","rtl","cfg","fromPos","toPos","templates","scale_row_class","cssClass","tplClass","_prepareScaleHtml","globalConfig","globalTemplates","cells","date","template","date_to_str","startIndex","endIndex","count","inherit_scale_class","scale_cell_class","cssclass","_waiAria","getTimelineCellAttr","dateFromPos","summ","part","_getColumnDuration","posFromDate","columnIndexByDate","assert","wholeCells","partCell","pos","min","days","trace_x_ascending","ignores","ignore_x","day_ind","transition","trace_index_transition","getItemPosition","task","start_date","end_date","xLeft","xRight","getItemTop","getItemHeight","task_height","offset","task_height_offset","primaryScale","subscales","sortScales","add","step","env","isIE","navigator","userAgent","isIE6","XMLHttpRequest","isIE7","isIE8","isOpera","isChrome","isKHTML","isFF","isIPad","search","isEdge","locale","month_full","month_short","day_full","day_short","labels","new_task","icon_save","icon_cancel","icon_details","icon_edit","icon_delete","confirm_closing","confirm_deleting","section_description","section_time","section_type","column_wbs","column_text","column_start_date","column_duration","column_add","confirm_link_deleting","link_start","link_end","type_task","type_project","type_milestone","minutes","hours","weeks","months","years","message_ok","message_cancel","IsWorkTimeArgument","calendar","ClosestWorkTimeArgument","dir","CalculateEndDateArgument","duration","GetDurationArgument","start","end","getWorkHoursArguments","setWorkTimeArguments","unsetWorkTimeArguments","isWorkTimeArguments","processedConfig","duration_unit","getClosestWorkTimeArguments","arg","_getStartEndConfig","param","argumentType","duration_step","getDurationArguments","hasDurationArguments","calculateEndDateArguments","copyLinkIdsArray","linkIds","targetHash","isLinkExists","getLink","copyLinkIds","$source","$target","getSubtreeLinks","rootId","isTaskExists","getTask","eachTask","getSubtreeTasks","_init_tasks_range","scale_unit","scale_offset_minimal","helper","_scale_range_unit","range","start_interval","resolveConfigRange","getSubtaskDates","dateRangeResolver","calculateEndDate","_min_date","_max_date","fit_tasks","old_min","old_max","_adjust_scales","$powerArray","$create","$removeAt","$remove","$find","$insertAt","data","$each","master","$map","$filter","powerArray","DataStore","pull","$initItem","initItem","visibleOrder","fullOrder","_skip_refresh","_filterRule","_searchVisibleOrder","_parseInner","loaded","parse","getItem","_updateOrder","code","updateItem","_removeItemInner","removeItem","_addItemInner","exists","silent","order","data_size","getVisibleItems","getIndexRange","addItem","_changeIdInner","oldId","newId","changeId","_moveInner","sindex","tindex","getIdByIndex","move","clearAll","arraysEqual","arr1","arr2","quick","oldOrder","serialize","eachItem","rule","filteredOrder","from","to","Infinity","ret","getItems","getIndexById","_getNullIfUndefined","getFirst","getLast","getNext","getPrev","_task_default_render","_isAllowedUnscheduledTask","$getTemplates","taskType","getTaskType","type","padd","types","milestone","link_line_width","setAttribute","show_progress","done","progress","pr","progressColor","backgroundColor","opacity","progress_text","position","wrapper","drag_progress","isReadonly","drag","markerPos","_render_task_progress","task_text","_render_task_content","textColor","color","basic","itemId","project","isSummaryTask","isSplitTask","select_task","selected_task","drag_id","drag_mode","touch_drag","link_source_id","link_target_id","highlight_critical_path","isCriticalTask","link_landing_area","from_id","from_start","link_from_start","to_start","link_to_start","allowDrag","isLinkAllowed","dragClass","_combine_item_class","task_class","styles","side","_get_link_crossing_css","_render_side_content","leftside_text","_render_leftside_content","rightside_text","_render_rightside_content","setTaskBarAttr","drag_resize","_render_pair","drag_links","show_links","outer","inner","showLinkPoints","touch","text","cond","leftside","start_to_start","finish_to_start","finish_to_finish","_get_conditions","ln","tp","type_renderers","defaultRenderer","gridResize","Grid","$state","gridAriaAttr","gridAttrString","gridDataAriaAttr","gridDataAttrString","$grid","gridScaleRowAttrString","$grid_scale","$grid_data","resizer","_renderHeaderResizers","doOnRender","_mouseDelegates","_addLayers","_initEvents","_validateColumnWidth","numericWidth","outerWidth","columns","getGridColumns","innerWidth","scrollable","_setColumnsWidth","grid_width","_getGridWidth","_initSmartRenderingPlaceholder","_calculateGridWidth","_renderGridHeader","getColumnIndex","getColumn","gridLine","_refreshPlaceholderOnStoreUpdate","scrollY","scroll","getView","getScrollState","scrollSize","$rowsPlaceholder","close","open","_getColumnWidth","min_width","min_grid_column_width","new_width","max_width","_getGridWidthLimits","min_limit","max_limit","newWidth","start_index","columns_width","final_width","extra_width","start_width","col","share","iterator","curExtra","_getColsTotalWidth","cols_width","v","parseFloat","unknown","gridWidth","autofit","diff","delta","changed","_setContentSize","reverse","lineHeigth","last","colWidth","_sort","direction","grid_header_class","label","gridScaleCellAttrString","lineHeight","getRowTop","task_id","dateHelper","services","getSum","sizes","setSumWidth","sum_width","parts","adjustSize","splitSize","full","cellSize","initTemplate","date_scale","min_coll_width","container_width","minDate","maxDate","heights","configs","main_scale","initScaleConfig","processIgnores","initColSizes","limitVisibleRange","unshift","alineScaleColumns","reverseScale","setPosSettings","indexes","trace_indexes","_ignore_time_config","skip_off_time","skip","probe","isWorkTime","display_count","min_col_width","line_height","cont_width","column_count","eachColumn","iterateScales","lower_scale","upper_scale","upper_dates","lower_dates","prevUpper","up","target_index","upper_start","upper_end","lower_start","lower_end","targetWidth","curr","tzOffset","getTimezoneOffset","_correct_dst_change","dates","lastDate","outDate","shared","Layout","_this","$root","_parseConfig","$cells","_resizeScrollbars","scrollbars","scrollbar","scrollChanged","visibleScrollbars","hiddenSrollbars","showScrollbar","hideScrollbar","shouldHide","shouldShow","visibleGroups","group","_syncCellSizes","groupName","newSize","groups","_eachChild","_syncGroupSize","_xLayout","getNextSibling","ownSize","resizeSibling","getPrevSibling","siblingSize","totalGravity","totalSize","k","mainGrid","$content","startStage","mainCall","_resizeInProgress","contentViews","getCellsByType","setContentSize","_getAutosizeMode","isChild","cellId","sub","alert","insertBefore","rows","cols","views","initUI","getCells","_cleanElSize","_getBoxStyles","computed","properties","boxSizing","clientHeight","MozBoxSizing","horPaddings","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","vertPaddings","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","borderBox","innerHeight","outerHeight","boxSizes","contentSizes","_sizes","margin","_calcFreeSpace","_free","_gravity","_calcSize","_configureBorders","borderClass","lastVisibleIndex","lastCell","borderColorClass","_updateCellVisibility","oldVisibleCells","_visibleCells","firstCall","visibleCells","cellView","marginSide","dx","dy","updPerSecond","_on_timeout","ceil","_eventRemoveAll","$layout","resetLightbox","_dp","check","message","show_errors","expire","calculateScaleRange","scroll_size","_reinit","_update_flags","initTemplates","_clearTaskLayers","_clearLinkLayers","reset","layout","createView","storeNames","refreshData","resizeDelay","getPropertyValue","resizeWatcher","tabIndex","contentWindow","addResizeListener","$mouseEvents","$click","buttons","edit","showLightbox","delete","question","title","confirm_deleting_title","_dhtmlx_confirm","$new","deleteTask","hideLightbox","posX","_getHorizontalScrollbar","codeScrollLeft","visible_date","task_scroll_offset","preserve_scroll","new_pos","showDate","setSizes","locate","targetAttribute","task_attribute","_locate_css","_locateHTML","getTaskRowNode","els","changeLightboxType","getLightboxType","_silent_redraw_lightbox","_get_link_type","start_to_finish","prevOffset","time_unit","offsetChanged","$data","tasksStore","_isSplitItem","_is_icon_open_click","getTaskDND","_tasks_dnd","touch_feedback","touch_feedback_duration","_prevent_touch_scroll","_touch_feedback","vibrate","touchEventsSupported","createEvent","_touch_events","touches","pageX","pageY","pointerEnabled","pointerType","msPointerEnabled","MSPOINTER_TYPE_MOUSE","touchHandlers","names","accessor","ignore","scroll_state","dblclicktime","action_mode","scroll_mode","action_start","long_tap_timer","current_target","start_drag","on_mouse_move","preventDefault","cancelBubble","abs","_touch_scroll_active","new_scroll_state","block_action","taskId","on_mouse_down","renders","_getTaskLayers","isTaskVisible","cloneNode","cloneTaskRendered","_start_dnd","_touch_drag","refreshTask","on_mouse_up","now","onDoubleClick","skins","link_arrow_size","lightbox_additional_height","_second_column_width","_third_column_width","material","_redefine_lightbox_buttons","buttons_left","buttons_right","getTaskNode","indx","broadway","_lightbox_template","_config_buttons_left","_config_buttons_right","gantt_delete_btn","gantt_save_btn","terrace","meadow","skyblue","_get_skin","skin","getElementsByTagName","href","match","skinset","_configure","resetSkin","activate","_cached_functions","update_if_changed","active","cache","critical_path_mode","wrap_methods","methods","_prefetch_originals","prefetch","methodname","original","optimizer","argumentsArray","args","get_arguments_hash","cached_values","has_cached_value","get_cached_value","cache_value","arguments_hash","is_date","getUTCDate","values","stringify_argument","deactivate","setup","override_gantt","gantt_methods","optimize_render","deactivTimeout","_extend_to_optional","lightbox_block","optional_time","section","mapping","_resolve_default_mapping","disable","val","enable","disabled","update_block","_lightbox_id","previousSibling","button_text","resizeLightbox","button_click","_get_typed_lightbox_config","form_blocks","duration_optional","time_optional","time","ParentControl","_display","item_id","getTaskByTime","allow_root","root_id","root_label","_filter","map_to","tmpDom","newOptions","onselect","replaceChild","DurationControl","_getStartDate","_time_format_order","_getDuration","getTimePicker","singleDate","single_date","readonly","lightboxDurationInputAttrString","duration_val","inps","btns","endspan","_calc_date","task_date","_change_duration","onclick","onkeydown","charCode","keyCode","which","constants","KEY_CODES","DOWN","UP","calculateDuration","_fill_lightbox_select","startDate","endDate","RadioControl","radio","default_value","checked","CheckboxControl","checkboxes","entry","attributes","_attributes","getHtmlOption","_getHtmlContainer","getHtmlButton","getHtmlDiv","getHtmlLabel","getHtmlInput","_getHtmlAttributes","tag","TimeControl","auto_end_date","_update_lightbox_select","selects","needSetTime","_getDate","mapOffset","_get_timepicker_step","_getEndDate","TextareaControl","_get_input","TemplateControl","ResourcesControl","getHtmlButtons","floatRight","_migrate_buttons","lightboxButtonAttrString","getHtmlTimePickerOptions","settings","start_year","end_year","tdate","timeFormat","year_range","first","_time_values","time_picker","setTime","getHours","getMinutes","_lightbox_methods","registerProvider","lightbox","getLightbox","_center_lightbox","showCover","_fill_lightbox","lightboxVisibleAttr","round_dnd_dates","timeline","_is_chart_visible","time_step","getLabel","sections","j","updateCollection","list_name","collection","serverList","_lightbox_type","lightboxDiv","fullWidth","classNames","_lightbox","_is_lightbox_timepicker","wide_form","lightboxAttr","drag_lightbox","onmousedown","_ready_to_dnd","onselectstart","cursor","_init_dnd_events","_render_sections","labelBlock","inputBlock","inputId","bindLabelsToInputs","_init_lightbox_events","block","con","scroll_top","scroll_left","view_height","_cover","_document_height","_scroll_height","lightbox_events","_save_lightbox","gantt_cancel_btn","_cancel_lightbox","src","sec","buttonTarget","SPACE","shiftKey","click","keys","edit_save","edit_cancel","getLightboxValues","addTask","updateTask","lightboxHiddenAttr","hideCover","_custom_lightbox","_set_lightbox_values","lightboxHeader","lightbox_header","task_time","substr","getLightboxSection","getValue","setValue","get_template_control","control","get_select_control","get_textarea_control","get_time_control","_move_while_dnd","_finish_dnd","_dnd_start_lb","gantt_unselectable","lb","_lb_start","ariaAttrs","date_part","time_format","getTimeFormat","limit_time_select","first_hour","last_hour","setHours","lightboxSelectAttrString","checkbox","resources","ok","opts","confirm","type_value","oldType","formData","updTask","isUnscheduledTask","unscheduled","show_unscheduled","taskStart","taskEnd","getGlobalTaskIndex","_defaultTaskDate","parent_id","getTaskByIndex","_set_default_task_timing","createTask","setParent","$open","details_on_create","selectTask","showTask","oldid","newid","unselect","getSelectedId","_get_task_timing_mode","task_type","$no_start","$no_end","$rendered_type","_init_task_timing","task_mode","dirty","resetProjectDates","taskMode","_assign_project_dates","getSubtaskDuration","taskTiming","_update_parents","pid","has_changed","oldStart","oldEnd","roundDate","upper","lower","colIndex","steps","correctTaskWorkTime","work_time","correct_work_time","getClosestWorkTime","calendarManager","timeCalculator","getWorkHours","setWorkTime","unsetWorkTime","_hasDuration","hasDuration","createCalendar","addCalendar","getCalendar","getCalendars","getTaskCalendar","deleteCalendar","CalendarDisabledTimeStrategy","argumentsHelper","_calculateDuration","fixedUnits","createArgumentsHelper","NoWorkTimeCalendar","TimeCalculator","$disabledCalendar","_getCalendar","manager","WorkUnitsCache","_cache","getTime","put","Cache","CalendarWorkTimeStrategy","_workingUnitsCache","_getUnitOrder","_timestamp","timestamp","UTC","_checkIfWorkingUnit","_isWorkTime","_is_work_day","_getWorkHours","_is_work_hour","_internDatesPull","_nextDate","_getWorkUnitsBetweenGeneric","stepStart","stepEnd","next","checkFirst","checkLast","isLastStep","_getHoursPerDay","_getWorkHoursForRange","_getWorkUnitsBetweenHours","firstDayStart","firstDayEnd","day_start","lastDayStart","lastDayEnd","startPart","endPart","hourRange","worktime","_setCalendar","_tryChangeCalendarSettings","payload","backup","JSON","stringify","_isEmptyCalendar","datesArray","isFullWeekSet","checkFullArray","getDay","reset_calendar","is_work_unit","mult","_calculateEndDate","added","_getClosestWorkTime","future_target","prev_target","tick","both_directins","inc","unitOrder","biggerTimeUnit","biggerTimeUnitSettings","CalendarWorktimeStrategy","CalendarManager","_calendars","_getDayHoursForMultiple","calendars","currPos","reduce","acc","mergeCalendars","newCalendar","_convertWorktimeSettings","parentCalendar","defaults","fulltime","apiCore","createDefaultCalendars","calendar_property","resource_calendars","resource","calendarId","worktimes","restoreConfigCalendars","global","worktimeFacadeFactory","facade","load","url","_load_url","cl","_load_type","ajax","on_load","xmlDoc","responseText","resp","_process_loading","collections","_load_collections","linksStore","initial_scroll","firstTask","collections_loaded","option","option_key","$ignore","json","dhx_security","security_key","serializeTask","_copyObject","serializeLink","_copyLink","xml_format","rawLinks","getLinks","xml","_xmlNodeToJSON","attrs_only","nodeType","nodeValue","_getCollections","loader","xpath","itms","attrs","_getXML","toptag","getXMLTopNode","xmltop","skey","evs","oldxml","startdate","est","enddate","predecessortasks","editable_property","readonly_property","htmlTags","extraSpaces","stripHTMLLite","htmlText","singleQuotes","escapeQuotes","getAttributeString","dateString","aria-label","_taskCommonAttr","tooltip_text","$dataprocessor_class","isSelectedTask","drag_move","taskRowAttr","order_branch","$level","hasChild","linkAttr","linkTypes","toStart","fromStart","drag_link","gridSeparatorAttr","buttonName","role","tabindex","headerText","time_option","aria-valuemin","multiselect","gridCellAttrString","textValue","gridAddButtonAttrString","messageButtonAttrString","buttonLabel","messageInfoAttr","messageModalAttr","quickInfoAttr","quickInfoHeaderAttrString","quickInfoHeader","quickInfoButtonAttrString","tooltipAttr","tooltipVisibleAttr","tooltipHiddenAttr","wai_aria_attributes","getGridColumn","callIfEnabled","auto_types","updateParents","childId","batchUpdate","checkParent","targetType","getTaskTypeToUpdate","updateTaskType","setTaskType","delTaskParent","allTypes","hasChildren","originalRowDndParent","originalMoveTaskParent","isParsingDone","updateAfterRemoveChild","sid","placeholder_task","insertPlaceholder","placeholders","getTaskBy","afterEdit","newTask","dataProcessor","_silencedPlaceholder","setUpdated","ready","action","commands","command","entity","createResourceMethods","resourceTaskCache","propertyName","propertyValue","filterResourceTasks","getResourceTasks","resourceIds","cacheKey","resourceHash","resourceValue","resource_id","getResourceLoad","resourceProperty","$role","timegrid","currDate","timetable","resource_render_empty_cells","calculateResourceLoad","renderBar","level","renderConnection","prevLevel","nextLevel","selectAssignments","resourceId","resource_property","owners","renderLine","resource_cell_class","resource_cell_value","row","renderHistogram","capacityMatrix","maxCapacity","capacity","histogram_cell_class","histogram_cell_label","fill","histogram_cell_allocated","histogram_cell_capacity","capacityElement","colStart","colEnd","bar","connection","renderHistogramLine","filterTasks","getResourceAssignments","assignments","resourceRow","resourceHistogram","resource_store","dhtmlx","attaches","attachGantt","cmp","attachObject","dataType","dataObj","that","vs","av","grid","border","gridId","gridObj","dhtmlXCellObject","jQuery","$","fn","dhx_gantt","each","newgantt","Gantt","getGanttInstance","error","wbs","_needRecalc","_isRecalcNeeded","_isGroupSort","_groups","is_active","_getWBSCode","_calcWBS","$virtual","$wbs","_setWBSCode","getWBSCode","getByWBSCode","currentNode","_isFirst","_prevSibling","_wbs","_parent","createWbs","resetCache","getTaskByWBSCode","createMethod","isActive","disableMethod","methodName","dummyMethod","restoreMethod","restoreMethods","batchUpdatePayload","batch_update","noRedraw","dp_mode","call_dp","updateMode","setUpdateMode","resetProjects","refreshLink","methodsHash","setGanttMode","sendData","scrollRange","scrollStep","scrollDelay","scrollSpeed","interval","isMove","delayTimeout","startPos","started","eventPos","isScrollState","dragMarker","isResize","isLink","defineDelayTimeout","speed","autoscroll_speed","setInterval","autoscroll_delay","defineScrollInterval","clearInterval","autoscrollInterval","isScroll","autoscroll","posY","need_scroll","scrollState","currentScrollTop","scrollOuterHeight","inner_height","scrollInnerHeight","currentScrollLeft","scrollOuterWidth","inner_width","scrollInnerWidth","autoscroll_step","boxSize","startCoord","serverProcessorURL","serverProcessor","action_param","updatedRows","autoUpdate","_tMode","_headers","_payload","post_delim","_waitMode","_in_progress","_invalid","mandatoryFields","messages","updated","inserted","deleted","invalid","invalid_cell","enableUTFencoding","setTransactionMode","total","headers","_tSend","_endnm","_serialize_as_json","escape","_utf","encodeURIComponent","setDataColumns","_columns","getSyncState","enableDataNames","enablePartialDataSend","_changed","dnd","rowId","findRow","existing","getUserData","set_invalid","setUserData","is_invalid","_clearUpdateFlag","markRow","_methods","details","checkBeforeUpdate","mytype","_h2","editStop","sendAllData","_beforeSendData","_getRowData","_sendData","_serializeAsJSON","serialize_one","stack","pref","serialized","_applyPayload","urlSeparator","a1","queryParams","ids","afterUpdate","a3","_user","a4","method","query","_forEachUpdatedRow","valid","_getAllData","stop","has_one","setVerificator","verifFunction","clearVerificator","pattern","defineAction","_uActions","afterUpdateCallback","tid","btag","marker","correct","soid","finalizeUpdate","cleanUpdate","atag","anObj","_dp_init","setOnAfterUpdate","enableDebug","setOnBeforeUpdateHandler","func","setAutoUpdate","user","_need_update","_update_busy","xml_node","afterAutoUpdate","fullSync","loadUpdate","getUpdates","_v","_a","version","vers","upds","status","updateCallback","upd","objData","xml_date","insertCallback","isExist","addLink","deleteCallback","deleteLink","dataprocessor","liveUpdateHooks","oldAfterUpdate","dataProcessorHandlers","dp","_serverProcessor","modes","_ganttMode","newState","reqUrl","filePath","_change_id","changeLinkId","changeTaskId","_row_style","row_id","_delete_task","_sendTaskOrder","$drop_target","clientSideDelete","clientOnly","treeHelper","cascadeDelete","cascade_delete","dpMode","cascade","itemLinks","getTaskLinks","updateLink","substring","detachDataProcessor","userdata","bindDataStore","itemRepainter","getLayers","render_item","renderers","render_items","skipRepaint","change_id","refreshId","selectedId","deleteItem","subItem","TreeDataStore","_branches","$parentProperty","parentProperty","$getRootId","$openInitially","openInitially","eachParent","_buildTree","_add_branch","calculateItemLevel","_move_branch","$rendered_parent","_replace_branch_child","_traverseBranches","branch","items","source_pid","tbranch","parentId","getSiblings","siblings","_setParentInner","new_pid","startItem","parentsHash","Error","added_already","old_parent","new_parent","old_id","new_id","newbranch","criteria","original_criteria","temp","getLinkCount","getTaskCount","getVisibleTaskCount","getTaskIndex","startTask","calculateTaskLevel","moveTask","createTasksFacade","createLinksFacade","createDatastoreSelect","datastoreRender","getDatastores","createDatastoreFacade","createDatastore","$StoreType","open_tree_initially","setService","storeList","stores","refresh_links","linkId","_clear_data","unselectTask","facadeFactory","parseDate","checkLinkedTaskVisibility","sync_link","sourceTask","targetTask","sync_link_delete","sync_links","mapEvents","conf","mapFrom","mapTo","sourceEvent","targetEvent","$index","oldState","sourceVisible","targetVisible","deletedLinks","onItemLoading","onBeforeAdd","onAfterAdd","onBeforeUpdate","onAfterUpdate","onBeforeDelete","onAfterDelete","onIdChange","onBeforeItemMove","onAfterItemMove","onFilterItem","onItemOpen","onItemClose","onBeforeSelect","onAfterSelect","onAfterUnselect","getTimeline","getGrid","getVerticalScrollbar","getHorizontalScrollbar","DEFAULT_VALUE","tryCall","fallback","getTaskTop","getTaskPosition","getTaskHeight","roundTaskDates","getLinkNode","oldH","oldV","newV","newH","date_x","scroll_to","_scroll_state","x_pos","y_pos","x_inner","y_inner","scrollVer","scrollHor","horState","visible","verState","addTaskLayer","addLinkLayer","initializer","_legacyGridResizerClass","resizers","gridResizer","onCreated","mainTimeline","show_chart","showGrid","show_grid","colsWidth","grid_limits","original_grid_width","skinSettings","_initScrollStateEvents","_getVerticalScrollbar","oldPos","newPos","$scroll_ver","$scroll_hor","_findGridResizer","gridFirst","_getSiblings","_behind","_front","onInitialized","resizeInfo","initialWidth","prevCellWidth","nextCellWidth","viewCell","limits","newBehindSize","newFrontSize","oldBackSize","oldFrontSize","newBackSize","oldSize","onDestroyed","initLinksDND","_link_landing","_link_target_task","_link_target_task_start","_link_source_task","_link_source_task_start","getDndState","DnD","sensitivity","updates_per_second","getLinePos","shift","isStart","taskPos","xEnd","yEnd","milestoneWidth","origWidth","sqrt","getVisibleMilestoneWidth","getMilestonePosition","isMilestone","updateMarkedHtml","drag_link_class","resetDndState","coordinateCircleQuarter","sX","eX","sY","eY","_dir_start","dd","getPosition","advanceMarker","landing","prevTarget","prevLanding","prevToStart","targ","_dir_end","targetChanged","s_x","s_y","e_x","e_y","_direction","getDirectionLine","link_direction_class","dist","pow","tan","angle","atan","PI","sin","cos","ieTransform","shiftLeft","shiftTop","showDirectingLine","createLinkDND","createTaskDND","extend","round_task_dates","dragMultiple","_events","before_start","before_finish","after_finish","_handlers","_domEvents","clear_drag_state","set_actions","drag_from_start","stage","_move","_resize","_resize_progress","attach","start_x","start_y","coords_x","_drag_task_coords","min_duration","diffValue","_find_max_shift","dragItems","correctShift","minX","maxX","maxShift","minShift","new_start","new_end","obj_s_x","obj_e_x","_mouse_position_change","_is_number","isFinite","_update_on_move","_update_item_on_move","curr_date","drag_project","initialDrag","childDrag","_get_drag_mode","_fix_dnd_scale_time","fixStart","fixEnd","_fix_working_times","_finalize_mouse_up","_fireEvent","_dhx_changed","dragProperty","params","trigger","drag_state","taskDnD","linkDnD","_linksDnD","_tasksDnD","_attachDomEvents","_attachStateProvider","extendDom","_clearDomEvents","_clearStateProvider","_delete_link_handler","link_description","coll","coll_date","scale_step","unregisterProvider","gridToPageCoordinates","gridPos","removeLineHighlight","markerLine","highlightPosition","ePos","gridHeight","getTaskMarkerPosition","pointerEvents","markerFolder","highlightFolder","linePos","indentNode","indent","itemTop","itemHeight","childCount","getLineMarkerPosition","highlightRow","dropTarget","relTargetPos","eventTop","findClosesTarget","allowedLevel","targetLevel","findTargetAbove","findTargetBelow","rootLevel","current","getLockedLevelTarget","getMultiLevelTarget","higlighter","dnd_sensitivity","hideQuickInfo","_hideQuickInfo","initial_open_state","outerHTML","drop_target","$transparent","getDropPosition","getTargetTaskId","lockLevel","order_branch_free","getStore","lastTaskOfLevel","last_item","_getGridPos","_getTargetY","_getTaskByY","dropIndex","targetY","over","nextId","prevId","rowDnd","rowDndMarker","extendGantt","ext","inlineEditors","_inlineEditors","createEditors","initEvents","clearEvents","scroll_on_click","sorting_method","callHandler","totalWidth","aria","date_grid","tree","grid_indent","grid_open","grid_folder","grid_blank","grid_file","align","grid_row_class","css_template","drawer","current_pos","dirs","down","path","point","get_lines","dots","line_to","get_path","line","_get_line","get_wrapper_sizes","wrapper_size","link_wrapper_width","get_line_sizes","line_size","marginTop","marginLeft","render_line","innerPos","get_direction","vect","path_builder","point_to","get_points","pt","get_endpoint","xy","shiftX","lineType","get_line_type","forward","sign","milestoneHeight","lines","cssTemplate","link_class","isCriticalLink","endpoint","line_width","_render_link_arrow","borderColor","show_task_cells","task_cell_class","odd","task_row_class","defaultRender","sub_tasks","PredecessorEditor","parseInputString","predecessors","delimiter","formatPredecessors","pred","getLinksDiff","predecessorCodes","selectedLinks","predecessor","lag","getSelectedLinks","existingLinksSearch","linksToAdd","linkKey","linksToDelete","remove","editor","linksDiff","autoSchedule","inputPredecessors","taskPredecessors","html5DateFormat","dateToStr","strToDate","DateEditor","str_to_date","parsed","SelectEditor","optionsHtml","NumberEditor","TextEditor","controller","onBlurDelay","keyNav","keyboardNavigation","activeCell","locateCell","columnName","editorState","getEditorConfig","startEdit","hasEditor","keyboard","preventKeyNav","ENTER","ctrlKey","metaKey","ESC","LEFT","RIGHT","editorType","DELETE","TAB","editPrevCell","editNextCell","onShow","onHide","destroy","keyboard_navigation","defaultPrevented","shouldPrevent","defaultMapping","keyNavMappings","setMapping","getMapping","keyboard_navigation_cells","getKeyboardMapping","textEditorFactory","numberEditorFactory","selectEditorFactory","dateEditorFactory","predecessorEditorFactory","initConfigs","editor_types","number","keyboardMapping","eventBus","inlineEditController","_createPlaceholder","_getEditorPosition","handlers","_itemId","_columnName","_editor","_editorType","_placeholder","editorConfig","_getItemValue","isChanged","newValue","oldValue","_findEditableCell","nextIndex","nextColumn","getNextCell","getFirstCell","getLastCell","canChangeRow","moveRow","editNextRow","editPrevRow","handlerId","ScrollbarCell","_scrollHorizontalHandler","_scrollVerticalHandler","_outerScrollVerticalHandler","_outerScrollHorizontalHandler","_mouseWheelHandler","_isHorizontal","scrollPosition","_isVertical","_initVertical","_initHorizontal","_initMouseWheel","_initLinkedViews","_getRootParent","_eachView","eachCell","_getLinkedViews","scrollX","_updateLinkedViews","scrollHorizontally","_scrolling","scrollVertically","_wheel_time","_oldLeft","_getScrollSize","outerSize","isHorizontal","linked","scrollProperty","innerSizeProperty","outerProperty","_getScrollOffset","cellScrollSize","nonScrollableSize","outerScroll","innerScroll","scrollSizes","_setScrollSize","toggleVisibility","_getScaleOffset","parentLayout","_oldTop","_checkWheelTarget","targetNode","connectedViews","ff","wx","deltaX","wheelDeltaX","wy","deltaY","wheelDelta","oldLeft","detail","oldTop","ViewCell","childConfig","$initialized","unload","outerX","outerY","childSize","ViewLayout","$cell","byMaxSize","otherCell","task_area_pulls","task_area_renderers","getRenderer","layer_attribute","dom","remove_item","clear_container","buffer","createDocumentFragment","vis","replace_item","newNode","restore","clearRenderers","renderFactoryProvider","mergeFilters","filter_methods","filter_method","renderFactory","createGroup","get_container","rel_root","defaultFilters","renderGroup","tempCollection","filters","_add","pending","topmost","rel","eachLayer","createLayerFactory","previusSiblingContainer","defaultContainerSibling","removeTaskLayer","_getLinkLayers","removeLinkLayer","createMouseHandler","eventHandlers","doubleclick","contextMenu","addEventTarget","onClick","findEventHandlers","callEventHandlers","onContextMenu","returnValue","delegateHandlers","handlerResult","details_on_dblclick","onMouseMove","_last_move_event","domEvents","eventName","elementHandlers","ViewSettings","extendSettings","parentSettings","own","parentView","parentConfig","parentTemplates","configurable","createFactory","createdViews","creator","configure","registerView","viewConstructor","uiFactory","createLayers","Resizer","Scrollbar","ResourceGrid","ResourceTimeline","ResourceHistogram","gridEditorsFactory","renderTaskBar","renderSplitTaskBar","renderTaskBg","renderLink","gridRenderer","mainGridInitializer","mainTimelineInitializer","mainLayoutInitializer","attachInitializer","layersEngine","layersApi","layersService","boxAttribute","_dhx_msg_cfg","usercall","modalBox","modal_key","messageBox","modality","cover","buttonAriaAttrs","getFirstDefined","_createBox","cancel","contentId","btn","_boxStructure","alertPopup","confirmPopup","boxPopup","box_params","focusable","timers","info","hideAll","popups","modalbox","createScope","stateProviders","internal","provider","regTemplates","initial","template_name","server_utc","api_date","task_unscheduled_time","grid_date_format","tooltip_date_format","copyDomEvent","altKey","_obj","_settings","inputMethods","getInputMethods","_drag_start_timer","clearDragTimer","original_target","dragStart","traceDragEvents","domElement","inputMethod","mousemove","dragMove","dragScroll","limited_mousemove","mouseup","dragEnd","checkPositionChange","diff_x","diff_y","initDnDMarker","backupEventTarget","domEvent","getEvent","backup_element","elementFromPoint","month_short_hash","month_full_hash","old","hour_start","time_part","week_start","start_on_monday","month_start","setDate","quarter_start","res_month","setMonth","year_start","setMinutes","minute_start","getSeconds","setSeconds","getMilliseconds","setMilliseconds","_add_days","ndate","setYear","add_quarter","to_fixed","num","format","utc","getISOWeek","getWeek","splt","mask","_getWeekNumber","isoWeek","nday","first_thursday","year_number","ordinal_date","getUTCISOWeek","convert_to_utc","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","DOMParser","parseFromString","ActiveXObject","async","loadXML","tagname","xhr","responseXML","xpathExp","docObj","selectNodes","ownerDocument","evaluate","XPathResult","ANY_TYPE","iterateNext","_call","onLoad","getSync","postData","del","post","postSync","getLong","postLong","longParams","isQt","onreadystatechange","readyState","setRequestHeader","toUpperCase","send","branch_loading","branch_loading_property","show_loading","dhx_save_btn","dhx_cancel_btn","dhx_delete_btn","project_sections","milestone_sections","grid_resizer_column_attribute","grid_resizer_attribute","keep_grid_width","grid_resize","prevent_default_scroll","service","$inject","templatesLoader","stateService","uiApi","createLayoutFacade","warnings","base"],"mappings":"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","file":"dhtmlxgantt.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/codebase/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 134);\n","var helpers = require(\"./helpers\");\n\nfunction copy(object) {\n\tvar i, result; // iterator, types array, result\n\n\tif (object && typeof object == \"object\") {\n\n\t\tswitch (true){\n\t\t\tcase (helpers.isDate(object)):\n\t\t\t\tresult = new Date(object);\n\t\t\t\tbreak;\n\t\t\tcase (helpers.isArray(object)):\n\t\t\t\tresult = new Array(object.length);\n\t\t\t\tfor(i = 0; i < object.length; i++){\n\t\t\t\t\tresult[i] = copy(object[i]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase (helpers.isStringObject(object)):\n\t\t\t\tresult = new String(object);\n\t\t\t\tbreak;\n\t\t\tcase (helpers.isNumberObject(object)):\n\t\t\t\tresult = new Number(object);\n\t\t\t\tbreak;\n\t\t\tcase (helpers.isBooleanObject(object)):\n\t\t\t\tresult = new Boolean(object);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresult = {};\n\t\t\t\tfor (i in object) {\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.apply(object, [i]))\n\t\t\t\t\t\tresult[i] = copy(object[i]);\n\t\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result || object;\n}\n\nfunction mixin (target, source, force){\n\tfor (var f in source)\n\t\tif (((target[f] === undefined) || force)) target[f]=source[f];\n\treturn target;\n}\n\nfunction defined(obj) {\n\treturn typeof(obj) != \"undefined\";\n}\n\nvar seed;\nfunction uid() {\n\tif (!seed)\n\t\tseed = (new Date()).valueOf();\n\n\tseed++;\n\treturn seed;\n}\n\n//creates function with specified \"this\" pointer\nfunction bind(functor, object){\n\tif(functor.bind)\n\t\treturn functor.bind(object);\n\telse\n\t\treturn function(){ return functor.apply(object,arguments); };\n}\n\nfunction event(el, event, handler, capture){\n\tif (el.addEventListener)\n\t\tel.addEventListener(event, handler, capture === undefined ? false : capture);\n\n\telse if (el.attachEvent)\n\t\tel.attachEvent(\"on\"+event, handler);\n}\n\nfunction eventRemove(el, event, handler, capture){\n\tif (el.removeEventListener)\n\t\tel.removeEventListener(event, handler, capture === undefined ? false : capture);\n\n\telse if (el.detachEvent)\n\t\tel.detachEvent(\"on\"+event, handler);\n}\n\n\nmodule.exports = {\n\tcopy: copy,\n\tdefined: defined,\n\tmixin: mixin,\n\tuid: uid,\n\tbind: bind,\n\tevent: event,\n\teventRemove: eventRemove\n};","//returns position of html element on the page\nfunction elementPosition(elem) {\n\tvar top=0, left=0, right=0, bottom=0;\n\tif (elem.getBoundingClientRect) { //HTML5 method\n\t\tvar box = elem.getBoundingClientRect();\n\t\tvar body = document.body;\n\t\tvar docElem = (document.documentElement ||\n\t\t\tdocument.body.parentNode ||\n\t\t\tdocument.body);\n\n\t\tvar scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n\t\tvar scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n\t\tvar clientTop = docElem.clientTop || body.clientTop || 0;\n\t\tvar clientLeft = docElem.clientLeft || body.clientLeft || 0;\n\t\ttop  = box.top +  scrollTop - clientTop;\n\t\tleft = box.left + scrollLeft - clientLeft;\n\n\t\tright = document.body.offsetWidth - box.right;\n\t\tbottom = document.body.offsetHeight - box.bottom;\n\t} else { //fallback to naive approach\n\t\twhile(elem) {\n\t\t\ttop = top + parseInt(elem.offsetTop,10);\n\t\t\tleft = left + parseInt(elem.offsetLeft,10);\n\t\t\telem = elem.offsetParent;\n\t\t}\n\n\t\tright = document.body.offsetWidth - elem.offsetWidth - left;\n\t\tbottom = document.body.offsetHeight - elem.offsetHeight - top;\n\t}\n\treturn { y: Math.round(top), x: Math.round(left), width:elem.offsetWidth, height:elem.offsetHeight, right: Math.round(right), bottom: Math.round(bottom) };\n}\n\nfunction isVisible(node){\n\tvar display = false,\n\t\tvisibility = false;\n\tif(window.getComputedStyle){\n\t\tvar style = window.getComputedStyle(node, null);\n\t\tdisplay = style[\"display\"];\n\t\tvisibility = style[\"visibility\"];\n\t}else if(node.currentStyle){\n\t\tdisplay = node.currentStyle[\"display\"];\n\t\tvisibility = node.currentStyle[\"visibility\"];\n\t}\n\treturn (display != \"none\" && visibility != \"hidden\");\n}\n\nfunction hasNonNegativeTabIndex(node){\n\treturn !isNaN(node.getAttribute(\"tabindex\")) && (node.getAttribute(\"tabindex\")*1 >= 0);\n}\n\nfunction hasHref(node){\n\tvar canHaveHref = {\"a\": true, \"area\": true};\n\tif(canHaveHref[node.nodeName.loLowerCase()]){\n\t\treturn !!node.getAttribute(\"href\");\n\t}\n\treturn true;\n}\n\nfunction isEnabled(node){\n\tvar canDisable = {\"input\":true, \"select\":true, \"textarea\":true, \"button\":true, \"object\":true};\n\tif(canDisable[node.nodeName.toLowerCase()]){\n\t\treturn !node.hasAttribute(\"disabled\");\n\t}\n\n\treturn true;\n}\n\nfunction getFocusableNodes(root){\n\tvar nodes = root.querySelectorAll([\n\t\t\"a[href]\",\n\t\t\"area[href]\",\n\t\t\"input\",\n\t\t\"select\",\n\t\t\"textarea\",\n\t\t\"button\",\n\t\t\"iframe\",\n\t\t\"object\",\n\t\t\"embed\",\n\t\t\"[tabindex]\",\n\t\t\"[contenteditable]\"\n\t].join(\", \"));\n\n\tvar nodesArray = Array.prototype.slice.call(nodes, 0);\n\tfor(var i = 0; i < nodesArray.length; i++){\n\t\tvar node = nodesArray[i];\n\t\tvar isValid = (hasNonNegativeTabIndex(node)  || isEnabled(node) || hasHref(node)) && isVisible(node);\n\t\tif(!isValid){\n\t\t\tnodesArray.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n\treturn nodesArray;\n}\n\nfunction getScrollSize(){\n\tvar div = document.createElement(\"div\");\n\tdiv.style.cssText=\"visibility:hidden;position:absolute;left:-1000px;width:100px;padding:0px;margin:0px;height:110px;min-height:100px;overflow-y:scroll;\";\n\n\tdocument.body.appendChild(div);\n\tvar width = div.offsetWidth-div.clientWidth;\n\tdocument.body.removeChild(div);\n\n\treturn width;\n}\n\nfunction getClassName(node){\n\tif(!node) return \"\";\n\n\tvar className = node.className || \"\";\n\tif(className.baseVal)//'className' exist but not a string - IE svg element in DOM\n\t\tclassName = className.baseVal;\n\n\tif(!className.indexOf)\n\t\tclassName = \"\";\n\n\treturn _trimString(className);\n}\n\nfunction addClassName(node, className){\n\tif (className && node.className.indexOf(className) === -1) {\n\t\tnode.className += \" \" + className;\n\t}\n}\n\nfunction removeClassName(node, name) {\n\tname = name.split(\" \");\n\tfor (var i = 0; i < name.length; i++) {\n\t\tvar regEx = new RegExp(\"\\\\s?\\\\b\" + name[i] + \"\\\\b(?![-_.])\", \"\");\n\t\tnode.className = node.className.replace(regEx, \"\");\n\t}\n}\n\nfunction hasClass(element, className){\n\tif ('classList' in element) {\n\t\treturn element.classList.contains(className);\n\t} else { \n\t\treturn new RegExp(\"\\\\b\" + className + \"\\\\b\").test(element.className);\n\t}\n}\n\nfunction toNode(node) {\n\tif (typeof node === \"string\") {\n\t\treturn (document.getElementById(node) || document.querySelector(node) || document.body);\n\t}\n\treturn node || document.body;\n}\n\nvar _slave = document.createElement(\"div\");\nfunction insert(node, newone) {\n\t_slave.innerHTML = newone;\n\tvar child = _slave.firstChild;\n\tnode.appendChild(child);\n\treturn child;\n}\n\nfunction remove(node) {\n\tif (node && node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\nfunction getChildren(node, css) {\n\tvar ch = node.childNodes;\n\tvar len = ch.length;\n\tvar out = [];\n\tfor (var i = 0; i < len; i++) {\n\t\tvar obj = ch[i];\n\t\tif (obj.className && obj.className.indexOf(css) !== -1) {\n\t\t\tout.push(obj);\n\t\t}\n\t}\n\treturn out;\n}\n\nfunction getTargetNode(e){\n\tvar trg;\n\tif (e.tagName)\n\t\ttrg = e;\n\telse {\n\t\te=e||window.event;\n\t\ttrg=e.target||e.srcElement;\n\t}\n\treturn trg;\n}\n\nfunction locateAttribute(e, attribute) {\n\tif(!attribute) return;\n\n\tvar trg = getTargetNode(e);\n\n\twhile (trg){\n\t\tif (trg.getAttribute){\t//text nodes has not getAttribute\n\t\t\tvar test = trg.getAttribute(attribute);\n\t\t\tif (test) return trg;\n\t\t}\n\t\ttrg=trg.parentNode;\n\t}\n\treturn null;\n}\n\nfunction _trimString(str){\n\tvar func = String.prototype.trim || function(){ return this.replace(/^\\s+|\\s+$/g, \"\"); };\n\treturn func.apply(str);\n}\n\nfunction locateClassName(e, classname, strict){\n\tvar trg = getTargetNode(e);\n\tvar css = \"\";\n\n\tif(strict === undefined)\n\t\tstrict = true;\n\n\twhile (trg){\n\t\tcss = getClassName(trg);\n\t\tif(css){\n\t\t\tvar ind = css.indexOf(classname);\n\t\t\tif (ind >= 0){\n\t\t\t\tif (!strict)\n\t\t\t\t\treturn trg;\n\n\t\t\t\t//check that we have exact match\n\t\t\t\tvar left = (ind === 0) || (!_trimString(css.charAt(ind - 1)));\n\t\t\t\tvar right = ((ind + classname.length >= css.length)) || (!_trimString(css.charAt(ind + classname.length)));\n\n\t\t\t\tif (left && right)\n\t\t\t\t\treturn trg;\n\t\t\t}\n\t\t}\n\t\ttrg=trg.parentNode;\n\t}\n\treturn null;\n}\n\n/*\nevent position relatively to DOM element\n */\nfunction getRelativeEventPosition(ev, node){\n\tvar d = document.documentElement;\n\tvar box = elementPosition(node);\n\n\treturn {\n\t\tx: ev.clientX + d.scrollLeft - d.clientLeft - box.x + node.scrollLeft,\n\t\ty: ev.clientY + d.scrollTop - d.clientTop - box.y + node.scrollTop\n\t};\n}\n\n\nfunction isChildOf(child, parent){\n\tif(!child || !parent){\n\t\treturn false;\n\t}\n\n\twhile(child && child != parent) {\n\t\tchild = child.parentNode;\n\t}\n\n\treturn child === parent;\n}\n\nmodule.exports = {\n\tgetNodePosition: elementPosition,\n\tgetFocusableNodes: getFocusableNodes,\n\tgetScrollSize: getScrollSize,\n\tgetClassName: getClassName,\n\taddClassName: addClassName,\n\tremoveClassName: removeClassName,\n\tinsertNode: insert,\n\tremoveNode: remove,\n\tgetChildNodes: getChildren,\n\ttoNode: toNode,\n\tlocateClassName:locateClassName,\n\tlocateAttribute: locateAttribute,\n\tgetTargetNode: getTargetNode,\n\tgetRelativeEventPosition: getRelativeEventPosition,\n\tisChildOf: isChildOf,\n\thasClass: hasClass\n};","module.exports = function (d, b) {\n\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\tfunction __() { this.constructor = d; }\n\td.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};","var units = {\n\t\"second\": 1,\n\t\"minute\": 60,\n\t\"hour\": 60 * 60,\n\t\"day\": 60 * 60 * 24,\n\t\"week\": 60 * 60 * 24 * 7,\n\t\"month\": 60 * 60 * 24 * 30,\n\t\"quarter\": 60 * 60 * 24 * 30 * 3,\n\t\"year\": 60 * 60 * 24 * 365\n};\nfunction getSecondsInUnit(unit){\n\treturn units[unit] || units.hour;\n}\n\nfunction forEach(arr, callback) {\n\tif (arr.forEach) {\n\t\tarr.forEach(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tcallback(workArray[i], i);\n\t\t}\n\t}\n}\n\nfunction arrayMap(arr, callback) {\n\tif (arr.map) {\n\t\treturn arr.map(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tvar resArray = [];\n\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tresArray.push(callback(workArray[i], i));\n\t\t}\n\t\treturn resArray;\n\t}\n}\n\n\nfunction arrayFind(arr, callback) {\n\tif (arr.find) {\n\t\treturn arr.find(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\treturn arr[i];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// iframe-safe array type check instead of using instanceof\nfunction isArray(obj){\n\tif(Array.isArray){\n\t\treturn Array.isArray(obj);\n\t}else{\n\t\t// close enough\n\t\treturn (obj && obj.length !== undefined && obj.pop && obj.push);\n\t}\n}\n\n// non-primitive string object, e.g. new String(\"abc\")\nfunction isStringObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function String() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Number(5)\nfunction isNumberObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Number() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Boolean(true)\nfunction isBooleanObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Boolean() { [native code] }\";\n}\n\nfunction isDate(obj) {\n\tif (obj && typeof obj === \"object\") {\n\t\treturn !!(obj.getFullYear && obj.getMonth && obj.getDate);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction arrayFilter(arr, callback) {\n\tvar result = [];\n\n\tif (arr.filter) {\n\t\treturn arr.filter(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\tresult[result.length] = arr[i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nfunction hashToArray(hash) {\n\tvar result = [];\n\n\tfor (var key in hash) {\n\t\tif (hash.hasOwnProperty(key)) {\n\t\t\tresult.push(hash[key]);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction arraySome(arr, callback) {\n\tif (arr.length === 0) return false;\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (callback(arr[i], i, arr)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction arrayDifference(arr, callback) {\n\treturn arrayFilter(arr, function(item, i) {\n\t\treturn !callback(item, i);\n\t});\n}\n\nfunction throttle (callback, timeout) {\n\tvar wait = false;\n\n\treturn function () {\n\t\tif (!wait) {\n\t\t\tcallback.apply(null, arguments);\n\t\t\twait = true;\n\t\t\tsetTimeout(function () {\n\t\t\t\twait = false;\n\t\t\t}, timeout);\n\t\t}\n\t};\n}\n\nfunction delay (callback, timeout){\n\tvar timer;\n\treturn function() {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(function(){\n\t\t\tcallback();\n\t\t}, timeout);\n\t};\n}\n\nfunction sortArrayOfHash(arr, field, desc) {\n\tvar compare = function(a, b) {\n\t\treturn a < b;\n\t};\n\n\tarr.sort(function(a, b) {\n\t\tif (a[field] === b[field]) return 0;\n\t\t\n\t\treturn desc ? compare(a[field], b[field]) : compare(b[field], a[field]);\n\t});\n}\n\nmodule.exports = {\n\tgetSecondsInUnit: getSecondsInUnit,\n\tforEach: forEach,\n\tarrayMap: arrayMap,\n\tarrayFind: arrayFind,\n\tarrayFilter: arrayFilter,\n\tarrayDifference: arrayDifference,\n\tarraySome: arraySome,\n\thashToArray: hashToArray,\n\tsortArrayOfHash: sortArrayOfHash,\n\tthrottle: throttle,\n\tisArray: isArray,\n\tisDate: isDate,\n\tisStringObject: isStringObject,\n\tisNumberObject: isNumberObject,\n\tisBooleanObject: isBooleanObject,\n\tdelay: delay\n};","var EventHost = function(){\n\tthis._connected = [];\n\tthis._silent_mode = false;\n};\n\nEventHost.prototype = {\n\t_silentStart: function() {\n\t\tthis._silent_mode = true;\n\t},\n\t_silentEnd: function() {\n\t\tthis._silent_mode = false;\n\t}\n};\n\nvar\tcreateEventStorage = function(obj) {\n\tvar dhx_catch = [];\n\tvar z = function(){\n\t\tvar res = true;\n\t\tfor (var i = 0; i < dhx_catch.length; i++){\n\t\t\tif (dhx_catch[i]){\n\t\t\t\tvar zr = dhx_catch[i].apply(obj, arguments);\n\t\t\t\tres=res&&zr;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\tz.addEvent=function(ev){\n\t\tif (typeof (ev) == \"function\")\n\t\t\treturn dhx_catch.push(ev)-1;\n\t\treturn false;\n\t};\n\tz.removeEvent=function(id){\n\t\tdhx_catch[id]=null;\n\t};\n\treturn z;\n};\n\nfunction makeEventable(obj){\n\n\tvar eventHost = new EventHost();\n\tobj.attachEvent=function(name, catcher, callObj){\n\t\tname='ev_'+name.toLowerCase();\n\t\tif (!eventHost[name])\n\t\t\teventHost[name] = createEventStorage(callObj||this);\n\n\t\treturn(name+':'+eventHost[name].addEvent(catcher)); //return ID (event name & event ID)\n\t};\n\tobj.attachAll = function(callback, callObj){\n\t\tthis.attachEvent('listen_all', callback, callObj);\n\t};\n\n\tobj.callEvent=function(name, arg0, callObj){\n\t\tif (eventHost._silent_mode) return true;\n\n\t\tvar handlerName = 'ev_'+name.toLowerCase();\n\n\t\tif (eventHost['ev_listen_all']){\n\t\t\teventHost['ev_listen_all'].apply(callObj || this, [name].concat(arg0));\n\t\t}\n\n\t\tif (eventHost[handlerName])\n\t\t\treturn eventHost[handlerName].apply(callObj || this, arg0);\n\t\treturn true;\n\t};\n\tobj.checkEvent=function(name){\n\t\treturn (!!eventHost['ev_'+name.toLowerCase()]);\n\t};\n\tobj.detachEvent=function(id){\n\t\tif (id){\n\t\t\tvar list = id.split(':');           //get EventName and ID\n\t\t\teventHost[list[0]].removeEvent(list[1]); //remove event\n\t\t}\n\t};\n\tobj.detachAllEvents = function(){\n\t\tfor (var name in eventHost){\n\t\t\tif (name.indexOf(\"ev_\") === 0)\n\t\t\t\tdelete eventHost[name];\n\t\t}\n\t};\n\n}\n\nmodule.exports = makeEventable;","function dummy() {\n\t// eslint-disable-next-line\n\tconsole.log(\"Method is not implemented.\"); \n}\nfunction BaseControl() {\n}\n\n// base methods will be runned in gantt context\nBaseControl.prototype.render = dummy; // arguments: sns\nBaseControl.prototype.set_value = dummy; // arguments: node, value, ev, sns(config)\nBaseControl.prototype.get_value = dummy; // arguments node, ev, sns(config)\nBaseControl.prototype.focus = dummy; // arguments: node\n\nmodule.exports = function(gantt) { // we could send current instance of gantt to module\n\treturn BaseControl;\n};","module.exports = function (gantt) {\n\n\tvar BaseEditor = function () {\n\t};\n\n\tBaseEditor.prototype = {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t},\n\t\thide: function () {\n\t\t},\n\t\tset_value: function (value, id, column, node) {\n\t\t\tthis.get_input(node).value = value;\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\treturn this.get_input(node).value || \"\";\n\t\t},\n\t\tis_changed: function (value, id, column, node) {\n\t\t\tvar currentValue = this.get_value(id, column, node);\n\t\t\tif (currentValue && value && currentValue.valueOf && value.valueOf) {\n\t\t\t\treturn currentValue.valueOf() != value.valueOf();\n\t\t\t} else {\n\t\t\t\treturn currentValue != value;\n\t\t\t}\n\t\t},\n\t\tis_valid: function (value, id, column, node) {\n\t\t\treturn true;\n\t\t},\n\n\t\tsave: function (id, column, node) {\n\n\t\t},\n\t\tget_input: function (node) {\n\t\t\treturn node.querySelector(\"input\");\n\t\t},\n\t\tfocus: function (node) {\n\t\t\tvar input = this.get_input(node);\n\t\t\tif (!input) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (input.focus) {\n\t\t\t\tinput.focus();\n\t\t\t}\n\n\t\t\tif (input.select) {\n\t\t\t\tinput.select();\n\t\t\t}\n\t\t}\n\t};\n\treturn BaseEditor;\n};","var utils = require(\"../../../utils/utils\"),\n\teventable = require(\"../../../utils/eventable\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\");\n\nvar Cell = (function () {\n\t\"use strict\";\n\n\tfunction Cell(parent, config, factory, gantt) {\n\t\tif (parent) {\n\t\t\tthis.$container = domHelpers.toNode(parent);\n\t\t\tthis.$parent = parent;\n\t\t}\n\t\t// save config\n\t\tthis.$config = utils.mixin(config, {\n\t\t\theaderHeight: 33\n\t\t});\n\t\tthis.$gantt = gantt;\n\t\tthis.$domEvents = gantt._createDomEventScope();\n\t\t// set id\n\t\tthis.$id = config.id || \"c\" + utils.uid();\n\n\t\tthis.$name = \"cell\";\n\t\tthis.$factory = factory;\n\n\t\teventable(this);\n\n\t}\n\n\tCell.prototype.destructor = function () {\n\t\tthis.$parent = this.$container = this.$view = null;\n\t\tvar mouse = this.$gantt.$services.getService(\"mouseEvents\");\n\t\tmouse.detach(\"click\", \"gantt_header_arrow\", this._headerClickHandler);\n\t\tthis.$domEvents.detachAll();\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\t};\n\tCell.prototype.cell = function (id) {\n\t\treturn null;\n\t};\n\n\tCell.prototype.scrollTo = function(left, top){\n\n\t\tif (left*1 == left){\n\t\t\tthis.$view.scrollLeft = left;\n\t\t}\n\t\tif(top*1 == top){\n\t\t\tthis.$view.scrollTop = top;\n\t\t}\n\t};\n\n\tCell.prototype.clear = function(){\n\t\tthis.getNode().innerHTML = \"\";\n\t\tthis.getNode().className = \"gantt_layout_content\";\n\t\tthis.getNode().style.padding = \"0\";\n\t};\n\n\tCell.prototype.resize = function (final) {\n\t\tif (this.$parent) {\n\t\t\treturn this.$parent.resize(final);\n\t\t}\n\n\t\tif(final === false){\n\t\t\tthis.$preResize = true;\n\t\t}\n\n\t\tvar topCont = this.$container;\n\t\tvar x = topCont.offsetWidth;\n\t\tvar y = topCont.offsetHeight;\n\t\tvar topSize = this.getSize();\n\t\tif (topCont === document.body) {\n\t\t\tx = document.body.offsetWidth;\n\t\t\ty = document.body.offsetHeight;\n\t\t}\n\t\tif (x < topSize.minWidth) {\n\t\t\tx = topSize.minWidth;\n\t\t}\n\t\tif (x > topSize.maxWidth) {\n\t\t\tx = topSize.maxWidth;\n\t\t}\n\t\tif (y < topSize.minHeight) {\n\t\t\ty = topSize.minHeight;\n\t\t}\n\t\tif (y > topSize.maxHeight) {\n\t\t\ty = topSize.maxHeight;\n\t\t}\n\t\tthis.setSize(x, y);\n\n\t\tif(!this.$preResize){\n\t\t//\tself.callEvent(\"onResize\", [x, y]);\n\t\t}\n\t\tthis.$preResize = false;\n\t};\n\n\tCell.prototype.hide = function () {\n\t\tthis._hide(true);\n\t\tthis.resize();\n\t};\n\tCell.prototype.show = function (force) {\n\t\tthis._hide(false);\n\t\tif (force && this.$parent) {\n\t\t\tthis.$parent.show();\n\t\t}\n\t\tthis.resize();\n\t};\n\tCell.prototype._hide = function (mode) {\n\t\tif (mode === true && this.$view.parentNode) {\n\t\t\tthis.$view.parentNode.removeChild(this.$view);\n\t\t}\n\t\telse if (mode === false && !this.$view.parentNode) {\n\t\t\tvar index = this.$parent.cellIndex(this.$id);\n\t\t\tthis.$parent.moveView(this, index);\n\t\t}\n\t\tthis.$config.hidden = mode;\n\t};\n\tCell.prototype.$toHTML = function (content, css) {\n\t\tif (content === void 0) { content = \"\"; }\n\t\tcss = [(css || \"\"), (this.$config.css || \"\")].join(\" \");\n\t\tvar obj = this.$config;\n\t\tvar header = \"\";\n\t\tif (obj.raw) {\n\t\t\tcontent = typeof obj.raw === \"string\" ? obj.raw : \"\";\n\t\t}\n\t\telse {\n\t\t\tif (!content) {\n\t\t\t\tcontent = \"<div class='gantt_layout_content' \"+(css ? \" class='\"+css+\"' \" : \"\")+\" >\" + (obj.html || \"\") + \"</div>\";\n\t\t\t}\n\t\t\tif (obj.header) {\n\t\t\t\tvar collapseIcon = obj.canCollapse ? \"<div class='gantt_layout_header_arrow'></div>\" : \"\";\n\t\t\t\theader = \"<div class='gantt_layout_header'>\" + collapseIcon + \"<div class='gantt_layout_header_content'>\" + obj.header + \"</div></div>\";\n\t\t\t}\n\t\t}\n\t\treturn \"<div class='gantt_layout_cell \" + css + \"' data-cell-id='\" + this.$id + \"'>\" + header + content + \"</div>\";\n\t};\n\tCell.prototype.$fill = function (node, parent) {\n\t\tthis.$view = node;\n\t\tthis.$parent = parent;\n\t\tthis.init();\n\t};\n\tCell.prototype.getNode = function () {\n\t\treturn (this.$view.querySelector(\"gantt_layout_cell\") || this.$view);\n\t};\n\tCell.prototype.init = function () {\n\t\t// [NOT-GOOD] code is executed for each component, while it still has only one handler, it is no good\n\n\t\tvar self = this;\n\n\t\tthis._headerClickHandler = function(e){\n\t\t\tvar cellId = domHelpers.locateAttribute(e, \"data-cell-id\");\n\t\t\tif(cellId == self.$id){\n\t\t\t\tself.toggle();\n\t\t\t}\n\t\t};\n\n\t\tvar mouse = this.$gantt.$services.getService(\"mouseEvents\");\n\t\tmouse.delegate(\"click\", \"gantt_header_arrow\", this._headerClickHandler);\n\n\t\tthis.callEvent(\"onReady\", []);\n\t};\n\tCell.prototype.toggle = function () {\n\t\tthis.$config.collapsed = !this.$config.collapsed;\n\t\tthis.resize();\n\t};\n\tCell.prototype.getSize = function () {\n\t\tvar size = {\n\t\t\theight: this.$config.height || 0,\n\t\t\twidth: this.$config.width || 0,\n\t\t\tgravity: this.$config.gravity || 1,\n\t\t\tminHeight: this.$config.minHeight || 0,\n\t\t\tminWidth: this.$config.minWidth || 0,\n\t\t\tmaxHeight: this.$config.maxHeight || 100000,\n\t\t\tmaxWidth: this.$config.maxWidth || 100000\n\t\t};\n\t\tif (this.$config.collapsed) {\n\t\t\tvar mode = this.$config.mode === \"x\";\n\t\t\tsize[mode ? \"width\" : \"height\"] = size[mode ? \"maxWidth\" : \"maxHeight\"] = this.$config.headerHeight;\n\t\t}\n\t\treturn size;\n\t};\n\n\tCell.prototype.getContentSize = function(){\n\n\t\tvar width = this.$lastSize.contentX;\n\t\tif(width !== width*1){\n\t\t\twidth = this.$lastSize.width;\n\t\t}\n\n\t\tvar height = this.$lastSize.contentY;\n\t\tif(height !== height*1){\n\t\t\theight = this.$lastSize.height;\n\t\t}\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t};\n\n\tCell.prototype._getBorderSizes = function(){\n\t\tvar borders = {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0,\n\t\t\thorizontal: 0,\n\t\t\tvertical: 0\n\t\t};\n\t\tif(this._currentBorders){\n\t\t\tif(this._currentBorders[this._borders.left]){\n\t\t\t\tborders.left = 1;\n\t\t\t\tborders.horizontal++;\n\t\t\t}\n\n\t\t\tif(this._currentBorders[this._borders.right]){\n\t\t\t\tborders.right = 1;\n\t\t\t\tborders.horizontal++;\n\t\t\t}\n\n\t\t\tif(this._currentBorders[this._borders.top]){\n\t\t\t\tborders.top = 1;\n\t\t\t\tborders.vertical++;\n\t\t\t}\n\n\t\t\tif(this._currentBorders[this._borders.bottom]){\n\t\t\t\tborders.bottom = 1;\n\t\t\t\tborders.vertical++;\n\t\t\t}\n\t\t}\n\n\t\treturn borders;\n\n\t};\n\n\tCell.prototype.setSize = function (x, y) {\n\t\tthis.$view.style.width = x + \"px\";\n\t\tthis.$view.style.height = y + \"px\";\n\n\t\tvar borders = this._getBorderSizes();\n\t\tvar contentY = y - borders.vertical;\n\t\tvar contentX = x - borders.horizontal;\n\n\t\tthis.$lastSize = { x: x, y: y, contentX: contentX, contentY: contentY };\n\t\tif (this.$config.header) {\n\t\t\tthis._sizeHeader();\n\t\t}else{\n\t\t\tthis._sizeContent();\n\t\t}\n\t};\n\n\tCell.prototype._borders = {\n\t\t\"left\":\"gantt_layout_cell_border_left\",\n\t\t\"right\":\"gantt_layout_cell_border_right\",\n\t\t\"top\":\"gantt_layout_cell_border_top\",\n\t\t\"bottom\":\"gantt_layout_cell_border_bottom\"\n\t};\n\n\tCell.prototype._setBorders = function(css, view){\n\t\tif(!view) {\n\t\t\tview = this;\n\t\t}\n\t\tvar node = view.$view;\n\n\t\tfor( var i in this._borders){\n\t\t\tdomHelpers.removeClassName(node, this._borders[i]);\n\t\t}\n\n\t\tif(typeof css == \"string\"){\n\t\t\tcss = [css];\n\t\t}\n\n\t\tvar cssHash = {};\n\n\t\tfor(var i = 0; i < css.length; i++){\n\t\t\tdomHelpers.addClassName(node, css[i]);\n\t\t\tcssHash[css[i]] = true;\n\t\t}\n\n\t\tview._currentBorders = cssHash;\n\t};\n\n\n\tCell.prototype._sizeContent = function(){\n\t\tvar content = this.$view.childNodes[0];\n\t\tif(content && content.className == \"gantt_layout_content\"){\n\t\t\tcontent.style.height = this.$lastSize.contentY + \"px\";\n\t\t}\n\t};\n\n\tCell.prototype._sizeHeader = function () {\n\t\tvar size = this.$lastSize;\n\t\tsize.contentY -= this.$config.headerHeight;\n\t\tvar header = this.$view.childNodes[0];\n\t\tvar content = this.$view.childNodes[1];\n\t\tvar xLayout = this.$config.mode === \"x\";\n\t\tif (this.$config.collapsed) {\n\t\t\tcontent.style.display = \"none\";\n\t\t\tif (xLayout) {\n\t\t\t\theader.className = \"gantt_layout_header collapsed_x\";\n\t\t\t\theader.style.width = size.y + \"px\";\n\t\t\t\tvar d = Math.floor(size.y / 2 - size.x / 2);\n\t\t\t\theader.style.transform = \"rotate(90deg) translate(\" + d + \"px, \" + d + \"px)\";\n\t\t\t\tcontent.style.display = \"none\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\theader.className = \"gantt_layout_header collapsed_y\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (xLayout) {\n\t\t\t\theader.className = \"gantt_layout_header\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\theader.className = \"gantt_layout_header vertical\";\n\t\t\t}\n\t\t\theader.style.width = 'auto';\n\t\t\theader.style.transform = '';\n\t\t\tcontent.style.display = \"\";\n\t\t\tcontent.style.height = size.contentY + \"px\";\n\t\t}\n\t\theader.style.height = this.$config.headerHeight + \"px\";\n\t};\n\treturn Cell;\n}());\n\nmodule.exports = Cell;\n","var __extends = require(\"../../../utils/extends\");\nvar htmlHelpers = require(\"../../../utils/html_helpers\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction SelectControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\t\n\t\treturn self; \n\t}\n\t\n\t__extends(SelectControl, _super);\n\t\n\tSelectControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"23\") + \"px\";\n\t\tvar html = \"<div class='gantt_cal_ltext' style='height:\" + height + \";'>\";\n\n\t\thtml += htmlHelpers.getHtmlSelect(sns.options, [{ key: \"style\", value: \"width:100%;\" }]);\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tSelectControl.prototype.set_value = function(node, value, ev, sns) {\n\t\tvar select = node.firstChild;\n\t\tif (!select._dhx_onchange && sns.onchange) {\n\t\t\tselect.onchange = sns.onchange;\n\t\t\tselect._dhx_onchange = true;\n\t\t}\n\t\tif (typeof value === \"undefined\")\n\t\t\tvalue = (select.options[0] || {}).value;\n\t\tselect.value = value || \"\";\n\t};\n\t\n\tSelectControl.prototype.get_value = function(node) {\n\t\treturn node.firstChild.value;\n\t};\n\t\n\tSelectControl.prototype.focus = function(node) {\n\t\tvar a = node.firstChild;\n\t\tgantt._focus(a, true);\n\t};\n\t\n\treturn SelectControl;\n};","/**\n * The state object for order branch drag and drop\n */\n\nvar utils = require(\"../../../../utils/utils\");\n\nmodule.exports = {\n\tcreateDropTargetObject: function createDropTargetObject(parent) {\n\t\tvar res = {\n\t\t\ttargetParent: null,\n\t\t\ttargetIndex: 0,\n\t\t\ttargetId: null,\n\t\t\tchild: false,\n\t\t\tnextSibling: false,\n\t\t\tprevSibling: false\n\t\t};\n\n\t\tif (parent) {\n\t\t\tutils.mixin(res, parent, true);\n\t\t}\n\t\treturn res;\n\t},\n\tnextSiblingTarget: function nextSiblingTarget(dndTaskId, targetTaskId, store) {\n\t\tvar result = this.createDropTargetObject();\n\t\tresult.targetId = targetTaskId;\n\t\tresult.nextSibling = true;\n\t\tresult.targetParent = store.getParent(result.targetId);\n\t\tresult.targetIndex = store.getBranchIndex(result.targetId);\n\t\tif(store.getParent(dndTaskId) == result.targetParent && result.targetIndex < store.getBranchIndex(dndTaskId)){\n\t\t\tresult.targetIndex += 1;\n\t\t}\n\t\treturn result;\n\t},\n\tprevSiblingTarget: function prevSiblingTarget(dndTaskId, targetTaskId, store) {\n\t\tvar result = this.createDropTargetObject();\n\t\tresult.targetId = targetTaskId;\n\t\tresult.prevSibling = true;\n\t\tresult.targetParent = store.getParent(result.targetId);\n\t\tresult.targetIndex = store.getBranchIndex(result.targetId);\n\t\tif(store.getParent(dndTaskId) == result.targetParent && result.targetIndex > store.getBranchIndex(dndTaskId)){\n\t\t\tresult.targetIndex -= 1;\n\t\t}\n\t\treturn result;\n\t},\n\tfirstChildTarget: function firstChildTarget(dndTaskId, targetTaskId, store) {\n\t\tvar result = this.createDropTargetObject();\n\t\tresult.targetId = targetTaskId;\n\t\tresult.targetParent = result.targetId;\n\t\tresult.targetIndex = 0;\n\t\tresult.child = true;\n\t\treturn result;\n\t},\n\tlastChildTarget: function lastChildTarget(dndTaskId, targetTaskId, store) {\n\t\tvar children = store.getChildren(targetTaskId);\n\t\tvar result = this.createDropTargetObject();\n\t\tresult.targetId = children[children.length - 1];\n\t\tresult.targetParent = targetTaskId;\n\t\tresult.targetIndex = children.length;\n\t\tresult.nextSibling = true;\n\t\treturn result;\n\t}\n};","function create(gantt){\n\tvar events = [];\n\n\treturn {\n\t\tdelegate:function(event, className, handler, root) {\n\t\t\tevents.push([event, className, handler, root]);\n\n\t\t\tvar helper = gantt.$services.getService(\"mouseEvents\");\n\t\t\thelper.delegate(event, className, handler, root);\n\t\t},\n\t\tdestructor: function(){\n\t\t\tvar mouseEvents = gantt.$services.getService(\"mouseEvents\");\n\t\t\tfor(var i = 0; i < events.length; i++){\n\t\t\t\tvar h = events[i];\n\t\t\t\tmouseEvents.detach(h[0], h[1], h[2], h[3]);\n\t\t\t}\n\t\t\tevents = [];\n\t\t}\n\t};\n}\n\nmodule.exports = create;","var ScaleHelper = require(\"./scales_ignore\");\nvar eventable = require(\"../../../utils/eventable\");\nvar utils = require(\"../../../utils/utils\");\nvar topPositionMixin = require(\"../row_position_mixin\");\nvar canvasRender = require(\"./tasks_canvas_render\");\n\nvar Timeline = function(parent, config, factory, gantt){\n\tthis.$config = utils.mixin({}, config || {});\n\tthis.$scaleHelper = new ScaleHelper(gantt);\n\tthis.$gantt = gantt;\n\teventable(this);\n};\n\nTimeline.prototype = {\n\tinit: function(container){\n\t\tcontainer.innerHTML += \"<div class='gantt_task' style='width:inherit;height:inherit;'></div>\";\n\t\tthis.$task = container.childNodes[0];\n\n\t\tthis.$task.innerHTML = \"<div class='gantt_task_scale'></div><div class='gantt_data_area'></div>\";\n\t\tthis.$task_scale = this.$task.childNodes[0];\n\n\t\tthis.$task_data = this.$task.childNodes[1];\n\t\tthis.$task_data.innerHTML = \"<div class='gantt_task_bg'></div><div class='gantt_links_area'></div><div class='gantt_bars_area'></div>\";\n\t\tthis.$task_bg = this.$task_data.childNodes[0];\n\t\tthis.$task_links = this.$task_data.childNodes[1];\n\t\tthis.$task_bars = this.$task_data.childNodes[2];\n\n\t\tthis._tasks = {\n\t\t\tcol_width: 0,\n\t\t\twidth: [], // width of each column\n\t\t\tfull_width: 0, // width of all columns\n\t\t\ttrace_x: [],\n\t\t\trendered: {}\n\t\t};\n\n\t\tvar config = this.$getConfig();\n\t\tvar attr = config[this.$config.bind + \"_attribute\"];\n\t\tvar linksAttr = config[this.$config.bindLinks + \"_attribute\"];\n\t\tif(!attr && this.$config.bind){\n\t\t\tattr = this.$config.bind + \"_id\";\n\t\t}\n\t\tif(!linksAttr && this.$config.bindLinks){\n\t\t\tlinksAttr = this.$config.bindLinks + \"_id\";\n\t\t}\n\t\tthis.$config.item_attribute = attr || null;\n\t\tthis.$config.link_attribute = linksAttr || null;\n\n\t\tvar layers = this._createLayerConfig();\n\t\tif(!this.$config.layers){\n\t\t\tthis.$config.layers = layers.tasks;\n\t\t}\n\t\tif(!this.$config.linkLayers){\n\t\t\tthis.$config.linkLayers = layers.links;\n\t\t}\n\n\t\tthis._attachLayers(this.$gantt);\n\t\tthis.callEvent(\"onReady\", []);\n\t\t//this.refresh();\n\t},\n\n\tsetSize: function(width, height){\n\t\tvar config = this.$getConfig();\n\n\t\tif(width*1 === width){\n\t\t\tthis.$config.width = width;\n\t\t}\n\t\tif(height*1 === height){\n\n\t\t\tthis.$config.height = height;\n\t\t\tvar dataHeight = Math.max(this.$config.height - config.scale_height);\n\t\t\tthis.$task_data.style.height = dataHeight + 'px';\n\t\t}\n\n\t\tthis.refresh();\n\t\tthis.$task_bg.style.backgroundImage = \"\";\n\n\t\tif(config.smart_rendering && this.$config.rowStore){\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tthis.$task_bg.style.height = config.row_height * store.countVisible() +\"px\";\n\t\t}else{\n\t\t\tthis.$task_bg.style.height = \"\";\n\t\t}\n\n\t\tvar scale = this._tasks;\n\t\t//timeline area layers\n\t\tvar data_els = this.$task_data.childNodes;\n\t\tfor(var i= 0, len = data_els.length; i < len; i++){\n\t\t\tvar el = data_els[i];\n\t\t\tif(el.hasAttribute(\"data-layer\") && el.style)\n\t\t\t\tel.style.width = scale.full_width + \"px\";\n\t\t}\n\t},\n\n\tisVisible: function(){\n\t\tif(this.$parent && this.$parent.$config){\n\t\t\treturn !this.$parent.$config.hidden;\n\t\t}else{\n\t\t\treturn this.$task.offsetWidth;\n\t\t}\n\t},\n\n\tgetSize: function(){\n\t\tvar config = this.$getConfig();\n\t\tvar store = this.$config.rowStore;\n\n\t\tvar contentHeight = store ? config.row_height * store.countVisible() : 0,\n\t\t\tcontentWidth = this._tasks.full_width;\n\n\t\treturn {\n\t\t\tx: this.$config.width,\n\t\t\ty: this.$config.height,\n\t\t\tcontentX: this.isVisible() ? contentWidth : 0,\n\t\t\tcontentY: this.isVisible() ? (config.scale_height + contentHeight) : 0,\n\t\t\tscrollHeight: this.isVisible() ? contentHeight : 0,\n\t\t\tscrollWidth: this.isVisible() ? contentWidth : 0\n\t\t};\n\t},\n\n\tscrollTo: function(left, top){\n\t\tif(!this.isVisible())\n\t\t\treturn;\n\n\t\tif(top*1 === top){\n\t\t\tthis.$config.scrollTop = top;\n\t\t\tthis.$task_data.scrollTop = this.$config.scrollTop;\n\t\t}\n\t\tif (left*1 === left){\n\t\t\tthis.$task.scrollLeft = left;\n\t\t\tthis.$config.scrollLeft = this.$task.scrollLeft;\n\t\t\tthis._refreshScales();\n\t\t}\n\t},\n\n\t_refreshScales: function _refreshScales() {\n\t\tif(!this.isVisible())\n\t\t\treturn;\n\n\t\tvar config = this.$getConfig();\n\t\tif (!config.smart_scales) return;\n\n\t\tvar x = this.$config.scrollLeft;\n\t\tvar width = this.$config.width;\n\n\t\tvar scales = this._scales;\n\t\tthis.$task_scale.innerHTML = this._getScaleChunkHtml(scales, x, x + width);\n\t},\n\t_createLayerConfig: function(){\n\t\tvar self = this;\n\t\tvar taskFilter = function(){\n\t\t\treturn self.isVisible();\n\t\t};\n\n\t\tvar taskLayers = [\n\t\t\t{\n\t\t\t\texpose: true,\n\t\t\t\trenderer: this.$gantt.$ui.layers.taskBar,\n\t\t\t\tcontainer: this.$task_bars,\n\t\t\t\tfilter: [taskFilter]\n\t\t\t},\n\t\t\t{\n\t\t\t\trenderer: this.$gantt.$ui.layers.taskSplitBar,\n\t\t\t\tfilter: [taskFilter],\n\t\t\t\tcontainer: this.$task_bars,\n\t\t\t\tappend: true\n\t\t\t},\n\t\t\t{\n\t\t\t\trenderer: this.$gantt.$ui.layers.taskBg,\n\t\t\t\tcontainer: this.$task_bg,\n\t\t\t\tfilter: [\n\t\t\t\t\tfunction(){\n\t\t\t\t\t\treturn !self.$getConfig().static_background;\n\t\t\t\t\t},\n\t\t\t\t\ttaskFilter\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\n\t\tvar linkLayers = [\n\t\t\t{\n\t\t\t\texpose: true,\n\t\t\t\trenderer: this.$gantt.$ui.layers.link,\n\t\t\t\tcontainer: this.$task_links,\n\t\t\t\tfilter: [taskFilter]\n\t\t\t}\n\t\t];\n\n\t\treturn {\n\t\t\ttasks: taskLayers,\n\t\t\tlinks: linkLayers\n\t\t};\n\n\t},\n\n\t_attachLayers: function(gantt){\n\t\tthis._taskLayers = [];\n\t\tthis._linkLayers = [];\n\n\t\tvar self = this;\n\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\n\t\tif(this.$config.bind){\n\n\t\t\tself.$config.rowStore = self.$gantt.getDatastore(self.$config.bind);\n\n\t\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\n\t\t\tif(!taskRenderer){\n\t\t\t\ttaskRenderer = layers.createDataRender({\n\t\t\t\t\tname: this.$config.bind,\n\t\t\t\t\tdefaultContainer: function(){ return self.$task_data;}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttaskRenderer.container = function(){ return self.$task_data;};\n\n\t\t\tvar taskLayers = this.$config.layers;\n\t\t\tfor(var i = 0; taskLayers && i < taskLayers.length; i++){\n\t\t\t\tvar layer = taskLayers[i];\n\n\t\t\t\tif(typeof layer == \"string\"){\n\t\t\t\t\tlayer = this.$gantt.$ui.layers[layer];\n\t\t\t\t}\n\n\t\t\t\tif(typeof layer == \"function\"){\n\t\t\t\t\tlayer = {renderer: layer};\n\t\t\t\t}\n\n\t\t\t\tlayer.host = this;\n\t\t\t\tvar bar_layer = taskRenderer.addLayer(layer);\n\t\t\t\tthis._taskLayers.push(bar_layer);\n\t\t\t\tif(layer.expose){\n\t\t\t\t\tthis._taskRenderer = taskRenderer.getLayer(bar_layer);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._initStaticBackgroundRender();\n\t\t}\n\n\t\tif(this.$config.bindLinks){\n\t\t\tself.$config.linkStore = self.$gantt.getDatastore(self.$config.bindLinks);\n\n\t\t\tvar linkRenderer = layers.getDataRender(this.$config.bindLinks);\n\n\t\t\tif(!linkRenderer){\n\t\t\t\tlinkRenderer = layers.createDataRender({\n\t\t\t\t\tname: this.$config.bindLinks,\n\t\t\t\t\tdefaultContainer: function(){ return self.$task_data;}\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar linkLayers = this.$config.linkLayers;\n\t\t\tfor(var i = 0; linkLayers && i < linkLayers.length; i++){\n\n\t\t\t\tif(typeof layer == \"string\"){\n\t\t\t\t\tlayer = this.$gantt.$ui.layers[layer];\n\t\t\t\t}\n\n\t\t\t\tvar layer = linkLayers[i];\n\t\t\t\tlayer.host = this;\n\t\t\t\tvar linkLayer = linkRenderer.addLayer(layer);\n\t\t\t\tthis._taskLayers.push(linkLayer);\n\t\t\t\tif(linkLayers[i].expose){\n\t\t\t\t\tthis._linkRenderer = linkRenderer.getLayer(linkLayer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_initStaticBackgroundRender: function(){\n\t\tvar self = this;\n\t\tvar staticRender = canvasRender.create();\n\t\tvar store = self.$config.rowStore;\n\t\tif(!store) return;\n\n\t\tthis._staticBgHandler = store.attachEvent(\"onStoreUpdated\", function(id, item, mode){\n\t\t\tif(id !== null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(!self.isVisible())\n\t\t\t\treturn;\n\t\t\tvar config = self.$getConfig();\n\t\t\tif(config.static_background) {\n\t\t\t\tvar store = self.$gantt.getDatastore(self.$config.bind);\n\t\t\t\tif (store) {\n\t\t\t\t\tstaticRender.render(self.$task_bg, config, self.getScale(), config.row_height * store.countVisible());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._initStaticBackgroundRender = function(){};//init once\n\t},\n\n\t_clearLayers: function(gantt){\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\t\tvar linkRenderer = layers.getDataRender(this.$config.bindLinks);\n\n\t\tif (this._taskLayers) {\n\t\t\tfor(var i = 0; i < this._taskLayers.length; i++){\n\t\t\t\ttaskRenderer.removeLayer(this._taskLayers[i]);\n\t\t\t}\n\t\t}\n\t\tif (this._linkLayers) {\n\t\t\tfor(var i = 0; i < this._linkLayers.length; i++){\n\t\t\t\tlinkRenderer.removeLayer(this._linkLayers[i]);\n\t\t\t}\n\t\t}\n\n\t\tthis._linkLayers = [];\n\t\tthis._taskLayers = [];\n\t},\n\n\t_render_tasks_scales: function _render_tasks_scales() {\n\t\tvar config = this.$getConfig();\n\n\t\tvar scales_html = \"\",\n\t\t\touter_width = 0,\n\t\t\tscale_height = 0;\n\n\t\tvar state = this.$gantt.getState();\n\n\t\tif (this.isVisible()) {\n\t\t\tvar helpers = this.$scaleHelper;\n\t\t\tvar scales = this._getScales();\n\t\t\tscale_height = config.scale_height;\n\n\t\t\tvar availWidth = this.$config.width;\n\t\t\tif(config.autosize == \"x\" || config.autosize == \"xy\"){\n\t\t\t\tavailWidth = Math.max(config.autosize_min_width, 0);\n\t\t\t}\n\n\t\t\tvar cfgs = helpers.prepareConfigs(scales, config.min_column_width, availWidth, scale_height - 1, state.min_date, state.max_date, config.rtl);\n\t\t\tvar cfg = this._tasks = cfgs[cfgs.length - 1];\n\t\t\tthis._scales = cfgs;\n\n\t\t\tscales_html = this._getScaleChunkHtml(cfgs, 0, this.$config.width);\n\n\t\t\touter_width = cfg.full_width + \"px\";//cfg.full_width + (this._scroll_sizes().y ? scrollSizes.scroll_size : 0) + \"px\";\n\t\t\tscale_height += \"px\";\n\t\t}\n\n\t\tthis.$task_scale.style.height = scale_height;\n\n\t\tthis.$task_data.style.width =\n\t\t\tthis.$task_scale.style.width = outer_width;\n\n\t\tthis.$task_scale.innerHTML = scales_html;\n\n\t},\n\n\t_getScaleChunkHtml: function _get_scale_chunk_html (scales, fromPos, toPos) {\n\t\tvar templates = this.$gantt.$services.templates();\n\t\tvar html = [];\n\n\t\tvar css = templates.scale_row_class;\n\t\tfor (var i = 0; i < scales.length; i++) {\n\t\t\tvar cssClass = \"gantt_scale_line\";\n\t\t\tvar tplClass = css(scales[i]);\n\t\t\tif (tplClass) {\n\t\t\t\tcssClass += \" \" + tplClass;\n\t\t\t}\n\n\t\t\thtml.push(\"<div class=\\\"\" + cssClass + \"\\\" style=\\\"height:\" + (scales[i].height) +\n\t\t\t\t\"px;position:relative;line-height:\" + (scales[i].height) + \"px\\\">\" + this._prepareScaleHtml(scales[i], fromPos, toPos) + \"</div>\");\n\t\t}\n\n\t\treturn html.join(\"\");\n\t},\n\t_prepareScaleHtml: function _prepare_scale_html(config, fromPos, toPos) {\n\t\tvar globalConfig = this.$getConfig();\n\t\tvar globalTemplates = this.$gantt.$services.templates();\n\n\t\tvar cells = [];\n\t\tvar date = null, content = null, css = null;\n\n\t\tif (config.template || config.date) {\n\t\t\tcontent = config.template || this.$gantt.date.date_to_str(config.date);\n\t\t}\n\n\t\tvar startIndex = 0,\n\t\t\tendIndex = config.count;\n\n\t\tif (globalConfig.smart_scales && (!isNaN(fromPos) && !isNaN(toPos))) {\n\t\t\tstartIndex = _findBinary(config.left, fromPos);\n\t\t\tendIndex = _findBinary(config.left, toPos) + 1;\n\t\t}\n\n\t\tcss = config.css || function () {\n\t\t\t};\n\t\tif (!config.css && globalConfig.inherit_scale_class) {\n\t\t\tcss = globalTemplates.scale_cell_class;\n\t\t}\n\n\t\tfor (var i = startIndex; i < endIndex; i++) {\n\t\t\tif (!config.trace_x[i]) break;\n\n\t\t\tdate = new Date(config.trace_x[i]);\n\t\t\tvar value = content.call(this, date),\n\t\t\t\twidth = config.width[i],\n\t\t\t\theight = config.height,\n\t\t\t\tleft = config.left[i],\n\t\t\t\tstyle = \"\",\n\t\t\t\ttemplate = \"\",\n\t\t\t\tcssclass = \"\";\n\n\t\t\tif (width) {\n\t\t\t\tvar position = globalConfig.smart_scales ? (\"position:absolute;left:\" + left + \"px\") : \"\";\n\n\t\t\t\tstyle = \"width:\" + (width) + \"px;height:\" + height + \"px;\" + position;\n\t\t\t\tcssclass = \"gantt_scale_cell\" + (i == config.count - 1 ? \" gantt_last_cell\" : \"\");\n\n\t\t\t\ttemplate = css.call(this, date);\n\t\t\t\tif (template) cssclass += \" \" + template;\n\n\t\t\t\tvar ariaAttr = this.$gantt._waiAria.getTimelineCellAttr(value);\n\t\t\t\tvar cell = \"<div class='\" + cssclass + \"'\" + ariaAttr + \" style='\" + style + \"'>\" + value + \"</div>\";\n\t\t\t\tcells.push(cell);\n\t\t\t} else {\n\t\t\t\t//do not render ignored cells\n\t\t\t}\n\n\t\t}\n\t\treturn cells.join(\"\");\n\t},\n\tdateFromPos: function dateFromPos(x) {\n\t\tvar scale = this._tasks;\n\t\tif (x < 0 || x > scale.full_width || !scale.full_width) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar ind = _findBinary(this._tasks.left, x);\n\t\tvar summ = this._tasks.left[ind];\n\n\t\tvar col_width = scale.width[ind] || scale.col_width;\n\t\tvar part = 0;\n\t\tif (col_width) {\n\t\t\tpart = (x - summ) / col_width;\n\t\t\tif(scale.rtl){\n\t\t\t\tpart = 1 - part;\n\t\t\t}\n\n\t\t}\n\n\t\tvar unit = 0;\n\t\tif (part) {\n\t\t\tunit = this._getColumnDuration(scale, scale.trace_x[ind]);\n\t\t}\n\n\t\tvar date = new Date(scale.trace_x[ind].valueOf() + Math.round(part * unit));\n\t\treturn date;\n\t},\n\tposFromDate: function posFromDate(date) {\n\t\tif (!this.isVisible())\n\t\t\treturn 0;\n\n\t\tvar ind = this.columnIndexByDate(date);\n\t\tthis.$gantt.assert(ind >= 0, \"Invalid day index\");\n\n\t\tvar wholeCells = Math.floor(ind);\n\t\tvar partCell = ind % 1;\n\n\t\tvar pos = this._tasks.left[Math.min(wholeCells, this._tasks.width.length - 1)];\n\t\tif (wholeCells == this._tasks.width.length)\n\t\t\tpos += this._tasks.width[this._tasks.width.length - 1];\n\t\t//for(var i=1; i <= wholeCells; i++)\n\t\t//\tpos += gantt._tasks.width[i-1];\n\n\t\tif (partCell) {\n\t\t\tif (wholeCells < this._tasks.width.length) {\n\t\t\t\tpos += this._tasks.width[wholeCells] * (partCell % 1);\n\t\t\t} else {\n\t\t\t\tpos += 1;\n\t\t\t}\n\n\t\t}\n\t\treturn Math.round(pos);\n\t},\n\tcolumnIndexByDate: function columnIndexByDate(date) {\n\t\tvar pos = new Date(date).valueOf();\n\t\tvar days = this._tasks.trace_x_ascending,\n\t\t\tignores = this._tasks.ignore_x;\n\n\t\tvar state = this.$gantt.getState();\n\n\t\tif (pos <= state.min_date) {\n\t\t\tif(this._tasks.rtl){\n\t\t\t\treturn days.length;\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t}\n\n\t\tif (pos >= state.max_date) {\n\t\t\tif(this._tasks.rtl){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn days.length;\n\t\t\t}\n\t\t}\n\n\t\t/*var day = null;\n\t\t for (var xind = 0, length = days.length-1; xind < length; xind++) {\n\t\t // | 8:00, 8:30 | 8:15 should be checked against 8:30\n\t\t // clicking at the most left part of the cell, say 8:30 should create event in that cell, not previous one\n\t\t day = +days[xind+1];\n\t\t if (pos < day && !ignores[day])\n\t\t break;\n\t\t }*/\n\n\t\tvar day_ind = _findBinary(days, pos);\n\t\tvar day = +days[day_ind];\n\t\twhile (ignores[day]) {\n\t\t\tday = +days[++day_ind];\n\t\t}\n\n\t\tvar transition = this._tasks.trace_index_transition;\n\t\tvar index = day_ind;\n\t\tif(!day){\n\t\t\tif(transition){\n\t\t\t\treturn transition[0];\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tvar part = ((date - days[day_ind]) / this._getColumnDuration(this._tasks, days[day_ind]));\n\t\tif(transition){\n\t\t\treturn transition[index] + (1 - part);\n\t\t}else{\n\t\t\treturn index + part;\n\t\t}\n\n\t\t//return day_ind + ((date - days[day_ind]) / this._getColumnDuration(this._tasks, days[day_ind]));\n\t},\n\tgetItemPosition:function (task, start_date, end_date) {\n\t\tvar xLeft, xRight, width;\n\t\tif(this._tasks.rtl){\n\t\t\txRight = this.posFromDate(start_date || task.start_date);\n\t\t\txLeft = this.posFromDate(end_date || task.end_date);\n\t\t}else{\n\t\t\txLeft = this.posFromDate(start_date || task.start_date);\n\t\t\txRight = this.posFromDate(end_date || task.end_date);\n\t\t}\n\t\twidth =  Math.max((xRight - xLeft), 0);\n\n\t\tvar y = this.getItemTop(task.id);\n\t\tvar height = this.getItemHeight();\n\t\treturn {\n\t\t\tleft: xLeft,\n\t\t\ttop: y,\n\t\t\theight: height,\n\t\t\twidth: width\n\t\t};\n\t},\n\n\tgetItemHeight: function(){\n\t\tvar config = this.$getConfig();\n\n\t\t// height of the bar item\n\t\tvar height = config.task_height;\n\n\t\tif (height == \"full\") {\n\t\t\tvar offset = config.task_height_offset || 5;\n\t\t\theight = config.row_height - offset;\n\t\t}\n\t\t//item height cannot be bigger than row height\n\t\theight = Math.min(height, config.row_height);\n\t\treturn Math.max(height, 0);\n\t},\n\n\tgetScale: function(){\n\t\treturn this._tasks;\n\t},\n\n\t_getScales: function _get_scales() {\n\t\tvar config = this.$getConfig();\n\t\tvar helpers = this.$scaleHelper;\n\t\tvar scales = [helpers.primaryScale()].concat(config.subscales);\n\n\t\thelpers.sortScales(scales);\n\t\treturn scales;\n\t},\n\n\t_getColumnDuration: function _get_coll_duration(scale, date) {\n\t\treturn this.$gantt.date.add(date, scale.step, scale.unit) - date;\n\t},\n\n\trefresh: function(){\n\t\tif(this.$config.bind) {\n\t\t\tthis.$config.rowStore = this.$gantt.getDatastore(this.$config.bind);\n\t\t}\n\n\t\tif(this.$config.bindLinks) {\n\t\t\tthis.$config.linkStore = this.$gantt.getDatastore(this.$config.bindLinks);\n\t\t}\n\n\t\tthis._initStaticBackgroundRender();\n\t\tthis._render_tasks_scales();\n\t},\n\n\tdestructor: function(){\n\t\tvar gantt = this.$gantt;\n\t\tthis._clearLayers(gantt);\n\n\t\tthis.$task = null;\n\t\tthis.$task_scale = null;\n\t\tthis.$task_data = null;\n\t\tthis.$task_bg = null;\n\t\tthis.$task_links = null;\n\t\tthis.$task_bars = null;\n\n\t\tthis.$gantt = null;\n\n\t\tif(this.$config.rowStore){\n\t\t\tthis.$config.rowStore.detachEvent(this._staticBgHandler);\n\t\t\tthis.$config.rowStore = null;\n\t\t}\n\t\tif(this.$config.linkStore){\n\t\t\tthis.$config.linkStore = null;\n\t\t}\n\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\n\t}\n};\n\nutils.mixin(Timeline.prototype, topPositionMixin());\n\nmodule.exports = Timeline;\n\nfunction _findBinary(array, target) {\n\t// modified binary search, target value not exactly match array elements, looking for closest one\n\n\tvar low = 0, high = array.length - 1, i, item, prev;\n\twhile (low <= high) {\n\n\t\ti = Math.floor((low + high) / 2);\n\t\titem = +array[i];\n\t\tprev = +array[i - 1];\n\t\tif (item < target) {\n\t\t\tlow = i + 1;\n\t\t\tcontinue;\n\t\t}\n\t\tif (item > target) {\n\t\t\tif (!(!isNaN(prev) && prev < target)) {\n\t\t\t\thigh = i - 1;\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\t// if target is between 'i' and 'i-1' return 'i - 1'\n\t\t\t\treturn i - 1;\n\t\t\t}\n\n\t\t}\n\t\twhile (+array[i] == +array[i + 1]) i++;\n\n\t\treturn i;\n\t}\n\treturn array.length - 1;\n}\n\n","var env = {\n\tisIE: (navigator.userAgent.indexOf(\"MSIE\") >= 0 || navigator.userAgent.indexOf(\"Trident\") >= 0),\n\tisIE6: (!window.XMLHttpRequest && navigator.userAgent.indexOf(\"MSIE\") >= 0),\n\tisIE7: (navigator.userAgent.indexOf(\"MSIE 7.0\") >= 0 && navigator.userAgent.indexOf(\"Trident\") < 0),\n\tisIE8: (navigator.userAgent.indexOf(\"MSIE 8.0\") >= 0 && navigator.userAgent.indexOf(\"Trident\") >= 0),\n\tisOpera: (navigator.userAgent.indexOf(\"Opera\") >= 0),\n\tisChrome: (navigator.userAgent.indexOf(\"Chrome\") >= 0),\n\tisKHTML: (navigator.userAgent.indexOf(\"Safari\") >= 0 || navigator.userAgent.indexOf(\"Konqueror\") >= 0),\n\tisFF: (navigator.userAgent.indexOf(\"Firefox\") >= 0),\n\tisIPad: (navigator.userAgent.search(/iPad/gi) >= 0),\n\tisEdge: (navigator.userAgent.indexOf(\"Edge\")!=-1)\n};\n\nmodule.exports = env;","module.exports = function(gantt) {\n\tgantt.locale = {\n\t\tdate: {\n\t\t\tmonth_full: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t\t\tmonth_short: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n\t\t\tday_full: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t\t\tday_short: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n\t\t},\n\t\tlabels: {\n\t\t\tnew_task: \"New task\",\n\t\t\ticon_save: \"Save\",\n\t\t\ticon_cancel: \"Cancel\",\n\t\t\ticon_details: \"Details\",\n\t\t\ticon_edit: \"Edit\",\n\t\t\ticon_delete: \"Delete\",\n\t\t\tconfirm_closing: \"\",//Your changes will be lost, are you sure?\n\t\t\tconfirm_deleting: \"Task will be deleted permanently, are you sure?\",\n\t\t\tsection_description: \"Description\",\n\t\t\tsection_time: \"Time period\",\n\t\t\tsection_type: \"Type\",\n\n\t\t\t/* grid columns */\n\t\t\tcolumn_wbs: \"WBS\",\n\t\t\tcolumn_text: \"Task name\",\n\t\t\tcolumn_start_date: \"Start time\",\n\t\t\tcolumn_duration: \"Duration\",\n\t\t\tcolumn_add: \"\",\n\n\t\t\t/* link confirmation */\n\t\t\tlink: \"Link\",\n\t\t\tconfirm_link_deleting: \"will be deleted\",\n\t\t\tlink_start: \" (start)\",\n\t\t\tlink_end: \" (end)\",\n\n\t\t\ttype_task: \"Task\",\n\t\t\ttype_project: \"Project\",\n\t\t\ttype_milestone: \"Milestone\",\n\n\t\t\tminutes: \"Minutes\",\n\t\t\thours: \"Hours\",\n\t\t\tdays: \"Days\",\n\t\t\tweeks: \"Week\",\n\t\t\tmonths: \"Months\",\n\t\t\tyears: \"Years\",\n\n\t\t\t/* message popup */\n\t\t\tmessage_ok: \"OK\",\n\t\t\tmessage_cancel: \"Cancel\"\n\n\t\t}\n\t};\n};\n\n","var utils = require(\"../../utils/utils\");\nvar helpers = require(\"../../utils/helpers\");\n\n\nfunction IsWorkTimeArgument(date, unit, task, id, calendar){\n\tthis.date = date;\n\tthis.unit = unit;\n\tthis.task = task;\n\tthis.id = id;\n\tthis.calendar = calendar;\n\treturn this;\n}\n\nfunction ClosestWorkTimeArgument(date, dir, unit, task, id, calendar){\n\tthis.date = date;\n\tthis.dir = dir;\n\tthis.unit = unit;\n\tthis.task = task;\n\tthis.id = id;\n\tthis.calendar = calendar;\n\treturn this;\n}\n\nfunction CalculateEndDateArgument(start_date, duration, unit, step, task, id, calendar){\n\tthis.start_date = start_date;\n\tthis.duration = duration;\n\tthis.unit = unit;\n\tthis.step = step;\n\tthis.task = task;\n\tthis.id = id;\n\tthis.calendar = calendar;\n\treturn this;\n}\n\nfunction GetDurationArgument(start, end, task, calendar) {\n\tthis.start_date = start;\n\tthis.end_date = end;\n\tthis.task = task;\n\tthis.calendar = calendar;\n\tthis.unit = null;\n\tthis.step = null;\n\treturn this;\n}\n\nvar calendarArgumentsHelper = function(gantt){\n\treturn {\n\t\tgetWorkHoursArguments: function () {\n\t\t\tvar config = arguments[0];\n\t\t\tif (helpers.isDate(config)) {\n\t\t\t\tconfig = {\n\t\t\t\t\tdate: config\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconfig = utils.mixin({}, config);\n\t\t\t}\n\t\t\treturn config;\n\t\t},\n\t\tsetWorkTimeArguments: function () {\n\t\t\treturn arguments[0];\n\t\t},\n\t\tunsetWorkTimeArguments: function () {\n\t\t\treturn arguments[0];\n\t\t},\n\t\tisWorkTimeArguments: function () {\n\t\t\tvar config = arguments[0];\n\t\t\tif(config instanceof IsWorkTimeArgument){\n\t\t\t\treturn config;\n\t\t\t}\n\n\t\t\tvar processedConfig;\n\t\t\tif (!config.date) {\n\t\t\t\t//IsWorkTimeArgument(date, unit, task, id, calendar)\n\t\t\t\tprocessedConfig = new IsWorkTimeArgument(arguments[0], arguments[1], arguments[2], null, arguments[3]);\n\t\t\t} else {\n\t\t\t\tprocessedConfig = new IsWorkTimeArgument(config.date, config.unit, config.task, null, config.calendar);\n\t\t\t}\n\n\t\t\tprocessedConfig.unit = processedConfig.unit || gantt.config.duration_unit;\n\n\t\t\treturn processedConfig;\n\t\t},\n\t\tgetClosestWorkTimeArguments: function (arg) {\n\t\t\tvar config = arguments[0];\n\t\t\tif (config instanceof ClosestWorkTimeArgument)\n\t\t\t\treturn config;\n\n\t\t\tvar processedConfig;\n\t\t\tif (helpers.isDate(config)) {\n\t\t\t\tprocessedConfig = new ClosestWorkTimeArgument(config);\n\n\t\t\t} else {\n\t\t\t\tprocessedConfig = new ClosestWorkTimeArgument(\n\t\t\t\t\tconfig.date,\n\t\t\t\t\tconfig.dir,\n\t\t\t\t\tconfig.unit,\n\t\t\t\t\tconfig.task,\n\t\t\t\t\tnull,//config.id,\n\t\t\t\t\tconfig.calendar\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif(config.id){\n\t\t\t\tprocessedConfig.task = config;\n\t\t\t}\n\t\t\tprocessedConfig.dir = config.dir || 'any';\n\t\t\tprocessedConfig.unit = config.unit || gantt.config.duration_unit;\n\n\t\t\treturn processedConfig;\n\t\t},\n\n\t\t_getStartEndConfig: function (param) {\n\t\t\tvar argumentType = GetDurationArgument;\n\t\t\tvar config;\n\t\t\tif (param instanceof argumentType)\n\t\t\t\treturn param;\n\n\t\t\tif (helpers.isDate(param)) {\n\t\t\t\tconfig = new argumentType(arguments[0], arguments[1], arguments[2], arguments[3]);\n\t\t\t} else {\n\t\t\t\tconfig = new argumentType(param.start_date, param.end_date, param.task);\n\t\t\t\tif (param.id) {\n\t\t\t\t\tconfig.task = param;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconfig.unit = config.unit || gantt.config.duration_unit;\n\t\t\tconfig.step = config.step || gantt.config.duration_step;\n\t\t\tconfig.start_date = config.start_date || config.start || config.date;\n\n\t\t\treturn config;\n\t\t},\n\n\t\tgetDurationArguments: function (start, end, unit, step) {\n\t\t\treturn this._getStartEndConfig.apply(this, arguments);\n\t\t},\n\n\t\thasDurationArguments: function (start, end, unit, step) {\n\t\t\treturn this._getStartEndConfig.apply(this, arguments);\n\t\t},\n\n\t\tcalculateEndDateArguments: function (start, duration, unit, step) {\n\t\t\tvar config = arguments[0];\n\t\t\tif (config instanceof CalculateEndDateArgument)\n\t\t\t\treturn config;\n\n\t\t\tvar processedConfig;\n\t\t\t//CalculateEndDateArgument(start_date, duration, unit, step, task, id, calendar)\n\t\t\tif (helpers.isDate(config)) {\n\t\t\t\tprocessedConfig = new CalculateEndDateArgument(\n\t\t\t\t\targuments[0],\n\t\t\t\t\targuments[1],\n\t\t\t\t\targuments[2],\n\t\t\t\t\tundefined,\n\t\t\t\t\targuments[3],\n\t\t\t\t\tundefined,\n\t\t\t\t\targuments[4]\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\tprocessedConfig = new CalculateEndDateArgument(\n\t\t\t\t\tconfig.start_date,\n\t\t\t\t\tconfig.duration,\n\t\t\t\t\tconfig.unit,\n\t\t\t\t\tconfig.step,\n\t\t\t\t\tconfig.task,\n\t\t\t\t\tnull,//config.id,\n\t\t\t\t\tconfig.calendar\n\t\t\t\t);\n\t\t\t}\n\t\t\tif(config.id){\n\t\t\t\tprocessedConfig.task = config;\n\t\t\t}\n\n\t\t\tprocessedConfig.unit = processedConfig.unit || gantt.config.duration_unit;\n\t\t\tprocessedConfig.step = processedConfig.step || gantt.config.duration_step;\n\n\t\t\treturn processedConfig;\n\t\t}\n\t};\n};\n\n\nmodule.exports = calendarArgumentsHelper;","function copyLinkIdsArray(gantt, linkIds, targetHash){\n\tfor(var i = 0; i < linkIds.length; i++) {\n\t\tif(gantt.isLinkExists(linkIds[i])){\n\t\t\ttargetHash[linkIds[i]] = gantt.getLink(linkIds[i]);\n\t\t}\n\t}\n}\n\nfunction copyLinkIds(gantt, task, targetHash){\n\tcopyLinkIdsArray(gantt, task.$source, targetHash);\n\tcopyLinkIdsArray(gantt, task.$target, targetHash);\n}\n\nfunction getSubtreeLinks(gantt, rootId){\n\tvar res = {};\n\n\tif(gantt.isTaskExists(rootId)){\n\t\tcopyLinkIds(gantt, gantt.getTask(rootId), res);\n\t}\n\n\tgantt.eachTask(function(child){\n\t\tcopyLinkIds(gantt, child, res);\n\t}, rootId);\n\n\treturn res;\n}\n\nfunction getSubtreeTasks(gantt, rootId){\n\tvar res = {};\n\n\tgantt.eachTask(function(child){\n\t\tres[child.id] = child;\n\t}, rootId);\n\n\treturn res;\n}\n\nmodule.exports = {\n\tgetSubtreeLinks: getSubtreeLinks,\n\tgetSubtreeTasks: getSubtreeTasks\n};","var ScaleHelper = require(\"./ui/timeline/scales_ignore\");\n\n\nfunction dateRangeResolver(gantt){\n\t//reset project timing\n\t//_get_tasks_data(gantt);\n\treturn gantt.getSubtaskDates();\n}\n\nfunction defaultRangeResolver(){\n\treturn {\n\t\tstart_date: new Date(),\n\t\tend_date: new Date()\n\t};\n}\n\nfunction resolveConfigRange(unit, gantt){\n\tvar range = {\n\t\tstart_date:null,\n\t\tend_date:null\n\t};\n\n\tif (gantt.config.start_date && gantt.config.end_date) {\n\t\trange.start_date = gantt.date[unit + \"_start\"](new Date(gantt.config.start_date));\n\n\t\tvar end = new Date(gantt.config.end_date);\n\t\tvar start_interval = gantt.date[unit + \"_start\"](new Date(end));\n\t\tif (+end != +start_interval) {\n\t\t\tend = gantt.date.add(start_interval, 1, unit);\n\t\t} else {\n\t\t\tend = start_interval;\n\t\t}\n\n\t\trange.end_date = end;\n\t}\n\treturn range;\n}\n\nfunction _scale_range_unit(gantt) {\n\tvar unit = gantt.config.scale_unit;\n\tvar step = gantt.config.step;\n\tif (gantt.config.scale_offset_minimal) {\n\n\t\tvar helper = new ScaleHelper(gantt);\n\t\tvar scales = [helper.primaryScale()].concat(gantt.config.subscales);\n\n\t\thelper.sortScales(scales);\n\t\tunit = scales[scales.length - 1].unit;\n\t\tstep = scales[scales.length - 1].step || 1;\n\t}\n\treturn { unit:unit, step:step };\n}\n\nfunction _init_tasks_range(gantt) {\n\tvar cfg = _scale_range_unit(gantt);\n\tvar unit = cfg.unit,\n\t\tstep = cfg.step;\n\tvar range = resolveConfigRange(unit, gantt);\n\n\tif(!(range.start_date && range.end_date)){\n\t\trange = dateRangeResolver(gantt);\n\t\tif(!range.start_date || !range.end_date){\n\t\t\trange = defaultRangeResolver(gantt);\n\t\t}\n\n\t\trange.start_date = gantt.date[unit + \"_start\"](range.start_date);\n\t\trange.start_date = gantt.calculateEndDate({\n\t\t\tstart_date: gantt.date[unit + \"_start\"](range.start_date),\n\t\t\tduration: -1,\n\t\t\tunit: unit,\n\t\t\tstep:step\n\t\t});//one free column before first task\n\n\t\trange.end_date = gantt.date[unit + \"_start\"](range.end_date);\n\t\trange.end_date = gantt.calculateEndDate({start_date: range.end_date, duration: 2, unit: unit, step:step});//one free column after last task\n\t}\n\n\tgantt._min_date = range.start_date;\n\tgantt._max_date = range.end_date;\n}\n\nfunction _adjust_scales(gantt) {\n\tif (gantt.config.fit_tasks) {\n\t\tvar old_min = +gantt._min_date,\n\t\t\told_max = +gantt._max_date;\n\t\t//this._init_tasks_range();\n\t\tif (+gantt._min_date != old_min || +gantt._max_date != old_max) {\n\t\t\tgantt.render();\n\n\t\t\tgantt.callEvent(\"onScaleAdjusted\", []);\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nmodule.exports = function updateTasksRange(gantt){\n\t_init_tasks_range(gantt);\n\t_adjust_scales(gantt);\n};\n","var utils = require(\"../../utils/utils\");\n\nvar $powerArray  = {\n\t$create: function(array){\n\t\treturn utils.mixin(array || [], this);\n\t},\n\t//remove element at specified position\n\t$removeAt:function(pos,len){\n\t\tif (pos>=0) this.splice(pos,(len||1));\n\t},\n\t//find element in collection and remove it\n\t$remove:function(value){\n\t\tthis.$removeAt(this.$find(value));\n\t},\n\t//add element to collection at specific position\n\t$insertAt:function(data,pos){\n\t\tif (!pos && pos!==0) \t//add to the end by default\n\t\t\tthis.push(data);\n\t\telse {\n\t\t\tvar b = this.splice(pos,(this.length-pos));\n\t\t\tthis[pos] = data;\n\t\t\tthis.push.apply(this,b); //reconstruct array without loosing this pointer\n\t\t}\n\t},\n\t//return index of element, -1 if it doesn't exists\n\t$find:function(data){\n\t\tfor (var i=0; i<this.length; i++)\n\t\t\tif (data==this[i]) return i;\n\t\treturn -1;\n\t},\n\t//execute some method for each element of array\n\t$each:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tfunctor.call((master||this),this[i]);\n\t},\n\t//create new array from source, by using results of functor\n\t$map:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tthis[i]=functor.call((master||this),this[i]);\n\t\treturn this;\n\t},\n\t$filter:function(functor, master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tif (!functor.call((master||this),this[i])){\n\t\t\t\tthis.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}\n\t\treturn this;\n\t}\n};\n\nmodule.exports = $powerArray;","var powerArray = require(\"./power_array\");\nvar utils = require(\"../../utils/utils\");\nvar eventable = require(\"../../utils/eventable\");\n\nvar DataStore = function(config){\n\tthis.pull = {};\n\tthis.$initItem = config.initItem;\n\tthis.visibleOrder = powerArray.$create();\n\tthis.fullOrder = powerArray.$create();\n\tthis._skip_refresh = false;\n\tthis._filterRule = null;\n\tthis._searchVisibleOrder = {};\n\tthis.$config = config;\n\teventable(this);\n\treturn this;\n};\nDataStore.prototype = {\n\n\t_parseInner: function(data){\n\t\tvar item = null,\n\t\t\tloaded = [];\n\t\tfor(var i = 0, len = data.length; i< len; i++){\n\t\t\titem = data[i];\n\t\t\tif(this.$initItem){\n\t\t\t\titem = this.$initItem(item);\n\t\t\t}\n\t\t\tif(this.callEvent(\"onItemLoading\", [item])){\n\t\t\t\tif (!this.pull.hasOwnProperty(item.id)) {\n\t\t\t\t\tthis.fullOrder.push(item.id);\n\t\t\t\t\tloaded.push(item);\n\t\t\t\t}\n\t\t\t\tthis.pull[item.id] = item;\n\t\t\t}\n\t\t}\n\t\treturn loaded;\n\t},\n\tparse: function(data){\n\t\tthis.callEvent(\"onBeforeParse\", [data]);\n\t\tvar loaded = this._parseInner(data);\n\t\tthis.refresh();\n\t\tthis.callEvent(\"onParse\", [loaded]);\n\t},\n\tgetItem: function(id){\n\t\treturn this.pull[id];\n\t},\n\n\t_updateOrder: function(code){\n\t\tcode.call(this.visibleOrder);\n\t\tcode.call(this.fullOrder);\n\t},\n\tupdateItem: function(id, item){\n\t\tif (!utils.defined(item)) item = this.getItem(id);\n\n\t\tif (!this._skip_refresh) {\n\t\t\tif (this.callEvent(\"onBeforeUpdate\", [item.id, item]) === false) return false;\n\t\t}\n\t\tthis.pull[id]=item;\n\t\tif (!this._skip_refresh) {\n\t\t\tthis.callEvent(\"onAfterUpdate\", [item.id, item]);\n\t\t\tthis.callEvent(\"onStoreUpdated\", [item.id, item, \"update\"]);\n\t\t}\n\t},\n\n\t_removeItemInner: function(id){\n\t\t//clear from collections\n\t\t//this.visibleOrder.$remove(id);\n\t\tthis._updateOrder(function(){ this.$remove(id);});\n\t\tdelete this.pull[id];\n\t},\n\n\tremoveItem: function(id){\n\t\t//utils.assert(this.exists(id), \"Not existing ID in remove command\"+id);\n\n\t\tvar obj = this.getItem(id);\t//save for later event\n\t\tif (!this._skip_refresh) {\n\t\t\tif (this.callEvent(\"onBeforeDelete\", [obj.id, obj]) === false) return false;\n\t\t}\n\n\t\tthis._removeItemInner(id);\n\n\t\tif (!this._skip_refresh) {\n\t\t\tthis.filter();\n\t\t\tthis.callEvent(\"onAfterDelete\", [obj.id, obj]);\n\t\t\t//repaint signal\n\t\t\tthis.callEvent(\"onStoreUpdated\", [obj.id, obj, \"delete\"]);\n\t\t}\n\t},\n\n\t_addItemInner: function(item, index){\n\t\t//in case of treetable order is sent as 3rd parameter\n\t\t//var order = index;\n\n\t\tif(this.exists(item.id)){\n\t\t\tthis.silent(function(){this.updateItem(item.id, item);});\n\t\t}else{\n\t\t\tvar order = this.visibleOrder;\n\n\t\t\t//by default item is added to the end of the list\n\t\t\tvar data_size = order.length;\n\n\t\t\tif (!utils.defined(index) || index < 0)\n\t\t\t\tindex = data_size;\n\t\t\t//check to prevent too big indexes\n\t\t\tif (index > data_size){\n\t\t\t\t//dhx.log(\"Warning\",\"DataStore:add\",\"Index of out of bounds\");\n\t\t\t\tindex = Math.min(order.length,index);\n\t\t\t}\n\t\t}\n\n\n\t\t//gantt.assert(!this.exists(id), \"Not unique ID\");\n\n\t\tthis.pull[item.id]=item;\n\t\tif (!this._skip_refresh){\n\t\t\tthis._updateOrder(function(){\n\t\t\t\tif(this.$find(item.id) === -1)\n\t\t\t\t\tthis.$insertAt(item.id,index);\n\t\t\t});\n\t\t}\n\t\tthis.filter();\n\t\t//order.$insertAt(item.id,index);\n\t},\n\n\n\tisVisible: function(id){\n\t\treturn this.visibleOrder.$find(id) > -1;\n\t},\n\tgetVisibleItems: function(){\n\t\treturn this.getIndexRange();\n\t},\n\n\taddItem: function(item, index){\n\t\tif (!utils.defined(item.id))\n\t\t\titem.id = utils.uid();\n\n\t\tif(this.$initItem){\n\t\t\titem = this.$initItem(item);\n\t\t}\n\n\t\tif (!this._skip_refresh){\n\t\t\tif (this.callEvent(\"onBeforeAdd\", [item.id, item]) === false) return false;\n\t\t}\n\n\n\t\tthis._addItemInner(item, index);\n\n\t\tif (!this._skip_refresh){\n\t\t\tthis.callEvent(\"onAfterAdd\",[item.id, item]);\n\t\t\t//repaint signal\n\t\t\tthis.callEvent(\"onStoreUpdated\",[item.id,item,\"add\"]);\n\t\t}\n\t\treturn item.id;\n\t},\n\n\t_changeIdInner: function(oldId, newId){\n\t\tif(this.pull[oldId])\n\t\t\tthis.pull[newId] = this.pull[oldId];\n\n\t\tvar visibleOrder = this._searchVisibleOrder[oldId];\n\t\tthis.pull[newId].id = newId;\n\t\tthis._updateOrder(function(){\n\t\t\tthis[this.$find(oldId)] = newId;\n\t\t});\n\t\tthis._searchVisibleOrder[newId] = visibleOrder;\n\t\tdelete this._searchVisibleOrder[oldId];\n\n\t\t//this.visibleOrder[this.visibleOrder.$find(oldId)]=newId;\n\t\tdelete this.pull[oldId];\n\t},\n\tchangeId: function(oldId, newId){\n\t\tthis._changeIdInner(oldId, newId);\n\n\t\tthis.callEvent(\"onIdChange\", [oldId, newId]);\n\n\t},\n\texists: function(id){\n\t\treturn !!(this.pull[id]);\n\t},\n\n\t_moveInner: function(sindex, tindex){\n\t\tvar id = this.getIdByIndex(sindex);\n\n\t\tthis._updateOrder(function(){\n\t\t\tthis.$removeAt(sindex);\n\t\t\tthis.$insertAt(id,Math.min(this.length, tindex));\n\t\t});\n\t\t//this.visibleOrder.$removeAt(sindex);\t//remove at old position\n\t\t//if (sindex<tindex) tindex--;\t//correct shift, caused by element removing\n\t\t//this.visibleOrder.$insertAt(id,Math.min(this.visibleOrder.length, tindex));\t//insert at new position\n\t},\n\n\tmove: function(sindex, tindex){\n\t\t//gantt.assert(sindex>=0 && tindex>=0, \"DataStore::move\",\"Incorrect indexes\");\n\n\t\tvar id = this.getIdByIndex(sindex);\n\t\tvar obj = this.getItem(id);\n\t\tthis._moveInner(sindex, tindex);\n\n\n\t\tif (!this._skip_refresh) {\n\t\t\t//repaint signal\n\t\t\tthis.callEvent(\"onStoreUpdated\", [obj.id, obj, \"move\"]);\n\t\t}\n\t},\n\tclearAll: function(){\n\t\tthis.pull = {};\n\t\tthis.visibleOrder = powerArray.$create();\n\t\tthis.fullOrder = powerArray.$create();\n\t\tif (this._skip_refresh) return;\n\t\tthis.callEvent(\"onClearAll\",[]);\n\t\tthis.refresh();\n\t},\n\n\tsilent:function(code, master){\n\t\tthis._skip_refresh = true;\n\t\tcode.call(master||this);\n\t\tthis._skip_refresh = false;\n\t},\n\n\tarraysEqual: function (arr1, arr2) {\n\t\tif(arr1.length !== arr2.length)\n\t\t\treturn false;\n\t\tfor(var i = 0; i < arr1.length; i++) {\n\t\t\tif(arr1[i] !== arr2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\trefresh: function(id, quick){\n\t\tif (this._skip_refresh) return;\n\n\t\tif(id){\n\t\t\t// if item changes visible order (e.g. expand-collapse branch) - do a complete repaint\n\t\t\tif(!quick){\n\t\t\t\tvar oldOrder = this.visibleOrder;\n\t\t\t\tthis.filter();\n\t\t\t\tif(!this.arraysEqual(oldOrder, this.visibleOrder)){\n\t\t\t\t\tid = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}else{\n\t\t\tthis.filter();\n\t\t}\n\n\t\tif (id)\n\t\t\tthis.callEvent(\"onStoreUpdated\",[id, this.pull[id], \"paint\"]);\n\t\telse\n\t\t\tthis.callEvent(\"onStoreUpdated\",[null,null,null]);\n\t},\n\n\tcount: function(){\n\t\treturn this.fullOrder.length;\n\t},\n\tcountVisible: function(){\n\t\treturn this.visibleOrder.length;\n\t},\n\n\tsort: function(sort){},\n\n\tserialize: function(){},\n\n\teachItem: function(code){\n\t\tfor (var i=0; i<this.fullOrder.length; i++) {\n\t\t\tvar item = this.pull[this.fullOrder[i]];\n\t\t\tcode.call(this, item);\n\t\t}\n\t},\n\t\n\tfilter: function(rule){\n\t\tvar filteredOrder = powerArray.$create();\n\t\tthis.eachItem(function(item){\n\t\t\tif(this.callEvent(\"onFilterItem\", [item.id, item])){\n\t\t\t\tfilteredOrder.push(item.id);\n\t\t\t}\n\t\t});\n\n\t\tthis.visibleOrder = filteredOrder;\n\t\tthis._searchVisibleOrder = {};\n\t\tfor(var i = 0; i < this.visibleOrder.length; i++){\n\t\t\tthis._searchVisibleOrder[this.visibleOrder[i]] = i;\n\t\t}\n\t},\n\n\tgetIndexRange: function(from, to){\n\t\tto=Math.min((to||Infinity),this.countVisible()-1);\n\n\t\tvar ret= [];\n\t\tfor (var i=(from||0); i <= to; i++)\n\t\t\tret.push(this.getItem(this.visibleOrder[i]));\n\t\treturn ret;\n\t},\n\tgetItems: function(){\n\t\tvar res = [];\n\t\tfor(var i in this.pull){\n\t\t\tres.push(this.pull[i]);\n\t\t}\n\t/*\tfor(var i = 0; i < this.fullOrder.length; i++){\n\n\t\t}*/\n\t\treturn res;\n\t},\n\n\tgetIdByIndex: function(index){\n\t\treturn this.visibleOrder[index];\n\t},\n\tgetIndexById: function(id){\n\t\tvar res = this._searchVisibleOrder[id];\n\t\tif(res === undefined){\n\t\t\tres = -1;\n\t\t}\n\t\treturn res;\n\t},\n\t_getNullIfUndefined: function(value){\n\t\tif(value === undefined){\n\t\t\treturn null;\n\t\t}else{\n\t\t\treturn value;\n\t\t}\n\t},\n\tgetFirst: function(){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[0]);\n\t},\n\tgetLast: function(){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[this.visibleOrder.length-1]);\n\t},\n\tgetNext: function(id){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[this.getIndexById(id) + 1]);\n\t},\n\tgetPrev: function(id){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[this.getIndexById(id) - 1]);\n\t},\n\tdestructor: function(){\n\t\tthis.detachAllEvents();\n\t\tthis.pull = null;\n\t\tthis.$initItem = null;\n\t\tthis.visibleOrder = null;\n\t\tthis.fullOrder = null;\n\t\tthis._skip_refresh = null;\n\t\tthis._filterRule = null;\n\t\tthis._searchVisibleOrder = null;\n\t}\n};\n\nmodule.exports = DataStore;","function createTaskRenderer(gantt){\n\n\tfunction _render_task_element(task, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar painters = config.type_renderers;\n\t\tvar renderer = painters[gantt.getTaskType(task.type)],\n\t\t\tdefaultRenderer = _task_default_render;\n\n\t\tif (!renderer) {\n\t\t\treturn defaultRenderer.call(gantt, task, view);\n\t\t}else{\n\t\t\treturn renderer.call(gantt, task, function(task){ return defaultRenderer.call(gantt, task, view);}, view);\n\t\t}\n\t}\n\n\tfunction _task_default_render(task, view) {\n\t\tif (gantt._isAllowedUnscheduledTask(task))\n\t\t\treturn;\n\n\n\t\tvar pos = view.getItemPosition(task);\n\n\t\tvar cfg = view.$getConfig(),\n\t\t\ttemplates = view.$getTemplates();\n\t\tvar height = view.getItemHeight();\n\n\t\tvar taskType = gantt.getTaskType(task.type);\n\n\t\tvar padd = Math.floor((gantt.config.row_height - height) / 2);\n\t\tif (taskType == cfg.types.milestone && cfg.link_line_width > 1) {\n\t\t\t//little adjust milestone position, so horisontal corners would match link arrow when thickness of link line is more than 1px\n\t\t\tpadd += 1;\n\t\t}\n\n\t\tif (taskType == cfg.types.milestone){\n\t\t\tpos.left -= Math.round(height / 2);\n\t\t\tpos.width = height;\n\t\t}\n\n\t\tvar div = document.createElement(\"div\");\n\n\t\tvar width = Math.round(pos.width);\n\n\t\tif(view.$config.item_attribute){\n\t\t\tdiv.setAttribute(view.$config.item_attribute, task.id);\n\t\t}\n\n\t\tif (cfg.show_progress && taskType != cfg.types.milestone) {\n\t\t\t_render_task_progress(task, div, width, cfg, templates);\n\t\t}\n\n\t\t//use separate div to display content above progress bar\n\t\tvar content = _render_task_content(task, width, templates);\n\t\tif (task.textColor) {\n\t\t\tcontent.style.color = task.textColor;\n\t\t}\n\t\tdiv.appendChild(content);\n\n\t\tvar css = _combine_item_class(\"gantt_task_line\",\n\t\t\ttemplates.task_class(task.start_date, task.end_date, task),\n\t\t\ttask.id,\n\t\t\tview);\n\t\tif (task.color || task.progressColor || task.textColor) {\n\t\t\tcss += \" gantt_task_inline_color\";\n\t\t}\n\t\tdiv.className = css;\n\n\t\tvar styles = [\n\t\t\t\"left:\" + pos.left + \"px\",\n\t\t\t\"top:\" + (padd + pos.top) + 'px',\n\t\t\t\"height:\" + height + 'px',\n\t\t\t\"line-height:\" + (Math.max(height < 30 ? height - 2 : height, 0)) + 'px',\n\t\t\t\"width:\" + width + 'px'\n\t\t];\n\t\tif (task.color) {\n\t\t\tstyles.push(\"background-color:\" + task.color);\n\t\t}\n\t\tif (task.textColor) {\n\t\t\tstyles.push(\"color:\" + task.textColor);\n\t\t}\n\n\t\tdiv.style.cssText = styles.join(\";\");\n\t\tvar side = _render_leftside_content(task, cfg, templates);\n\t\tif (side) div.appendChild(side);\n\n\t\tside = _render_rightside_content(task, cfg, templates);\n\t\tif (side) div.appendChild(side);\n\n\t\tgantt._waiAria.setTaskBarAttr(task, div);\n\n\t\tvar state = gantt.getState();\n\n\t\tif (!gantt.isReadonly(task)) {\n\t\t\tif (cfg.drag_resize && !gantt.isSummaryTask(task) && taskType != cfg.types.milestone) {\n\t\t\t\t_render_pair(div, \"gantt_task_drag\", task, function (css) {\n\t\t\t\t\tvar el = document.createElement(\"div\");\n\t\t\t\t\tel.className = css;\n\t\t\t\t\treturn el;\n\t\t\t\t}, cfg);\n\t\t\t}\n\t\t\tif (cfg.drag_links && cfg.show_links) {\n\t\t\t\t_render_pair(div, \"gantt_link_control\", task, function (css) {\n\t\t\t\t\tvar outer = document.createElement(\"div\");\n\t\t\t\t\touter.className = css;\n\t\t\t\t\touter.style.cssText = [\n\t\t\t\t\t\t\"height:\" + height + 'px',\n\t\t\t\t\t\t\"line-height:\" + height + 'px'\n\t\t\t\t\t].join(\";\");\n\t\t\t\t\tvar inner = document.createElement(\"div\");\n\t\t\t\t\tinner.className = \"gantt_link_point\";\n\n\t\t\t\t\tvar showLinkPoints = false;\n\t\t\t\t\tif(state.link_source_id && cfg.touch){\n\t\t\t\t\t\tshowLinkPoints = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tinner.style.display = showLinkPoints ? \"block\" : \"\";\n\t\t\t\t\touter.appendChild(inner);\n\t\t\t\t\treturn outer;\n\t\t\t\t}, cfg);\n\t\t\t}\n\t\t}\n\t\treturn div;\n\t}\n\n\tfunction _render_side_content(task, template, cssClass) {\n\t\tif (!template) return null;\n\n\t\tvar text = template(task.start_date, task.end_date, task);\n\t\tif (!text) return null;\n\t\tvar content = document.createElement(\"div\");\n\t\tcontent.className = \"gantt_side_content \" + cssClass;\n\t\tcontent.innerHTML = text;\n\t\treturn content;\n\t}\n\n\tfunction _render_leftside_content(task, cfg, templates) {\n\t\tvar css = \"gantt_left \" + _get_link_crossing_css(!cfg.rtl ? true : false, task, cfg);\n\t\treturn _render_side_content(task, templates.leftside_text, css);\n\t}\n\n\tfunction _render_rightside_content(task, cfg, templates) {\n\t\tvar css = \"gantt_right \" + _get_link_crossing_css(!cfg.rtl ? false : true, task, cfg);\n\t\treturn _render_side_content(task, templates.rightside_text, css);\n\t}\n\n\tfunction _get_link_crossing_css(left, task) {\n\t\tvar cond = _get_conditions(left);\n\n\t\tfor (var i in cond) {\n\t\t\tvar links = task[i];\n\t\t\tfor (var ln = 0; ln < links.length; ln++) {\n\t\t\t\tvar link = gantt.getLink(links[ln]);\n\n\t\t\t\tfor (var tp = 0; tp < cond[i].length; tp++) {\n\t\t\t\t\tif (link.type == cond[i][tp]) {\n\t\t\t\t\t\treturn \"gantt_link_crossing\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t}\n\n\n\tfunction _render_task_content(task, width, templates) {\n\t\tvar content = document.createElement(\"div\");\n\t\tif (gantt.getTaskType(task.type) != gantt.config.types.milestone)\n\t\t\tcontent.innerHTML = templates.task_text(task.start_date, task.end_date, task);\n\t\tcontent.className = \"gantt_task_content\";\n\t\t//content.style.width = width + 'px';\n\t\treturn content;\n\t}\n\n\tfunction _render_task_progress(task, element, maxWidth, cfg, templates) {\n\t\tvar done = task.progress * 1 || 0;\n\n\t\tmaxWidth = Math.max(maxWidth - 2, 0);//2px for borders\n\t\tvar pr = document.createElement(\"div\");\n\t\tvar width = Math.round(maxWidth * done);\n\n\t\twidth = Math.min(maxWidth, width);\n\t\tif (task.progressColor) {\n\t\t\tpr.style.backgroundColor = task.progressColor;\n\t\t\tpr.style.opacity = 1;\n\t\t}\n\t\tpr.style.width = width + 'px';\n\t\tpr.className = \"gantt_task_progress\";\n\t\tpr.innerHTML = templates.progress_text(task.start_date, task.end_date, task);\n\n\t\tif(cfg.rtl){\n\t\t\tpr.style.position = \"absolute\";\n\t\t\tpr.style.right = \"0px\";\n\t\t}\n\n\t\tvar wrapper = document.createElement(\"div\");\n\t\twrapper.className = \"gantt_task_progress_wrapper\";\n\t\twrapper.appendChild(pr);\n\t\telement.appendChild(wrapper);\n\n\t\tif (gantt.config.drag_progress && !gantt.isReadonly(task)) {\n\t\t\tvar drag = document.createElement(\"div\");\n\n\t\t\tvar markerPos = width;\n\t\t\tif(cfg.rtl){\n\t\t\t\tmarkerPos = maxWidth - width;\n\t\t\t}\n\n\t\t\tdrag.style.left = markerPos + 'px';\n\t\t\tdrag.className = \"gantt_task_progress_drag\";\n\t\t\tpr.appendChild(drag);\n\t\t\telement.appendChild(drag);\n\t\t}\n\t}\n\n\tfunction _get_conditions(leftside) {\n\t\tif (leftside) {\n\t\t\treturn {\n\t\t\t\t$source: [\n\t\t\t\t\tgantt.config.links.start_to_start\n\t\t\t\t],\n\t\t\t\t$target: [\n\t\t\t\t\tgantt.config.links.start_to_start,\n\t\t\t\t\tgantt.config.links.finish_to_start\n\t\t\t\t]\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\t$source: [\n\t\t\t\t\tgantt.config.links.finish_to_start,\n\t\t\t\t\tgantt.config.links.finish_to_finish\n\t\t\t\t],\n\t\t\t\t$target: [\n\t\t\t\t\tgantt.config.links.finish_to_finish\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction _combine_item_class(basic, template, itemId, view) {\n\t\tvar cfg = view.$getConfig();\n\t\tvar css = [basic];\n\t\tif (template)\n\t\t\tcss.push(template);\n\n\t\tvar state = gantt.getState();\n\n\t\tvar task = gantt.getTask(itemId);\n\n\t\tif (gantt.getTaskType(task.type) == cfg.types.milestone) {\n\t\t\tcss.push(\"gantt_milestone\");\n\t\t}else if (gantt.getTaskType(task.type) == cfg.types.project) {\n\t\t\tcss.push(\"gantt_project\");\n\t\t}\n\n\t\tcss.push(\"gantt_bar_\" + gantt.getTaskType(task.type));\n\n\n\t\tif (gantt.isSummaryTask(task))\n\t\t\tcss.push(\"gantt_dependent_task\");\n\n\t\tif (gantt.isSplitTask(task)) {\n\t\t\tcss.push(\"gantt_split_parent\");\n\t\t}\n\n\t\tif (cfg.select_task && itemId == state.selected_task)\n\t\t\tcss.push(\"gantt_selected\");\n\n\t\tif (itemId == state.drag_id) {\n\t\t\tcss.push(\"gantt_drag_\" + state.drag_mode);\n\t\t\tif (state.touch_drag) {\n\t\t\t\tcss.push(\"gantt_touch_\" + state.drag_mode);\n\t\t\t}\n\t\t}\n\n\t\tif (state.link_source_id == itemId)\n\t\t\tcss.push(\"gantt_link_source\");\n\n\t\tif (state.link_target_id == itemId)\n\t\t\tcss.push(\"gantt_link_target\");\n\n\n\t\tif (cfg.highlight_critical_path && gantt.isCriticalTask) {\n\t\t\tif (gantt.isCriticalTask(task))\n\t\t\t\tcss.push(\"gantt_critical_task\");\n\t\t}\n\n\t\tif (state.link_landing_area &&\n\t\t\t(state.link_target_id && state.link_source_id) &&\n\t\t\t(state.link_target_id != state.link_source_id)) {\n\n\t\t\tvar from_id = state.link_source_id;\n\t\t\tvar from_start = state.link_from_start;\n\t\t\tvar to_start = state.link_to_start;\n\n\t\t\tvar allowDrag = gantt.isLinkAllowed(from_id, itemId, from_start, to_start);\n\n\t\t\tvar dragClass = \"\";\n\t\t\tif (allowDrag) {\n\t\t\t\tif (to_start)\n\t\t\t\t\tdragClass = \"link_start_allow\";\n\t\t\t\telse\n\t\t\t\t\tdragClass = \"link_finish_allow\";\n\t\t\t} else {\n\t\t\t\tif (to_start)\n\t\t\t\t\tdragClass = \"link_start_deny\";\n\t\t\t\telse\n\t\t\t\t\tdragClass = \"link_finish_deny\";\n\t\t\t}\n\t\t\tcss.push(dragClass);\n\t\t}\n\t\treturn css.join(\" \");\n\t}\n\n\tfunction _render_pair(parent, css, task, content, config) {\n\t\tvar state = gantt.getState();\n\t\tvar className, element;\n\t\tif (+task.start_date >= +state.min_date) {\n\t\t\tclassName = [css, config.rtl ? \"task_right\" : \"task_left\", \"task_start_date\"];\n\t\t\telement = content(className.join(\" \"));\n\t\t\telement.setAttribute(\"data-bind-property\", \"start_date\");\n\t\t\tparent.appendChild(element);\n\t\t}\n\n\t\tif (+task.end_date <= +state.max_date){\n\t\t\tclassName = [css, config.rtl ? \"task_left\" : \"task_right\", \"task_end_date\"];\n\t\t\telement = content(className.join(\" \"));\n\t\t\telement.setAttribute(\"data-bind-property\", \"end_date\");\n\t\t\tparent.appendChild(element);\n\t\t}\n\n\t}\n\n\treturn _render_task_element;\n}\n\nmodule.exports = createTaskRenderer;","var domHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\"),\n\teventable = require(\"../../../utils/eventable\"),\n\tgridResize = require(\"./grid_resize\"),\n\ttopPositionMixin = require(\"../row_position_mixin\");\n\nvar Grid = function(parent, config, factory, gantt){\n\tthis.$config = utils.mixin({}, config || {});\n\tthis.$gantt = gantt;\n\tthis.$parent = parent;\n\teventable(this);\n\tthis.$state = {};\n};\n\n\nGrid.prototype = {\n\tinit: function(container){\n\t\tvar gantt = this.$gantt;\n\t\tvar gridAriaAttr = gantt._waiAria.gridAttrString();\n\t\tvar gridDataAriaAttr = gantt._waiAria.gridDataAttrString();\n\n\n\t\tcontainer.innerHTML = \"<div class='gantt_grid' style='height:inherit;width:inherit;' \"+gridAriaAttr+\"></div>\";\n\t\tthis.$grid = container.childNodes[0];\n\n\t\tthis.$grid.innerHTML = \"<div class='gantt_grid_scale' \"+\n\t\t\tgantt._waiAria.gridScaleRowAttrString()+\"></div><div class='gantt_grid_data' \"+gridDataAriaAttr+\"></div>\";\n\n\t\tthis.$grid_scale = this.$grid.childNodes[0];\n\t\tthis.$grid_data = this.$grid.childNodes[1];\n\n\t\tvar attr = this.$getConfig()[this.$config.bind + \"_attribute\"];\n\t\tif(!attr && this.$config.bind){\n\t\t\tattr = this.$config.bind + \"_id\";\n\t\t}\n\t\tthis.$config.item_attribute = attr || null;\n\n\t\tif(!this.$config.layers){\n\t\t\tvar layers = this._createLayerConfig();\n\t\t\tthis.$config.layers = layers;\n\t\t}\n\n\t\tvar resizer = gridResize(gantt, this);\n\t\tresizer.init();\n\t\tthis._renderHeaderResizers = resizer.doOnRender;\n\t\tthis._mouseDelegates = require(\"../mouse_event_container\")(gantt);\n\n\t\tthis._addLayers(this.$gantt);\n\t\tthis._initEvents();\n\t\tthis.callEvent(\"onReady\", []);\n\t\t//this.refresh();\n\t},\n\n\t_validateColumnWidth: function(column, property){\n\t\t// user can set {name:\"text\", width:\"200\",...} for some reason,\n\t\t// check and convert it to number when possible\n\t\tvar value = column[property];\n\t\tif (value && value != \"*\") {\n\t\t\tvar gantt = this.$gantt;\n\t\t\tvar numericWidth = value*1;\n\t\t\tif(isNaN(numericWidth)){\n\t\t\t\tgantt.assert(false, \"Wrong \" + property + \" value of column \" + column.name);\n\t\t\t}else{\n\t\t\t\tcolumn[property] = numericWidth;\n\t\t\t}\n\t\t}\n\t},\n\n\tsetSize: function(width, height){\n\t\tthis.$config.width = this.$state.width = width;\n\t\tthis.$state.height = height;\n\n\t\t// TODO: maybe inherit and override in a subclass instead of extending here\n\n\t\tvar columns = this.getGridColumns(),\n\t\t\tinnerWidth = 0;\n\n\t\tfor (var i = 0, l = columns.length; i < l; i++) {\n\t\t\tthis._validateColumnWidth(columns[i], \"min_width\");\n\t\t\tthis._validateColumnWidth(columns[i], \"max_width\");\n\t\t\tthis._validateColumnWidth(columns[i], \"width\");\n\t\t\n\t\t\tinnerWidth += columns[i].width*1;\n\t\t}\n\n\t\tvar outerWidth;\n\t\tif(isNaN(innerWidth) || !this.$config.scrollable){\n\t\t\touterWidth = this._setColumnsWidth(width + 1);\n\t\t\tinnerWidth = outerWidth;\n\t\t}\n\n\t\tif(this.$config.scrollable){\n\t\t\tthis.$grid_scale.style.width = innerWidth + \"px\";\n\t\t\tthis.$grid_data.style.width = innerWidth + \"px\";\n\t\t}else{\n\t\t\tthis.$grid_scale.style.width = \"inherit\";\n\t\t\tthis.$grid_data.style.width = \"inherit\";\n\t\t}\n\t\tthis.$config.width -= 1;\n\n\t\tvar config = this.$getConfig();\n\t\tif(outerWidth !== width){\n\t\t\tconfig.grid_width = outerWidth;\n\t\t\tthis.$config.width = outerWidth - 1;\n\t\t}\n\n\t\tvar dataHeight = Math.max(this.$state.height - config.scale_height, 0);\n\t\tthis.$grid_data.style.height = dataHeight + \"px\";\n\t\tthis.refresh();\n\t},\n\tgetSize: function(){\n\n\t\tvar config = this.$getConfig();\n\n\t\tvar store = this.$config.rowStore;\n\n\t\tvar contentHeight = store ? config.row_height * store.countVisible() : 0,\n\t\t\tcontentWidth = this._getGridWidth();\n\n\t\tvar size = {\n\t\t\tx: this.$state.width,\n\t\t\ty: this.$state.height,\n\t\t\tcontentX: this.isVisible() ? contentWidth: 0,\n\t\t\tcontentY: this.isVisible() ? (config.scale_height + contentHeight) : 0,\n\t\t\tscrollHeight: this.isVisible() ? contentHeight: 0,\n\t\t\tscrollWidth: this.isVisible() ? contentWidth : 0\n\t\t};\n\n\t\treturn size;\n\t},\n\trefresh: function(){\n\n\t\tif(this.$config.bind)\n\t\t\tthis.$config.rowStore = this.$gantt.getDatastore(this.$config.bind);\n\n\t\tthis._initSmartRenderingPlaceholder();\n\n\t\tthis._calculateGridWidth();\n\t\tthis._renderGridHeader();\n\t},\n\tscrollTo: function(left, top){\n\t\tif(!this.isVisible())\n\t\t\treturn;\n\n\t\tif (left*1 == left){\n\t\t\tthis.$state.scrollLeft = this.$grid.scrollLeft = left;\n\t\t}\n\n\t\t// var config = this.$getConfig();\n\t\tif(top*1 == top){\n\t\t\tthis.$state.scrollTop = this.$grid_data.scrollTop = top;\n\t\t}\n\t},\n\n\tgetColumnIndex: function(name){\n\t\tvar columns = this.$getConfig().columns;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tif (columns[i].name == name) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetColumn: function(name){\n\t\tvar index = this.getColumnIndex(name);\n\t\tif(index === null){\n\t\t\treturn null;\n\t\t}\n\t\treturn this.$getConfig().columns[index];\n\t},\n\n\tgetGridColumns: function(){\n\t\tvar config = this.$getConfig();\n\t\treturn config.columns.slice();\n\t},\n\tisVisible: function(){\n\t\tif(this.$parent && this.$parent.$config){\n\t\t\treturn !this.$parent.$config.hidden;\n\t\t}else{\n\t\t\treturn this.$grid.offsetWidth;\n\t\t}\n\t},\n\n\tgetItemHeight: function(){\n\t\tvar config = this.$getConfig();\n\t\treturn config.row_height;\n\t},\n\n\t_createLayerConfig: function(){\n\t\tvar gantt = this.$gantt;\n\t\tvar self = this;\n\t\tvar layers = [\n\t\t\t{\n\t\t\t\trenderer: gantt.$ui.layers.gridLine,\n\t\t\t\tcontainer: this.$grid_data,\n\t\t\t\tfilter: [function(){\n\t\t\t\t\treturn self.isVisible();\n\t\t\t\t}]\n\t\t\t}\n\t\t];\n\t\treturn layers;\n\t},\n\n\t_addLayers: function(gantt){\n\t\tif(!this.$config.bind)\n\t\t\treturn;\n\n\t\tthis._taskLayers = [];\n\n\t\tvar self = this;\n\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\n\t\tif(!taskRenderer){\n\t\t\ttaskRenderer = layers.createDataRender({\n\t\t\t\tname: this.$config.bind,\n\t\t\t\tdefaultContainer: function(){ return self.$grid_data;}\n\t\t\t});\n\t\t}\n\n\t\tvar taskLayers = this.$config.layers;\n\t\tfor(var i = 0; taskLayers && i < taskLayers.length; i++){\n\t\t\tvar layer = taskLayers[i];\n\t\t\tlayer.host = this;\n\t\t\tvar bar_layer = taskRenderer.addLayer(layer);\n\t\t\tthis._taskLayers.push(bar_layer);\n\t\t}\n\n\t\tif(this.$config.bind)\n\t\t\tthis.$config.rowStore = this.$gantt.getDatastore(this.$config.bind);\n\n\t\tthis._initSmartRenderingPlaceholder();\n\t},\n\n\t_refreshPlaceholderOnStoreUpdate: function(id){\n\t\tvar config = this.$getConfig(),\n\t\t\tstore = this.$config.rowStore;\n\n\t\tif(!store || id !== null || !this.isVisible() || !config.smart_rendering) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar contentHeight;\n\t\tif(this.$config.scrollY) {\n\t\t\tvar scroll = this.$gantt.$ui.getView(this.$config.scrollY);\n\t\t\tif(scroll)\n\t\t\t\tcontentHeight = scroll.getScrollState().scrollSize;\n\t\t}\n\n\t\tif(!contentHeight){\n\t\t\tcontentHeight = store ? config.row_height * store.countVisible() : 0;\n\t\t}\n\n\t\tif(contentHeight){\n\t\t\tif(this.$rowsPlaceholder && this.$rowsPlaceholder.parentNode){\n\t\t\t\tthis.$rowsPlaceholder.parentNode.removeChild(this.$rowsPlaceholder);\n\t\t\t}\n\n\t\t\tvar placeholder = this.$rowsPlaceholder = document.createElement(\"div\");\n\t\t\tplaceholder.style.visibility = \"hidden\";\n\t\t\tplaceholder.style.height = contentHeight + \"px\";\n\t\t\tplaceholder.style.width = \"1px\";\n\t\t\tthis.$grid_data.appendChild(placeholder);\n\t\t}\n\t},\n\n\t_initSmartRenderingPlaceholder: function(){\n\t\tvar store = this.$config.rowStore;\n\t\tif(!store){\n\t\t\treturn;\n\t\t}else{\n\t\t\tthis._initSmartRenderingPlaceholder = function(){};\n\t\t}\n\t\tthis._staticBgHandler = store.attachEvent(\"onStoreUpdated\", utils.bind(this._refreshPlaceholderOnStoreUpdate, this));\n\t},\n\n\t_initEvents: function(){\n\t\tvar gantt = this.$gantt;\n\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_close\", gantt.bind(function (e, id, trg) {\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tif(!store) return true;\n\n\t\t\tvar target = domHelpers.locateAttribute(e, this.$config.item_attribute);\n\t\t\tif(target){\n\t\t\t\tstore.close(target.getAttribute(this.$config.item_attribute));\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}, this), this.$grid);\n\n\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_open\", gantt.bind(function (e, id, trg) {\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tif(!store) return true;\n\n\t\t\tvar target = domHelpers.locateAttribute(e, this.$config.item_attribute);\n\t\t\tif(target){\n\t\t\t\tstore.open(target.getAttribute(this.$config.item_attribute));\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}, this), this.$grid);\n\t},\n\n\t_clearLayers: function(gantt){\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\n\t\tif (this._taskLayers) {\n\t\t\tfor(var i = 0; i < this._taskLayers.length; i++){\n\t\t\t\ttaskRenderer.removeLayer(this._taskLayers[i]);\n\t\t\t}\n\t\t}\n\n\t\tthis._taskLayers = [];\n\t},\n\n\t_getColumnWidth: function(column, config, width) {\n\t\tvar min_width = column.min_width || config.min_grid_column_width;\n\t\tvar new_width = Math.max(width, min_width || 10);\n\t\tif (column.max_width)\n\t\t\tnew_width = Math.min(new_width, column.max_width);\n\t\treturn new_width;\n\t},\n\t// return min and max possible grid width according to restricts\n\t_getGridWidthLimits: function() {\n\t\tvar config = this.$getConfig(),\n\t\t\tcolumns = this.getGridColumns(),\n\t\t\tmin_limit = 0,\n\t\t\tmax_limit = 0;\n\n\t\t\tfor (var i=0; i<columns.length; i++) {\n\t\t\t\tmin_limit += columns[i].min_width ? columns[i].min_width : config.min_grid_column_width;\n\t\t\t\tif (max_limit !== undefined) {\n\t\t\t\t\tmax_limit = columns[i].max_width ? (max_limit + columns[i].max_width) : undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [min_limit, max_limit];\n\t},\n\t// resize columns to get total newWidth, starting from columns[start_index]  \n\t_setColumnsWidth: function(newWidth, start_index) {\n\t\tvar config = this.$getConfig();\n\t\tvar columns = this.getGridColumns(),\n\t\t\tcolumns_width = 0,\n\t\t\tfinal_width = newWidth;\n\n\t\tstart_index = !window.isNaN(start_index) ? start_index : -1;\n\n\t\tfor (var i = 0, l = columns.length; i < l; i++) {\n\t\t\tcolumns_width += columns[i].width*1;\n\t\t}\n\n\t\tif (window.isNaN(columns_width)) {\n\t\t\tthis._calculateGridWidth(); \n\t\t\tcolumns_width = 0;\n\t\t\tfor (var i = 0, l = columns.length; i < l; i++) {\n\t\t\t\tcolumns_width += columns[i].width*1;\n\t\t\t}\n\t\t}\n\n\t\tvar extra_width = final_width - columns_width;\n\n\t\tvar start_width = 0;\n\t\tfor (var i=0; i<start_index+1; i++) {\n\t\t\tstart_width += columns[i].width;\n\t\t}\n\n\t\tcolumns_width -= start_width;\n\n\t\tfor (var i=start_index+1; i<columns.length; i++) {\n\n\t\t\tvar col = columns[i];\n\t\t\tvar\tshare = Math.round(extra_width * (col.width / columns_width));\n\n\t\t\t// columns have 2 additional restrict fields - min_width & max_width that are set by user\n\t\t\tif (extra_width < 0) {\n\t\t\t\tif (col.min_width && col.width+share < col.min_width)\n\t\t\t\t\tshare = col.min_width - col.width;\n\t\t\t\telse if (!col.min_width && config.min_grid_column_width && col.width+share < config.min_grid_column_width)\n\t\t\t\t\tshare = config.min_grid_column_width - col.width;\n\t\t\t} else if (col.max_width && col.width+share > col.max_width)\n\t\t\t\tshare = col.max_width - col.width;\n\n\t\t\tcolumns_width -= col.width;\n\t\t\tcol.width += share;\n\t\t\textra_width -= share;\n\n\t\t}\n\n\t\tvar iterator = extra_width > 0 ? 1 : -1;\n\t\twhile ((extra_width > 0 && iterator === 1) || (extra_width < 0 && iterator === -1)) {\n\t\t\tvar curExtra = extra_width;\n\t\t\tfor (i = start_index+1; i<columns.length; i++) {\n\t\t\t\tvar new_width = columns[i].width + iterator;\n\n\t\t\t\tif (new_width == this._getColumnWidth(columns[i], config, new_width)) {\n\t\t\t\t\textra_width -= iterator;\n\t\t\t\t\tcolumns[i].width = new_width;\n\t\t\t\t}\n\n\t\t\t\tif (!extra_width)\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif (curExtra == extra_width)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// if impossible to resize the right-side columns, resize the start column\n\t\tif (extra_width && start_index > -1) {\n\t\t\tvar new_width = columns[start_index].width + extra_width;\n\t\t\tif (new_width == this._getColumnWidth(columns[start_index], config, new_width))\n\t\t\t\tcolumns[start_index].width = new_width;\n\t\t}\n\n\t\t//if (this.callEvent(\"onGridResizeEnd\", [config.grid_width, final_width]) === false)\n\t\t//\treturn;\n\n\t\treturn this._getColsTotalWidth();\n\t},\n\n\t_getColsTotalWidth: function(){\n\t\tvar columns = this.getGridColumns();\n\t\tvar cols_width = 0;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar v = parseFloat(columns[i].width);\n\t\t\tif (window.isNaN(v)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcols_width += v;\n\t\t}\n\t\treturn cols_width;\n\t},\n\t_calculateGridWidth: function() {\n\t\tvar config = this.$getConfig();\n\t\tvar columns = this.getGridColumns();\n\t\tvar cols_width = 0;\n\t\tvar unknown = [];\n\t\tvar width = [];\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar v = parseFloat(columns[i].width);\n\t\t\tif (window.isNaN(v)) {\n\t\t\t\tv = config.min_grid_column_width || 10;\n\t\t\t\tunknown.push(i);\n\t\t\t}\n\t\t\twidth[i] = v;\n\t\t\tcols_width += v;\n\t\t}\n\t\tvar gridWidth = this._getGridWidth() + 1;\n\t\tif (config.autofit || unknown.length) {\n\t\t\tvar diff = gridWidth - cols_width;\n\t\t\t// TODO: logic may be improved for proportional changing of width\n\t\t\tif (config.autofit) {\n\t\t\t\t// delta must be added for all columns\n\t\t\t\tfor (var i = 0; i < width.length; i++) {\n\t\t\t\t\tvar delta = Math.round(diff / (width.length-i));\n\t\t\t\t\twidth[i] += delta;\n\t\t\t\t\tvar new_width = this._getColumnWidth(columns[i], config, width[i]);\n\n\t\t\t\t\tif (new_width != width[i]) {\n\t\t\t\t\t\tdelta = new_width - width[i];\n\t\t\t\t\t\twidth[i] = new_width;\n\t\t\t\t\t}\n\t\t\t\t\tdiff -= delta;\n\t\t\t\t}\n\t\t\t} else if (unknown.length) {\n\t\t\t\t// there are several columns with undefined width\n\t\t\t\tfor (var i = 0; i < unknown.length; i++) {\n\t\t\t\t\tvar delta = Math.round(diff / (unknown.length-i)); // no float values, just integer\n\t\t\t\t\tvar index = unknown[i];\n\t\t\t\t\twidth[index] += delta;\n\t\t\t\t\tvar new_width = this._getColumnWidth(columns[index], config, width[index]);\n\t\t\t\t\tif (new_width != width[index]) {\n\t\t\t\t\t\tdelta = new_width - width[index];\n\t\t\t\t\t\twidth[index] = new_width;\n\t\t\t\t\t}\n\t\t\t\t\tdiff -= delta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < width.length; i++) {\n\t\t\t\tcolumns[i].width = width[i];\n\t\t\t}\n\t\t} else {\n\t\t\tvar changed = (gridWidth != cols_width);\n\t\t\tthis.$config.width = cols_width - 1;\n\t\t\tconfig.grid_width = cols_width;\n\t\t\tif(changed){\n\t\t\t\tthis.$parent._setContentSize(this.$config.width, this.$config.height);\n//\t\t\t\tthis.$parent.$config.width = cols_width;\n\t\t\t}\n\t\t}\n\n\t},\n\n\t_renderGridHeader: function(){\n\t\tvar gantt = this.$gantt;\n\t\tvar config = this.$getConfig();\n\t\tvar locale = this.$gantt.locale;\n\t\tvar templates = this.$gantt.templates;\n\n\t\tvar columns = this.getGridColumns();\n\t\tif(config.rtl){\n\t\t\tcolumns = columns.reverse();\n\t\t}\n\t\tvar cells = [];\n\t\tvar width = 0,\n\t\t\tlabels = locale.labels;\n\n\t\tvar lineHeigth = config.scale_height - 1;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar last = i == columns.length - 1;\n\t\t\tvar col = columns[i];\n\n\t\t\t// ensure columns have non-empty names\n\t\t\tif (!col.name) {\n\t\t\t\tcol.name = gantt.uid() + \"\";\n\t\t\t}\n\n\t\t\tvar colWidth = col.width * 1;\n\n\t\t\tvar gridWidth = this._getGridWidth();\n\t\t\tif (last && gridWidth > width + colWidth)\n\t\t\t\tcol.width = colWidth = gridWidth - width;\n\t\t\twidth += colWidth;\n\t\t\tvar sort = (gantt._sort && col.name == gantt._sort.name) ? (\"<div class='gantt_sort gantt_\" + gantt._sort.direction + \"'></div>\") : \"\";\n\t\t\tvar cssClass = [\"gantt_grid_head_cell\",\n\t\t\t\t(\"gantt_grid_head_\" + col.name),\n\t\t\t\t(last ? \"gantt_last_cell\" : \"\"),\n\t\t\t\ttemplates.grid_header_class(col.name, col)].join(\" \");\n\n\t\t\tvar style = \"width:\" + (colWidth - (last ? 1 : 0)) + \"px;\";\n\t\t\tvar label = (col.label || labels[\"column_\" + col.name]);\n\t\t\tlabel = label || \"\";\n\n\t\t\tvar ariaAttrs = gantt._waiAria.gridScaleCellAttrString(col, label);\n\n\t\t\tvar cell = \"<div class='\" + cssClass + \"' style='\" + style + \"' \" + ariaAttrs + \" data-column-id='\" + col.name + \"' column_id='\" + col.name + \"'>\" + label + sort + \"</div>\";\n\t\t\tcells.push(cell);\n\t\t}\n\t\tthis.$grid_scale.style.height = (config.scale_height) + \"px\";\n\t\tthis.$grid_scale.style.lineHeight = lineHeigth + \"px\";\n\t\t//this.$grid_scale.style.width = \"inherit\";\n\t\tthis.$grid_scale.innerHTML = cells.join(\"\");\n\n\t\tif(this._renderHeaderResizers){\n\t\t\tthis._renderHeaderResizers();\n\t\t}\n\t},\n\n\t_getGridWidth: function(){\n\t\t// TODO: refactor/remove/comment some of _getGridWidth/this.$config.width/this.$state.width, it's not clear what they do\n\t\treturn this.$config.width;\n\t},\n\n\tdestructor: function(){\n\t\tthis._clearLayers(this.$gantt);\n\t\tif(this._mouseDelegates){\n\t\t\tthis._mouseDelegates.destructor();\n\t\t\tthis._mouseDelegates = null;\n\t\t}\n\t\tthis.$grid = null;\n\t\tthis.$grid_scale = null;\n\t\tthis.$grid_data = null;\n\t\tthis.$gantt = null;\n\n\t\tif(this.$config.rowStore){\n\t\t\tthis.$config.rowStore.detachEvent(this._staticBgHandler);\n\t\t\tthis.$config.rowStore = null;\n\t\t}\n\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\t}\n};\n\nutils.mixin(Grid.prototype, topPositionMixin());\n\nmodule.exports = Grid;\n","function createMixin(){\n\treturn {\n\t\t/**\n\t\t * Get top coordinate by row index (order)\n\t\t * @param {number} index \n\t\t */\n\t\tgetRowTop: function(index){\n\t\t\treturn index * this.$getConfig().row_height;\n\t\t},\n\n\t\t/**\n\t\t * Get top coordinate by item id\n\t\t * @param {*} task_id \n\t\t */\n\t\tgetItemTop: function (task_id) {\n\t\t\tif(this.$config.rowStore){\n\t\t\t\tvar store = this.$config.rowStore;\n\t\t\t\tif(!store) return 0;\n\n\t\t\t\tif(store.getParent && store.exists(task_id) && store.exists(store.getParent(task_id))){\n\t\t\t\t\tvar parent = store.getItem(store.getParent(task_id));\n\t\t\t\t\tif(this.$gantt.isSplitTask(parent)){\n\t\t\t\t\t\treturn this.getRowTop(store.getIndexById(parent.id));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.getRowTop(store.getIndexById(task_id));\n\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t}\n\t};\n}\n\nmodule.exports = createMixin;","var utils = require(\"../../../utils/utils\");\n\nfunction ScaleHelper(gantt){\n\tvar dateHelper = gantt.date;\n\tvar services = gantt.$services;\n\n\treturn {\n\t\tgetSum: function (sizes, from, to) {\n\t\t\tif (to === undefined)\n\t\t\t\tto = sizes.length - 1;\n\t\t\tif (from === undefined)\n\t\t\t\tfrom = 0;\n\n\t\t\tvar summ = 0;\n\t\t\tfor (var i = from; i <= to; i++)\n\t\t\t\tsumm += sizes[i];\n\n\t\t\treturn summ;\n\t\t},\n\t\tsetSumWidth: function (sum_width, scale, from, to) {\n\t\t\tvar parts = scale.width;\n\n\t\t\tif (to === undefined)\n\t\t\t\tto = parts.length - 1;\n\t\t\tif (from === undefined)\n\t\t\t\tfrom = 0;\n\t\t\tvar length = to - from + 1;\n\n\t\t\tif (from > parts.length - 1 || length <= 0 || to > parts.length - 1)\n\t\t\t\treturn;\n\n\t\t\tvar oldWidth = this.getSum(parts, from, to);\n\n\t\t\tvar diff = sum_width - oldWidth;\n\n\t\t\tthis.adjustSize(diff, parts, from, to);\n\t\t\tthis.adjustSize(-diff, parts, to + 1);\n\n\t\t\tscale.full_width = this.getSum(parts);\n\t\t},\n\t\tsplitSize: function (width, count) {\n\t\t\tvar arr = [];\n\t\t\tfor (var i = 0; i < count; i++) arr[i] = 0;\n\n\t\t\tthis.adjustSize(width, arr);\n\t\t\treturn arr;\n\n\t\t},\n\t\tadjustSize: function (width, parts, from, to) {\n\t\t\tif (!from)\n\t\t\t\tfrom = 0;\n\t\t\tif (to === undefined)\n\t\t\t\tto = parts.length - 1;\n\n\t\t\tvar length = to - from + 1;\n\n\t\t\tvar full = this.getSum(parts, from, to);\n\n\t\t\tfor (var i = from; i <= to; i++) {\n\t\t\t\tvar share = Math.floor(width * (full ? (parts[i] / full) : (1 / length)));\n\n\t\t\t\tfull -= parts[i];\n\t\t\t\twidth -= share;\n\t\t\t\tlength--;\n\n\t\t\t\tparts[i] += share;\n\t\t\t}\n\t\t\tparts[parts.length - 1] += width;\n\t\t},\n\t\tsortScales: function (scales) {\n\t\t\tfunction cellSize(unit, step) {\n\t\t\t\tvar d = new Date(1970, 0, 1);\n\t\t\t\treturn dateHelper.add(d, step, unit) - d;\n\t\t\t}\n\n\t\t\tscales.sort(function (a, b) {\n\t\t\t\tif (cellSize(a.unit, a.step) < cellSize(b.unit, b.step)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (cellSize(a.unit, a.step) > cellSize(b.unit, b.step)) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (var i = 0; i < scales.length; i++) {\n\t\t\t\tscales[i].index = i;\n\t\t\t}\n\t\t},\n\t\tprimaryScale: function () {\n\n\t\t\tvar config = services.getService(\"templateLoader\");\n\t\t\tconfig.initTemplate(\"date_scale\", undefined, undefined, services.config(), services.templates());\n\n\t\t\treturn {\n\t\t\t\tunit: services.config().scale_unit,\n\t\t\t\tstep: services.config().step,\n\t\t\t\ttemplate: services.templates().date_scale,\n\t\t\t\tdate: services.config().date_scale,\n\t\t\t\tcss: services.templates().scale_cell_class\n\t\t\t};\n\t\t},\n\n\t\tprepareConfigs: function (scales, min_coll_width, container_width, scale_height, minDate, maxDate, rtl) {\n\t\t\tvar heights = this.splitSize(scale_height, scales.length);\n\t\t\tvar full_width = container_width;\n\n\t\t\tvar configs = [];\n\t\t\tfor (var i = scales.length - 1; i >= 0; i--) {\n\t\t\t\tvar main_scale = (i == scales.length - 1);\n\t\t\t\tvar cfg = this.initScaleConfig(scales[i], minDate, maxDate);\n\t\t\t\tif (main_scale) {\n\t\t\t\t\tthis.processIgnores(cfg);\n\t\t\t\t}\n\n\t\t\t\tthis.initColSizes(cfg, min_coll_width, full_width, heights[i]);\n\t\t\t\tthis.limitVisibleRange(cfg);\n\n\t\t\t\tif (main_scale) {\n\t\t\t\t\tfull_width = cfg.full_width;\n\t\t\t\t}\n\n\t\t\t\tconfigs.unshift(cfg);\n\t\t\t}\n\n\n\t\t\tfor (var i = 0; i < configs.length - 1; i++) {\n\t\t\t\tthis.alineScaleColumns(configs[configs.length - 1], configs[i]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < configs.length; i++) {\n\n\t\t\t\tif(rtl){\n\t\t\t\t\tthis.reverseScale(configs[i]);\n\t\t\t\t}\n\t\t\t\tthis.setPosSettings(configs[i]);\n\t\t\t}\n\t\t\treturn configs;\n\n\t\t},\n\n\t\treverseScale: function(scale){\n\t\t\tscale.width = scale.width.reverse();\n\t\t\tscale.trace_x = scale.trace_x.reverse();\n\n\t\t\tvar indexes = scale.trace_indexes;\n\t\t\tscale.trace_indexes = {};\n\t\t\tscale.trace_index_transition = {};\n\t\t\tscale.rtl = true;\n\t\t\tfor(var i = 0; i < scale.trace_x.length; i++){\n\t\t\t\tscale.trace_indexes[scale.trace_x[i].valueOf()] = i;\n\t\t\t\tscale.trace_index_transition[indexes[scale.trace_x[i].valueOf()]] = i;\n\t\t\t}\n\t\t\treturn scale;\n\t\t},\n\n\t\tsetPosSettings: function (config) {\n\t\t\tfor (var i = 0, len = config.trace_x.length; i < len; i++) {\n\t\t\t\tconfig.left.push((config.width[i - 1] || 0) + (config.left[i - 1] || 0));\n\t\t\t}\n\t\t},\n\n\t\t_ignore_time_config: function (date, scale) {\n\n\t\t\tif (services.config().skip_off_time) {\n\t\t\t\tvar skip = true;\n\t\t\t\tvar probe = date;\n\n\t\t\t\t// check dates in case custom scale unit, e.g. {unit: \"month\", step: 3}\n\t\t\t\tfor (var i = 0; i < scale.step; i++) {\n\t\t\t\t\tif (i) {\n\t\t\t\t\t\tprobe = dateHelper.add(date, i, scale.unit);\n\t\t\t\t\t}\n\n\t\t\t\t\tskip = skip && !this.isWorkTime(probe, scale.unit);\n\t\t\t\t}\n\n\t\t\t\treturn skip;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t//defined in an extension\n\t\tprocessIgnores: function (config) {\n\t\t\tconfig.ignore_x = {};\n\t\t\tconfig.display_count = config.count;\n\t\t},\n\t\tinitColSizes: function (config, min_col_width, full_width, line_height) {\n\t\t\tvar cont_width = full_width;\n\n\t\t\tconfig.height = line_height;\n\n\t\t\tvar column_count = config.display_count === undefined ? config.count : config.display_count;\n\n\t\t\tif (!column_count)\n\t\t\t\tcolumn_count = 1;\n\n\t\t\tconfig.col_width = Math.floor(cont_width / column_count);\n\n\t\t\tif (min_col_width) {\n\t\t\t\tif (config.col_width < min_col_width) {\n\t\t\t\t\tconfig.col_width = min_col_width;\n\t\t\t\t\tcont_width = config.col_width * column_count;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconfig.width = [];\n\t\t\tvar ignores = config.ignore_x || {};\n\t\t\tfor (var i = 0; i < config.trace_x.length; i++) {\n\t\t\t\tif (ignores[config.trace_x[i].valueOf()] || (config.display_count == config.count)) {\n\t\t\t\t\tconfig.width[i] = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// width of month columns should be proportional month duration\n\t\t\t\t\tvar width = 1;\n\t\t\t\t\tif (config.unit == \"month\") {\n\t\t\t\t\t\tvar days = Math.round((dateHelper.add(config.trace_x[i], config.step, config.unit) - config.trace_x[i]) / (1000 * 60 * 60 * 24));\n\t\t\t\t\t\twidth = days;\n\t\t\t\t\t}\n\t\t\t\t\tconfig.width[i] = width;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.adjustSize(cont_width - this.getSum(config.width)/* 1 width per column from the code above */, config.width);\n\t\t\tconfig.full_width = this.getSum(config.width);\n\t\t},\n\t\tinitScaleConfig: function (config, min_date, max_date) {\n\t\t\tvar cfg = utils.mixin({\n\t\t\t\tcount: 0,\n\t\t\t\tcol_width: 0,\n\t\t\t\tfull_width: 0,\n\t\t\t\theight: 0,\n\t\t\t\twidth: [],\n\t\t\t\tleft: [],\n\t\t\t\ttrace_x: [],\n\t\t\t\ttrace_indexes: {},\n\t\t\t\tmin_date: new Date(min_date),\n\t\t\t\tmax_date: new Date(max_date)\n\t\t\t}, config);\n\n\t\t\tthis.eachColumn(config.unit, config.step, min_date, max_date, function (date) {\n\t\t\t\tcfg.count++;\n\t\t\t\tcfg.trace_x.push(new Date(date));\n\t\t\t\tcfg.trace_indexes[date.valueOf()] = cfg.trace_x.length - 1;\n\t\t\t});\n\n\t\t\tcfg.trace_x_ascending = cfg.trace_x.slice();\n\t\t\treturn cfg;\n\t\t},\n\t\titerateScales: function (lower_scale, upper_scale, from, to, callback) {\n\t\t\tvar upper_dates = upper_scale.trace_x;\n\t\t\tvar lower_dates = lower_scale.trace_x;\n\n\t\t\tvar prev = from || 0;\n\t\t\tvar end = to || (lower_dates.length - 1);\n\t\t\tvar prevUpper = 0;\n\n\n\t\t\tfor (var up = 1; up < upper_dates.length; up++) {\n\t\t\t\tvar target_index = (lower_scale.trace_indexes[+upper_dates[up]]);\n\t\t\t\tif (target_index !== undefined && target_index <= end) {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback.apply(this, [prevUpper, up, prev, target_index]);\n\t\t\t\t\t}\n\t\t\t\t\tprev = target_index;\n\t\t\t\t\tprevUpper = up;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\talineScaleColumns: function (lower_scale, upper_scale, from, to) {\n\t\t\tthis.iterateScales(lower_scale, upper_scale, from, to, function (upper_start, upper_end, lower_start, lower_end) {\n\t\t\t\tvar targetWidth = this.getSum(lower_scale.width, lower_start, lower_end - 1);\n\t\t\t\tvar actualWidth = this.getSum(upper_scale.width, upper_start, upper_end - 1);\n\t\t\t\tif (actualWidth != targetWidth) {\n\t\t\t\t\tthis.setSumWidth(targetWidth, upper_scale, upper_start, upper_end - 1);\n\t\t\t\t}\n\n\t\t\t});\n\t\t},\n\n\t\teachColumn: function (unit, step, min_date, max_date, callback) {\n\t\t\tvar start = new Date(min_date),\n\t\t\t\tend = new Date(max_date);\n\t\t\tif (dateHelper[unit + \"_start\"]) {\n\t\t\t\tstart = dateHelper[unit + \"_start\"](start);\n\t\t\t}\n\n\t\t\tvar curr = new Date(start);\n\t\t\tif (+curr >= +end) {\n\t\t\t\tend = dateHelper.add(curr, step, unit);\n\t\t\t}\n\t\t\twhile (+curr < +end) {\n\t\t\t\tcallback.call(this, new Date(curr));\n\t\t\t\tvar tzOffset = curr.getTimezoneOffset();\n\t\t\t\tcurr = dateHelper.add(curr, step, unit);\n\t\t\t\tcurr = gantt._correct_dst_change(curr, tzOffset, step, unit);\n\t\t\t\tif (dateHelper[unit + '_start'])\n\t\t\t\t\tcurr = dateHelper[unit + \"_start\"](curr);\n\t\t\t}\n\t\t},\n\t\tlimitVisibleRange: function (cfg) {\n\t\t\tvar dates = cfg.trace_x;\n\n\t\t\tvar left = 0, right = cfg.width.length - 1;\n\t\t\tvar diff = 0;\n\t\t\tif (+dates[0] < +cfg.min_date && left != right) {\n\t\t\t\tvar width = Math.floor(cfg.width[0] * ((dates[1] - cfg.min_date) / (dates[1] - dates[0])));\n\t\t\t\tdiff += cfg.width[0] - width;\n\t\t\t\tcfg.width[0] = width;\n\n\t\t\t\tdates[0] = new Date(cfg.min_date);\n\t\t\t}\n\n\t\t\tvar last = dates.length - 1;\n\t\t\tvar lastDate = dates[last];\n\t\t\tvar outDate = dateHelper.add(lastDate, cfg.step, cfg.unit);\n\t\t\tif (+outDate > +cfg.max_date && last > 0) {\n\t\t\t\tvar width = cfg.width[last] - Math.floor(cfg.width[last] * ((outDate - cfg.max_date) / (outDate - lastDate)));\n\t\t\t\tdiff += cfg.width[last] - width;\n\t\t\t\tcfg.width[last] = width;\n\t\t\t}\n\n\t\t\tif (diff) {\n\t\t\t\tvar full = this.getSum(cfg.width);\n\t\t\t\tvar shared = 0;\n\t\t\t\tfor (var i = 0; i < cfg.width.length; i++) {\n\t\t\t\t\tvar share = Math.floor(diff * (cfg.width[i] / full));\n\t\t\t\t\tcfg.width[i] += share;\n\t\t\t\t\tshared += share;\n\t\t\t\t}\n\t\t\t\tthis.adjustSize(diff - shared, cfg.width);\n\t\t\t}\n\n\t\t}\n\t};\n}\n\nmodule.exports = ScaleHelper;\n","var __extends = require(\"../../../utils/extends\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\"),\n\tCell = require(\"./cell\");\n\nvar Layout = (function (_super) {\n\t\"use strict\";\n\n\t__extends(Layout, _super);\n\tfunction Layout(parent, config, factory) {\n\t\tvar _this = _super.apply(this, arguments) || this;\n\n\t\tif(parent)\n\t\t\t_this.$root = true;\n\n\t\t_this._parseConfig(config);\n\t\t_this.$name = \"layout\";\n\t\treturn _this;\n\t}\n\n\tLayout.prototype.destructor = function () {\n\t\tif (this.$container && this.$view) {\n\t\t\tdomHelpers.removeNode(this.$view);\n\t\t}\n\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tvar child = this.$cells[i];\n\t\t\tchild.destructor();\n\t\t}\n\t\tthis.$cells = [];\n\n\t\t_super.prototype.destructor.call(this);\n\t};\n\n\tLayout.prototype._resizeScrollbars = function(autosize, scrollbars){\n\t\tvar scrollChanged = false;\n\t\tvar visibleScrollbars = [],\n\t\t\thiddenSrollbars = [];\n\n\t\tfunction showScrollbar(scrollbar){\n\t\t\tscrollbar.$parent.show();\n\t\t\tscrollChanged = true;\n\t\t\tvisibleScrollbars.push(scrollbar);\n\t\t}\n\t\tfunction hideScrollbar(scrollbar){\n\t\t\tscrollbar.$parent.hide();\n\t\t\tscrollChanged = true;\n\t\t\thiddenSrollbars.push(scrollbar);\n\t\t}\n\n\t\tvar scrollbar;\n\t\tfor(var i = 0; i < scrollbars.length; i++){\n\t\t\tscrollbar = scrollbars[i];\n\n\t\t\tif(autosize[scrollbar.$config.scroll]) {\n\t\t\t\thideScrollbar(scrollbar);\n\t\t\t}else if(scrollbar.shouldHide()){\n\t\t\t\thideScrollbar(scrollbar);\n\t\t\t}else if(scrollbar.shouldShow()){\n\t\t\t\tshowScrollbar(scrollbar);\n\t\t\t}else{\n\t\t\t\tif(scrollbar.isVisible()){\n\t\t\t\t\tvisibleScrollbars.push(scrollbar);\n\t\t\t\t}else{\n\t\t\t\t\thiddenSrollbars.push(scrollbar);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar visibleGroups = {};\n\t\tfor(var i = 0; i < visibleScrollbars.length; i++){\n\t\t\tif(visibleScrollbars[i].$config.group){\n\t\t\t\tvisibleGroups[visibleScrollbars[i].$config.group] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor(var i = 0; i < hiddenSrollbars.length; i++){\n\t\t\tscrollbar = hiddenSrollbars[i];\n\n\t\t\tif(scrollbar.$config.group && visibleGroups[scrollbar.$config.group]){\n\t\t\t\tshowScrollbar(scrollbar);\n\t\t\t}\n\t\t}\n\n\t\treturn scrollChanged;\n\t};\n\n\tLayout.prototype._syncCellSizes = function(groupName, newSize){\n\t\tif(!groupName)\n\t\t\treturn;\n\n\t\tvar groups = {};\n\n\t\tthis._eachChild(function(cell){\n\t\t\tif(cell.$config.group && cell.$name != \"scrollbar\" && cell.$name != \"resizer\"){\n\t\t\t\tif(!groups[cell.$config.group]){\n\t\t\t\t\tgroups[cell.$config.group] = [];\n\t\t\t\t}\n\t\t\t\tgroups[cell.$config.group].push(cell);\n\t\t\t}\n\t\t});\n\n\t\tif(groups[groupName]){\n\t\t\tthis._syncGroupSize(groups[groupName], newSize);\n\t\t}\n\t\treturn groups[groupName];\n\t};\n\n\tLayout.prototype._syncGroupSize = function(cells, newSize){\n\t\tif(!cells.length) return;\n\n\t\tvar property = cells[0].$parent._xLayout ? \"width\" : \"height\";\n\t\tvar direction = cells[0].$parent.getNextSibling(cells[0].$id) ? 1 : -1;\n\n\t\tfor(var i = 0; i < cells.length; i++){\n\t\t\tvar ownSize = cells[i].getSize();\n\n\t\t\tvar resizeSibling = direction > 0 ? cells[i].$parent.getNextSibling(cells[i].$id) : cells[i].$parent.getPrevSibling(cells[i].$id);\n\t\t\tif(resizeSibling.$name == \"resizer\"){\n\t\t\t\tresizeSibling = direction > 0 ? resizeSibling.$parent.getNextSibling(resizeSibling.$id) : resizeSibling.$parent.getPrevSibling(resizeSibling.$id);\n\t\t\t}\n\t\t\tvar siblingSize = resizeSibling.getSize();\n\n\t\t\tif(resizeSibling[property]){\n\t\t\t\tvar totalGravity = ownSize.gravity + siblingSize.gravity;\n\t\t\t\tvar totalSize = ownSize[property] + siblingSize[property];\n\t\t\t\tvar k = totalGravity / totalSize;\n\t\t\t\tcells[i].$config.gravity = k * newSize;\n\n\t\t\t\tresizeSibling.$config[property] = totalSize - newSize;\n\t\t\t\tresizeSibling.$config.gravity = totalGravity - k * newSize;\n\t\t\t}else{\n\n\n\t\t\t\tcells[i].$config[property] = newSize;\n\t\t\t}\n\n\t\t\tvar mainGrid = this.$gantt.$ui.getView(\"grid\");\n\t\t\tif(mainGrid && cells[i].$content === mainGrid && !mainGrid.$config.scrollable){\n\t\t\t\tthis.$gantt.config.grid_width = newSize;\n\t\t\t}\n\t\t}\n\t};\n\n\tLayout.prototype.resize = function(startStage){\n\t\tvar mainCall = false;\n\t\tif(this.$root && !this._resizeInProgress){\n\t\t\tthis.callEvent(\"onBeforeResize\", []);\n\t\t\tmainCall = true;\n\t\t\tthis._resizeInProgress = true;\n\t\t}\n\n\t\t_super.prototype.resize.call(this, true);\n\t\t_super.prototype.resize.call(this, false);\n\n\t\tif(mainCall){\n\n\t\t\tvar contentViews = [];\n\t\t\tcontentViews = contentViews.concat(this.getCellsByType(\"viewCell\"));\n\t\t\tcontentViews = contentViews.concat(this.getCellsByType(\"viewLayout\"));\n\t\t\tcontentViews = contentViews.concat(this.getCellsByType(\"hostCell\"));\n\n\t\t\tvar scrollbars = this.getCellsByType(\"scroller\");\n\n\t\t\tfor(var i = 0; i < contentViews.length; i++){\n\t\t\t\tif(!contentViews[i].$config.hidden)\n\t\t\t\t\tcontentViews[i].setContentSize();\n\t\t\t}\n\n\t\t\tvar autosize = this._getAutosizeMode(this.$config.autosize);\n\n\t\t\tvar scrollChanged = this._resizeScrollbars(autosize, scrollbars);\n\n\t\t\tif(this.$config.autosize){\n\t\t\t\tthis.autosize(this.$config.autosize);\n\t\t\t\tscrollChanged = true;\n\t\t\t}\n\n\t\t\tif(scrollChanged){\n\t\t\t\tthis.resize();\n\t\t\t\tfor(var i = 0; i < contentViews.length; i++){\n\t\t\t\t\tif(!contentViews[i].$config.hidden)\n\t\t\t\t\t\tcontentViews[i].setContentSize();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onResize\", []);\n\t\t}\n\t\tif(mainCall){\n\t\t\tthis._resizeInProgress = false;\n\t\t}\n\t};\n\n\tLayout.prototype._eachChild = function(code, cell){\n\t\tcell = cell || this;\n\t\tcode(cell);\n\t\tif(cell.$cells){\n\t\t\tfor(var i = 0; i < cell.$cells.length; i++){\n\t\t\t\tthis._eachChild(code, cell.$cells[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\tLayout.prototype.isChild = function(view){\n\t\tvar res = false;\n\t\tthis._eachChild(function(child){\n\t\t\tif(child === view || child.$content === view){\n\t\t\t\tres = true;\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t};\n\n\tLayout.prototype.getCellsByType = function(type){\n\t\tvar res = [];\n\t\tif(type === this.$name){\n\t\t\tres.push(this);\n\t\t}\n\n\t\tif(this.$content && this.$content.$name == type){\n\t\t\tres.push(this.$content);\n\t\t}\n\n\t\tif(this.$cells){\n\t\t\tfor(var i = 0; i < this.$cells.length; i++){\n\t\t\t\tvar children = Layout.prototype.getCellsByType.call(this.$cells[i], type);\n\t\t\t\tif(children.length){\n\t\t\t\t\tres.push.apply(res, children);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\n\tLayout.prototype.getNextSibling = function(cellId){\n\t\tvar index = this.cellIndex(cellId);\n\t\tif(index >= 0 && this.$cells[index + 1]){\n\t\t\treturn this.$cells[index + 1];\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tLayout.prototype.getPrevSibling = function(cellId){\n\t\tvar index = this.cellIndex(cellId);\n\t\tif(index >= 0 && this.$cells[index - 1]){\n\t\t\treturn this.$cells[index - 1];\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t};\n\n\n\tLayout.prototype.cell = function (id) {\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tvar child = this.$cells[i];\n\t\t\tif (child.$id === id) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\tvar sub = child.cell(id);\n\t\t\tif (sub) {\n\t\t\t\treturn sub;\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype.cellIndex = function (id) {\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tif (this.$cells[i].$id === id) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t};\n\tLayout.prototype.moveView = function (view, ind) {\n\t\tif (this.$cells[ind] !== view) {\n\t\t\treturn window.alert(\"Not implemented\");\n\t\t}\n\t\telse {\n\t\t\tind += this.$config.header ? 1 : 0;\n\t\t\tvar node = this.$view;\n\t\t\tif (ind >= node.childNodes.length) {\n\t\t\t\tnode.appendChild(view.$view);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode.insertBefore(view.$view, node.childNodes[ind]);\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype._parseConfig = function (config) {\n\t\tthis.$cells = [];\n\t\tthis._xLayout = !config.rows;\n\t\tvar cells = config.rows || config.cols || config.views;\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tvar cell = cells[i];\n\t\t\tcell.mode = this._xLayout ? \"x\" : \"y\";\n\t\t\tvar $content = this.$factory.initUI(cell, this);\n\t\t\tif(!$content){\n\t\t\t\tcells.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}else{\n\t\t\t\t$content.$parent = this;\n\t\t\t\tthis.$cells.push($content);\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype.getCells = function () {\n\t\treturn this.$cells;\n\t};\n\tLayout.prototype.render = function () {\n\t\tvar view = domHelpers.insertNode(this.$container, this.$toHTML());\n\t\tthis.$fill(view, null);\n\t\tthis.callEvent(\"onReady\", []);\n\t\tthis.resize();\n\n\t\t// do simple repaint after the first call\n\t\tthis.render = this.resize;\n\t};\n\tLayout.prototype.$fill = function (node, parent) {\n\t\tthis.$view = node;\n\t\tthis.$parent = parent;\n\t\tvar cells = domHelpers.getChildNodes(node, \"gantt_layout_cell\");\n\t\tfor (var i = cells.length - 1; i >= 0; i--) {\n\t\t\tvar sub = this.$cells[i];\n\t\t\tsub.$fill(cells[i], this);\n\t\t\t// initially hidden cell\n\t\t\tif (sub.$config.hidden) {\n\t\t\t\tsub.$view.parentNode.removeChild(sub.$view);\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype.$toHTML = function () {\n\t\tvar mode = this._xLayout ? \"x\" : \"y\";\n\t\tvar html = [];\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\thtml.push(this.$cells[i].$toHTML());\n\t\t}\n\t\treturn _super.prototype.$toHTML.call(this, html.join(\"\"), (this.$root ? \"gantt_layout_root \" : \"\") + \"gantt_layout gantt_layout_\" + mode);\n\t};\n\n\tLayout.prototype.getContentSize = function(mode){\n\t\tvar contentWidth = 0,\n\t\t\tcontentHeight = 0;\n\n\t\tvar cellSize, cell, borders;\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tcell = this.$cells[i];\n\t\t\tif(cell.$config.hidden)\n\t\t\t\tcontinue;\n\n\t\t\tcellSize = cell.getContentSize(mode);\n\n\t\t\tif(cell.$config.view === \"scrollbar\" && mode[cell.$config.scroll]){\n\t\t\t\tcellSize.height = 0;\n\t\t\t\tcellSize.width = 0;\n\t\t\t}\n\n\t\t\tif(cell.$config.resizer){\n\t\t\t\tif(this._xLayout){\n\t\t\t\t\tcellSize.height = 0;\n\t\t\t\t}else{\n\t\t\t\t\tcellSize.width = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tborders = cell._getBorderSizes();\n\n\t\t\tif(this._xLayout){\n\t\t\t\tcontentWidth += (cellSize.width + borders.horizontal);\n\t\t\t\tcontentHeight = Math.max(contentHeight, (cellSize.height + borders.vertical));\n\t\t\t}else{\n\t\t\t\tcontentWidth = Math.max(contentWidth, cellSize.width + borders.horizontal);\n\t\t\t\tcontentHeight += cellSize.height + borders.vertical;\n\t\t\t}\n\t\t}\n\n\t\tborders = this._getBorderSizes();\n\t\tcontentWidth += borders.horizontal;\n\t\tcontentHeight += borders.vertical;\n\n\t\tif(this.$root){\n\t\t\tcontentWidth += 1;\n\t\t\tcontentHeight += 1;\n\t\t}\n\n\t\treturn {\n\t\t\twidth: contentWidth,\n\t\t\theight: contentHeight\n\t\t};\n\t};\n\n\tLayout.prototype._cleanElSize = function(value){\n\t\treturn ((value || \"\").toString().replace(\"px\", \"\") * 1 || 0);\n\t};\n\tLayout.prototype._getBoxStyles = function(div){\n\t\tvar computed = null;\n\t\tif(window.getComputedStyle){\n\t\t\tcomputed = window.getComputedStyle(div, null);\n\t\t}else{\n\t\t\t//IE with elem.currentStyle does not calculate sizes from %, so will use the default approach\n\t\t\tcomputed = {\n\t\t\t\t\"width\":div.clientWidth,\n\t\t\t\t\"height\":div.clientHeight\n\t\t\t};\n\t\t}\n\t\tvar properties = [\n\t\t\t\"width\",\n\t\t\t\"height\",\n\n\t\t\t\"paddingTop\",\n\t\t\t\"paddingBottom\",\n\t\t\t\"paddingLeft\",\n\t\t\t\"paddingRight\",\n\n\t\t\t\"borderLeftWidth\",\n\t\t\t\"borderRightWidth\",\n\t\t\t\"borderTopWidth\",\n\t\t\t\"borderBottomWidth\"\n\t\t];\n\t\tvar styles = {\n\t\t\tboxSizing:(computed.boxSizing == \"border-box\")\n\t\t};\n\n\t\tif(computed.MozBoxSizing){\n\t\t\tstyles.boxSizing = (computed.MozBoxSizing == \"border-box\");\n\t\t}\n\t\tfor(var i =0; i < properties.length; i++){\n\t\t\tstyles[properties[i]] = computed[properties[i]] ? this._cleanElSize(computed[properties[i]]) : 0;\n\t\t}\n\n\n\t\tvar box = {\n\t\t\thorPaddings : (styles.paddingLeft + styles.paddingRight + styles.borderLeftWidth + styles.borderRightWidth),\n\t\t\tvertPaddings : (styles.paddingTop + styles.paddingBottom + styles.borderTopWidth + styles.borderBottomWidth),\n\t\t\tborderBox: styles.boxSizing,\n\t\t\tinnerWidth : styles.width,\n\t\t\tinnerHeight : styles.height,\n\t\t\touterWidth : styles.width,\n\t\t\touterHeight : styles.height\n\t\t};\n\n\n\t\tif(box.borderBox){\n\t\t\tbox.innerWidth -= box.horPaddings;\n\t\t\tbox.innerHeight -= box.vertPaddings;\n\t\t}else{\n\t\t\tbox.outerWidth += box.horPaddings;\n\t\t\tbox.outerHeight += box.vertPaddings;\n\t\t}\n\n\t\treturn box;\n\t};\n\n\tLayout.prototype._getAutosizeMode = function(config){\n\t\tvar res = {x:false, y:false};\n\t\tif(config === \"xy\"){\n\t\t\tres.x = res.y = true;\n\t\t}else if(config === \"y\" || config === true){\n\t\t\tres.y = true;\n\t\t}else if(config === \"x\"){\n\t\t\tres.x = true;\n\t\t}\n\t\treturn res;\n\t};\n\n\tLayout.prototype.autosize = function(mode) {\n\t\tvar res = this._getAutosizeMode(mode);\n\t\tvar boxSizes = this._getBoxStyles(this.$container);\n\t\tvar contentSizes = this.getContentSize(mode);\n\n\t\tvar node = this.$container;\n\t\tif(res.x){\n\t\t\tif(boxSizes.borderBox){\n\t\t\t\tcontentSizes.width += boxSizes.horPaddings;\n\t\t\t}\n\t\t\tnode.style.width = contentSizes.width + \"px\";\n\t\t}\n\t\tif(res.y){\n\t\t\tif(boxSizes.borderBox){\n\t\t\t\tcontentSizes.height += boxSizes.vertPaddings;\n\t\t\t}\n\t\t\tnode.style.height = contentSizes.height + \"px\";\n\t\t}\n\t};\n\n\tLayout.prototype.getSize = function () {\n\t\tthis._sizes = [];\n\t\tvar width = 0;\n\t\tvar minWidth = 0;\n\t\tvar maxWidth = 100000;\n\t\tvar height = 0;\n\t\tvar maxHeight = 100000;\n\t\tvar minHeight = 0;\n\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\n\t\t\tvar size = this._sizes[i] = this.$cells[i].getSize();\n\t\t\tif (this.$cells[i].$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this._xLayout) {\n\t\t\t\tif (!size.width && size.minWidth) {\n\t\t\t\t\twidth += size.minWidth;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twidth += size.width;\n\t\t\t\t}\n\t\t\t\tmaxWidth += size.maxWidth;\n\t\t\t\tminWidth += size.minWidth;\n\t\t\t\theight = Math.max(height, size.height);\n\t\t\t\tmaxHeight = Math.min(maxHeight, size.maxHeight); // min of maxHeight\n\t\t\t\tminHeight = Math.max(minHeight, size.minHeight); // max of minHeight\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!size.height && size.minHeight) {\n\t\t\t\t\theight += size.minHeight;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\theight += size.height;\n\t\t\t\t}\n\t\t\t\tmaxHeight += size.maxHeight;\n\t\t\t\tminHeight += size.minHeight;\n\t\t\t\twidth = Math.max(width, size.width);\n\t\t\t\tmaxWidth = Math.min(maxWidth, size.maxWidth); // min of maxWidth\n\t\t\t\tminWidth = Math.max(minWidth, size.minWidth); // max of minWidth\n\t\t\t}\n\t\t}\n\t\tvar self = _super.prototype.getSize.call(this);\n\t\t// maxWidth\n\t\tif (self.maxWidth >= 100000) {\n\t\t\tself.maxWidth = maxWidth;\n\t\t}\n\t\t// maxHeight\n\t\tif (self.maxHeight >= 100000) {\n\t\t\tself.maxHeight = maxHeight;\n\t\t}\n\t\t// minWidth\n\t\tself.minWidth = self.minWidth !== self.minWidth ? 0 : self.minWidth;// || self.width || Math.max(minWidth, width);\n\t\t// minHeight\n\t\tself.minHeight = self.minHeight !== self.minHeight ? 0 : self.minHeight;//self.minHeight || self.height || Math.max(minHeight, height);\n\t\t// sizes with paddings and margins\n\t\tif (this._xLayout) {\n\t\t\tself.minWidth += this.$config.margin * (this.$cells.length) || 0;\n\t\t\tself.minWidth += this.$config.padding * 2 || 0;\n\t\t\tself.minHeight += (this.$config.padding * 2) || 0;\n\t\t}\n\t\telse {\n\t\t\tself.minHeight += this.$config.margin * (this.$cells.length) || 0;\n\t\t\tself.minHeight += (this.$config.padding * 2) || 0;\n\t\t}\n\t\t\n\t\treturn self;\n\t};\n\t// calc total gravity and free space\n\tLayout.prototype._calcFreeSpace = function (s, cell, xLayout) {\n\t\tvar min = xLayout ? cell.minWidth : cell.minHeight;\n\t\tvar max = xLayout ? cell.maxWidth : cell.maxWidth;\n\t\tvar side = s;\n\t\tif (!side) {\n\t\t\tside = Math.floor(this._free / this._gravity * cell.gravity);\n\t\t\tif (side > max) {\n\t\t\t\tside = max;\n\t\t\t\tthis._free -= side;\n\t\t\t\tthis._gravity -= cell.gravity;\n\t\t\t}\n\t\t\tif (side < min) {\n\t\t\t\tside = min;\n\t\t\t\tthis._free -= side;\n\t\t\t\tthis._gravity -= cell.gravity;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (side > max) {\n\t\t\t\tside = max;\n\t\t\t}\n\t\t\tif (side < min) {\n\t\t\t\tside = min;\n\t\t\t}\n\t\t\tthis._free -= side;\n\t\t}\n\t\treturn side;\n\t};\n\tLayout.prototype._calcSize = function (s, size, xLayout) {\n\t\tvar side = s;\n\t\tvar min = xLayout ? size.minWidth : size.minHeight;\n\t\tvar max = xLayout ? size.maxWidth : size.maxHeight;\n\t\tif (!side) {\n\t\t\tside = Math.floor(this._free / this._gravity * size.gravity);\n\t\t}\n\t\tif (side > max) {\n\t\t\tside = max;\n\t\t}\n\t\tif (side < min) {\n\t\t\tside = min;\n\t\t}\n\t\treturn side;\n\t};\n\n\tLayout.prototype._configureBorders = function(){\n\t\tif(this.$root){\n\t\t\tthis._setBorders([\n\t\t\t\tthis._borders.left,\n\t\t\t\tthis._borders.top,\n\t\t\t\tthis._borders.right,\n\t\t\t\tthis._borders.bottom\n\t\t\t],\n\t\t\tthis);\n\t\t}\n\n\t\tvar borderClass = this._xLayout ? this._borders.right : this._borders.bottom;\n\n\t\tvar cells = this.$cells;\n\n\t\tvar lastVisibleIndex = cells.length - 1;\n\t\tfor(var i = lastVisibleIndex; i >= 0; i--){\n\t\t\tif (!cells[i].$config.hidden) {\n\t\t\t\tlastVisibleIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tif (cells[i].$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar lastCell = i >= lastVisibleIndex;\n\t\t\tvar borderColorClass = \"\";\n\t\t\tif(!lastCell && cells[i + 1]){\n\t\t\t\tif(cells[i + 1].$config.view == \"scrollbar\"){\n\t\t\t\t\tif(this._xLayout){\n\t\t\t\t\t\tlastCell = true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tborderColorClass = \"gantt_layout_cell_border_transparent\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tthis._setBorders(lastCell ? [] : [borderClass, borderColorClass], cells[i]);\n\t\t}\n\t};\n\n\tLayout.prototype._updateCellVisibility = function(){\n\t\tvar oldVisibleCells = this._visibleCells || {};\n\t\tvar firstCall = !this._visibleCells;\n\t\tvar visibleCells = {};\n\t\tvar cell;\n\t\tfor (var i = 0; i < this._sizes.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (!firstCall && cell.$config.hidden && oldVisibleCells[cell.$id]) {\n\t\t\t\tcell._hide(true);\n\t\t\t}else if(!cell.$config.hidden && !oldVisibleCells[cell.$id]){\n\t\t\t\tcell._hide(false);\n\t\t\t}\n\n\t\t\tif(!cell.$config.hidden){\n\t\t\t\tvisibleCells[cell.$id] = true;\n\t\t\t}\n\t\t}\n\t\tthis._visibleCells = visibleCells;\n\t};\n\n\tLayout.prototype.setSize = function (x, y) {\n\t\tthis._configureBorders();\n\t\t_super.prototype.setSize.call(this, x, y);\n\t\ty = this.$lastSize.contentY;\n\t\tx = this.$lastSize.contentX;\n\n\t\tvar padding = (this.$config.padding || 0);\n\t\tthis.$view.style.padding = padding + \"px\";\n\t\tthis._gravity = 0;\n\t\tthis._free = this._xLayout ? x : y;\n\t\tthis._free -= padding * 2;\n\t\t// calc all gravity\n\n\t\tvar cell,\n\t\t\tsize;\n\n\t\tthis._updateCellVisibility();\n\n\t\tfor (var i = 0; i < this._sizes.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (cell.$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar margin = (this.$config.margin || 0);\n\t\t\tif(cell.$name == \"resizer\" && !margin){\n\t\t\t\tmargin = -1;\n\t\t\t}\n\n\t\t\t// set margins to child cell\n\t\t\tvar cellView = cell.$view;\n\n\t\t\tvar marginSide = this._xLayout ? \"marginRight\" : \"marginBottom\";\n\t\t\tif (i !== this.$cells.length - 1) {\n\t\t\t\tcellView.style[marginSide] = margin + \"px\";\n\t\t\t\tthis._free -= margin; // calc free space without margin\n\t\t\t}\n\t\t\tsize = this._sizes[i];\n\t\t\tif (this._xLayout) {\n\t\t\t\tif (!size.width) {\n\t\t\t\t\tthis._gravity += size.gravity;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!size.height) {\n\t\t\t\t\tthis._gravity += size.gravity;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this._sizes.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (cell.$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsize = this._sizes[i];\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\t\t\tif (this._xLayout) {\n\t\t\t\tthis._calcFreeSpace(width, size, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._calcFreeSpace(height, size, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (cell.$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsize = this._sizes[i];\n\t\t\tvar dx = void 0;\n\t\t\tvar dy = void 0;\n\t\t\tif (this._xLayout) {\n\t\t\t\tdx = this._calcSize(size.width, size, true);\n\t\t\t\tdy = y - padding * 2; // layout height without paddings\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdx = x - padding * 2; // layout width without paddings\n\t\t\t\tdy = this._calcSize(size.height, size, false);\n\t\t\t}\n\n\t\t\tcell.setSize(dx, dy);\n\t\t}\n\n\t};\n\n\treturn Layout;\n}(Cell));\n\nmodule.exports = Layout;","function checkTimeout(host, updPerSecond){\n\tif (!updPerSecond)\n\t\treturn true;\n\t\n\tif (host._on_timeout)\n\t\treturn false;\n\t\n\tvar timeout = Math.ceil(1000/updPerSecond);\n\tif (timeout < 2) return true;\n\n\tsetTimeout(function(){\n\t\tdelete host._on_timeout;\n\t}, timeout);\n\n\thost._on_timeout = true;\n\treturn true;\n}\n\nmodule.exports = checkTimeout;","function extend(gantt){\n\n\tgantt.destructor = function(){\n\t\tgantt.callEvent(\"onDestroy\", []);\n\n\t\tthis.clearAll();\n\t\tthis.detachAllEvents();\n\n\t\tif(this.$root){\n\t\t\tdelete this.$root.gantt;\n\t\t}\n\n\t\tthis._eventRemoveAll();\n\t\tif(this.$layout){\n\t\t\tthis.$layout.destructor();\n\t\t}\n\n\t\tthis.resetLightbox();\n\n\t\tif(this._dp && this._dp.destructor){\n\t\t\tthis._dp.destructor();\n\t\t}\n\n\t\tthis.$services.destructor();\n\n\t\tfor(var i in this){\n\t\t\tif(i.indexOf(\"$\") === 0){\n\t\t\t\tdelete this[i];\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = extend;\n","/*\n \tasserts will be removed in final code, so you can place them anythere\n\twithout caring about performance impacts\n*/\n\nmodule.exports = function(gantt){\n\treturn function assert(check, message){\n\t\tif (!check){\n\t\t\tif(gantt.config.show_errors && gantt.callEvent(\"onError\",[message]) !== false) {\n\t\t\t\tgantt.message({type: \"error\", text: message, expire: -1});\n\n\t\t\t\t// eslint-disable-next-line no-debugger\n\t\t\t\tdebugger;\n\t\t\t}\n\t\t}\n\t};\n};","var domHelpers = require(\"../utils/dom_helpers\"),\n\thelpers = require(\"../utils/helpers\");\n\nmodule.exports = function(gantt){\n\tvar calculateScaleRange = require(\"./gantt_data_range\");\n\n\tgantt.assert = require(\"./common/assert\")(gantt);\n\n//initial initialization\n\tgantt.init = function(node, from, to){\n\t\tif(from && to){\n\t\t\tthis.config.start_date = this._min_date = new Date(from);\n\t\t\tthis.config.end_date = this._max_date = new Date(to);\n\t\t}\n\t\tthis.date.init();\n\n\t\tif (!this.config.scroll_size)\n\t\t\tthis.config.scroll_size = domHelpers.getScrollSize() || 1;\n\n\t\t//can be called only once\n\t\tthis.init = function(node){\n\t\t\tif (this.$container && this.$container.parentNode){\n\t\t\t\tthis.$container.parentNode.removeChild(this.$container);\n\t\t\t\tthis.$container = null;\n\t\t\t}\n\n\t\t\tif(this.$layout){\n\t\t\t\tthis.$layout.clear();\n\t\t\t}\n\t\t\tthis._reinit(node);\n\t\t};\n\n\t\tthis._reinit(node);\n\t};\n\n\tgantt._reinit = function(node){\n\t\tthis.callEvent(\"onBeforeGanttReady\", []);\n\t\t//this._init_tasks_range();\n\t\tthis.resetLightbox();\n\t\tthis._update_flags();\n\n\n\t\tvar config = this.$services.getService(\"templateLoader\");\n\t\tconfig.initTemplates(this);\n\n\t\tthis._clearTaskLayers();\n\t\tthis._clearLinkLayers();\n\n\t\t//this.clear\n\t\tif(this.$layout){\n\t\t\tthis.$layout.destructor();\n\t\t\tthis.$ui.reset();\n\t\t}\n\n\t\tthis.$root = domHelpers.toNode(node);\n\t\tif(this.$root){\n\t\t\tthis.$root.innerHTML = \"\";\n\t\t}\n\t\tthis.$root.gantt = this;\n\t\tcalculateScaleRange(this);\n\t\tthis.config.layout.id = \"main\";\n\t\tthis.$layout = this.$ui.createView(\"layout\", node, this.config.layout);\n\n\t\tthis.$layout.attachEvent(\"onBeforeResize\", function(){\n\t\t\tvar storeNames = gantt.$services.getService(\"datastores\");\n\t\t\tfor(var i = 0; i < storeNames.length; i++){\n\t\t\t\tgantt.getDatastore(storeNames[i]).filter();\n\t\t\t}\n\t\t});\n\n\t\tthis.$layout.attachEvent(\"onResize\", function(){\n\t\t\tgantt.refreshData();\n\t\t});\n\n\t\tthis.callEvent(\"onGanttLayoutReady\", []);\n\t\tthis.$layout.render();\n\n\t\tgantt.$container = this.$layout.$container.firstChild;\n\n\t\taddResizeListener(gantt);\n\n\t\tthis.callEvent(\"onTemplatesReady\",[]);\n\t\tthis.$mouseEvents.reset(this.$root);\n\t\tthis.callEvent(\"onGanttReady\", []);\n\n\t\tthis.render();\n\t};\n\n\tfunction addResizeListener(gantt){\n\t\tvar resizeDelay;\n\n\t\tvar containerStyles = window.getComputedStyle(gantt.$root);\n\t\tif(containerStyles.getPropertyValue(\"position\") == \"static\"){\n\t\t\tgantt.$root.style.position = \"relative\";\n\t\t}\n\n\t\tvar resizeWatcher = document.createElement('iframe');\n\t\tresizeWatcher.className = \"gantt_container_resize_watcher\";\n\t\tresizeWatcher.tabIndex = -1;\n\n\t\tgantt.$root.appendChild(resizeWatcher);\n\t\tresizeWatcher.contentWindow.addEventListener('resize', function(){ \n\t\t\tclearTimeout(resizeDelay);\n\t\t\tresizeDelay = setTimeout(function(){\n\t\t\t\tgantt.render();\n\t\t\t}, 300);\t\t\n\t\t});\n\t}\n\n\tgantt.$click={\n\t\tbuttons:{\n\t\t\t\"edit\":function(id){\n\t\t\t\tgantt.showLightbox(id);\n\t\t\t},\n\t\t\t\"delete\":function(id){\n\t\t\t\tvar question = gantt.locale.labels.confirm_deleting;\n\t\t\t\tvar title = gantt.locale.labels.confirm_deleting_title;\n\n\t\t\t\tgantt._dhtmlx_confirm(question, title, function(){\n\t\t\t\t\tif(!gantt.isTaskExists(id)){\n\t\t\t\t\t\tgantt.hideLightbox();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar task = gantt.getTask(id);\n\t\t\t\t\tif(task.$new){\n\t\t\t\t\t\tgantt.silent(function(){\n\t\t\t\t\t\t\tgantt.deleteTask(id, true);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tgantt.refreshData();\n\t\t\t\t\t}else{\n\t\t\t\t\t\tgantt.deleteTask(id);\n\t\t\t\t\t}\n\n\t\t\t\t\tgantt.hideLightbox();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n//renders self\n\tgantt.render = function(){\n\t\tthis.callEvent(\"onBeforeGanttRender\", []);\n\n\t\tif (!this.config.sort && this._sort) {\n\t\t\tthis._sort = undefined;\n\t\t}\n\n\t\tvar pos = this.getScrollState();\n\t\tvar posX = pos ? pos.x : 0;\n\t\tif(this._getHorizontalScrollbar()){\n\t\t\tvar scrollbar = this._getHorizontalScrollbar();\n\t\t\tposX = scrollbar.$config.codeScrollLeft || posX || 0;\n\t\t}\n\n\n\t\tvar visible_date = null;\n\t\tif(posX){\n\t\t\tvisible_date = gantt.dateFromPos(posX + this.config.task_scroll_offset);\n\t\t}\n\t\tcalculateScaleRange(this);\n\n\t\tthis.$layout.$config.autosize = this.config.autosize;\n\t\tthis.$layout.resize();\n\n\t\tif(this.config.preserve_scroll && pos){\n\n\t\t\tif(posX){\n\t\t\t\tvar new_pos = gantt.getScrollState();\n\t\t\t\tvar new_date = gantt.dateFromPos(new_pos.x);\n\t\t\t\tif(!(+visible_date == +new_date && new_pos.y == pos.y)){\n\t\t\t\t\tif(visible_date){\n\t\t\t\t\t\tthis.showDate(visible_date);\n\t\t\t\t\t}\n\t\t\t\t\tif(pos.y)\n\t\t\t\t\t\tgantt.scrollTo(undefined, pos.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.callEvent(\"onGanttRender\", []);\n\t};\n\n\t//TODO: add layout.resize method that wouldn't trigger data repaint\n\tgantt.setSizes = gantt.render;\n\n\tgantt.locate = function(e) {\n\t\tvar trg = domHelpers.getTargetNode(e);\n\n\t\t//ignore empty cells\n\t\tvar className = domHelpers.getClassName(trg);\n\t\tif ((className || \"\").indexOf(\"gantt_task_cell\") >= 0) return null;\n\n\t\tvar targetAttribute = arguments[1] || this.config.task_attribute;\n\n\t\tvar node = domHelpers.locateAttribute(trg, targetAttribute);\n\t\tif(node){\n\t\t\treturn node.getAttribute(targetAttribute);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tgantt._locate_css = function(e, classname, strict){\n\t\treturn domHelpers.locateClassName(e, classname, strict);\n\t};\n\n\tgantt._locateHTML = function(e, attribute) {\n\t\treturn domHelpers.locateAttribute(e, attribute || this.config.task_attribute);\n\t};\n\n\tgantt.getTaskRowNode = function(id) {\n\t\tvar els = this.$grid_data.childNodes;\n\t\tvar attribute = this.config.task_attribute;\n\t\tfor (var i = 0; i < els.length; i++) {\n\t\t\tif (els[i].getAttribute) {\n\t\t\t\tvar value = els[i].getAttribute(attribute);\n\t\t\t\tif (value == id) return els[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tgantt.changeLightboxType = function(type){\n\t\tif(this.getLightboxType() == type)\n\t\t\treturn true;\n\t\tgantt._silent_redraw_lightbox(type);\n\t};\n\n\n\tgantt._get_link_type = function (from_start, to_start) {\n\t\tvar type = null;\n\t\tif (from_start && to_start) {\n\t\t\ttype = gantt.config.links.start_to_start;\n\t\t} else if (!from_start && to_start) {\n\t\t\ttype = gantt.config.links.finish_to_start;\n\t\t} else if (!from_start && !to_start) {\n\t\t\ttype = gantt.config.links.finish_to_finish;\n\t\t} else if (from_start && !to_start) {\n\t\t\ttype = gantt.config.links.start_to_finish;\n\t\t}\n\t\treturn type;\n\t};\n\n\tgantt.isLinkAllowed = function (from, to, from_start, to_start) {\n\t\tvar link = null;\n\t\tif (typeof(from) == \"object\") {\n\t\t\tlink = from;\n\t\t} else {\n\t\t\tlink = {source: from, target: to, type: this._get_link_type(from_start, to_start)};\n\t\t}\n\n\t\tif (!link) return false;\n\t\tif (!(link.source && link.target && link.type)) return false;\n\t\tif (link.source == link.target) return false;\n\n\t\tvar res = true;\n\t\t//any custom rules\n\t\tif (this.checkEvent(\"onLinkValidation\"))\n\t\t\tres = this.callEvent(\"onLinkValidation\", [link]);\n\n\t\treturn res;\n\t};\n\n\n\tgantt._correct_dst_change = function(date, prevOffset, step, unit){\n\t\tvar time_unit = helpers.getSecondsInUnit(unit) * step;\n\t\tif(time_unit > 60*60 && time_unit < 60*60*24){\n\t\t\t//correct dst change only if current unit is more than one hour and less than day (days have own checking), e.g. 12h\n\t\t\tvar offsetChanged = date.getTimezoneOffset() - prevOffset;\n\t\t\tif(offsetChanged){\n\t\t\t\tdate = gantt.date.add(date, offsetChanged, \"minute\");\n\t\t\t}\n\t\t}\n\t\treturn date;\n\t};\n\n\tgantt.isSplitTask = function(task){\n\t\tgantt.assert(task && task instanceof Object, \"Invalid argument <b>task</b>=\"+task+\" of gantt.isSplitTask. Task object was expected\");\n\t\treturn this.$data.tasksStore._isSplitItem(task);\n\t};\n\n\tgantt._is_icon_open_click = function(e) {\n\t\tif (!e)\n\t\t\treturn false;\n\t\tvar target = e.target || e.srcElement;\n\t\tif (!(target && target.className))\n\t\t\treturn false;\n\t\tvar className = domHelpers.getClassName(target);\n\t\tif (className.indexOf(\"gantt_tree_icon\") !== -1 && (className.indexOf(\"gantt_close\") !== -1 || className.indexOf(\"gantt_open\") !== -1))\n\t\t\treturn true;\n\t\treturn false;\n\t};\n\n};","module.exports = function(gantt) {\n\n\tgantt.config.touch_drag = 500; //nearly immediate dnd\n\tgantt.config.touch = true;\n\tgantt.config.touch_feedback = true;\n\tgantt.config.touch_feedback_duration = 1;\n\tgantt._prevent_touch_scroll = false;\n\n\n\tgantt._touch_feedback = function () {\n\t\tif (gantt.config.touch_feedback) {\n\t\t\tif (navigator.vibrate)\n\t\t\t\tnavigator.vibrate(gantt.config.touch_feedback_duration);\n\t\t}\n\t};\n\n\tgantt.attachEvent(\"onGanttReady\", gantt.bind(function(){\n\t\tif (this.config.touch != \"force\")\n\t\t\tthis.config.touch = this.config.touch &&\n\t\t\t\t((navigator.userAgent.indexOf(\"Mobile\") != -1) ||\n\t\t\t\t\t(navigator.userAgent.indexOf(\"iPad\") != -1) ||\n\t\t\t\t\t(navigator.userAgent.indexOf(\"Android\") != -1) ||\n\t\t\t\t\t(navigator.userAgent.indexOf(\"Touch\") != -1));\n\n\t\tif (this.config.touch) {\n\n\t\t\tvar touchEventsSupported = true;\n\t\t\ttry {\n\t\t\t\tdocument.createEvent(\"TouchEvent\");\n\t\t\t} catch (e) {\n\t\t\t\ttouchEventsSupported = false;\n\t\t\t}\n\n\t\t\tif (touchEventsSupported) {\n\t\t\t\tthis._touch_events([\"touchmove\", \"touchstart\", \"touchend\"], function (ev) {\n\t\t\t\t\tif (ev.touches && ev.touches.length > 1) return null;\n\t\t\t\t\tif (ev.touches[0])\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttarget: ev.target,\n\t\t\t\t\t\t\tpageX: ev.touches[0].pageX,\n\t\t\t\t\t\t\tpageY: ev.touches[0].pageY,\n\t\t\t\t\t\t\tclientX: ev.touches[0].clientX,\n\t\t\t\t\t\t\tclientY: ev.touches[0].clientY\n\t\t\t\t\t\t};\n\t\t\t\t\telse\n\t\t\t\t\t\treturn ev;\n\t\t\t\t}, function () {\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t} else if (window.navigator.pointerEnabled) {\n\t\t\t\tthis._touch_events([\"pointermove\", \"pointerdown\", \"pointerup\"], function (ev) {\n\t\t\t\t\tif (ev.pointerType == \"mouse\") return null;\n\t\t\t\t\treturn ev;\n\t\t\t\t}, function (ev) {\n\t\t\t\t\treturn (!ev || (ev.pointerType == \"mouse\" ));\n\t\t\t\t});\n\t\t\t} else if (window.navigator.msPointerEnabled) {\n\t\t\t\tthis._touch_events([\"MSPointerMove\", \"MSPointerDown\", \"MSPointerUp\"], function (ev) {\n\t\t\t\t\tif (ev.pointerType == ev.MSPOINTER_TYPE_MOUSE) return null;\n\t\t\t\t\treturn ev;\n\t\t\t\t}, function (ev) {\n\t\t\t\t\treturn (!ev || ev.pointerType == ev.MSPOINTER_TYPE_MOUSE);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}, gantt));\n\n\n\tfunction getTaskDND(){\n\t\tvar _tasks_dnd;\n\t\tif(gantt.$ui.getView(\"timeline\")){\n\t\t\t_tasks_dnd = gantt.$ui.getView(\"timeline\")._tasks_dnd;\n\t\t}\n\t\treturn _tasks_dnd;\n\t}\n\n\tvar touchHandlers = [];\n\n//we can't use native scrolling, as we need to sync momentum between different parts\n//so we will block native scroll and use the custom one\n//in future we can add custom momentum\n\tgantt._touch_events = function (names, accessor, ignore) {\n\t\t//webkit on android need to be handled separately\n\t\tvar dblclicktime = 0;\n\t\tvar action_mode = false;\n\t\tvar scroll_mode = false;\n\t\tvar action_start = null;\n\t\tvar scroll_state;\n\t\tvar long_tap_timer = null;\n\t\tvar current_target = null;\n\n\n\n\t\tfor(var i = 0; i < touchHandlers.length; i++){\n\t\t\tgantt.eventRemove(touchHandlers[i][0], touchHandlers[i][1], touchHandlers[i][2]);\n\t\t}\n\t\ttouchHandlers = [];\n\n\t\t//touch move\n\t\ttouchHandlers.push([gantt.$container, names[0], function (e) {\n\t\t\tvar _tasks_dnd = getTaskDND();\n\n\t\t\t\tif (ignore(e)) return;\n\n\t\t\t\t//ignore common and scrolling moves\n\t\t\t\tif (!action_mode) return;\n\n\t\t\t\tif (long_tap_timer) clearTimeout(long_tap_timer);\n\n\t\t\t\tvar source = accessor(e);\n\t\t\t\tif (_tasks_dnd && (_tasks_dnd.drag.id || _tasks_dnd.drag.start_drag)) {\n\t\t\t\t\t_tasks_dnd.on_mouse_move(source);\n\t\t\t\t\tif (e.preventDefault)\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!gantt._prevent_touch_scroll) {\n\t\t\t\t\tif (source && action_start) {\n\t\t\t\t\t\tvar dx = action_start.pageX - source.pageX;\n\t\t\t\t\t\tvar dy = action_start.pageY - source.pageY;\n\t\t\t\t\t\tif (!scroll_mode && (Math.abs(dx) > 5 || Math.abs(dy) > 5)) {\n\t\t\t\t\t\t\tgantt._touch_scroll_active = scroll_mode = true;\n\t\t\t\t\t\t\tdblclicktime = 0;\n\t\t\t\t\t\t\tscroll_state = gantt.getScrollState();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (scroll_mode) {\n\t\t\t\t\t\t\tgantt.scrollTo(scroll_state.x + dx, scroll_state.y + dy);\n\t\t\t\t\t\t\tvar new_scroll_state = gantt.getScrollState();\n\n\t\t\t\t\t\t\tif ((scroll_state.x != new_scroll_state.x && dy > 2 * dx) ||\n\t\t\t\t\t\t\t\t(scroll_state.y != new_scroll_state.y && dx > 2 * dy )) {\n\t\t\t\t\t\t\t\treturn block_action(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn block_action(e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}]);\n\n\n\t\t//block touch context menu in IE10\n\t\ttouchHandlers.push([this.$container, \"contextmenu\", function (e) {\n\t\t\tif (action_mode)\n\t\t\t\treturn block_action(e);\n\t\t}]);\n\n\t\t//touch start\n\t\ttouchHandlers.push([this.$container, names[1], function (e) {\n\t\t\tif (ignore(e)) return;\n\t\t\tif (e.touches && e.touches.length > 1) {\n\t\t\t\taction_mode = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taction_start = accessor(e);\n\t\t\tif (!gantt._locate_css(action_start, \"gantt_hor_scroll\") && !gantt._locate_css(action_start, \"gantt_ver_scroll\")) {\n\t\t\t\taction_mode = true;\n\t\t\t}\n\t\t\tvar _tasks_dnd = getTaskDND();\n\n\t\t\t//long tap\n\t\t\tlong_tap_timer = setTimeout(function () {\n\t\t\t\tvar taskId = gantt.locate(action_start);\n\t\t\t\tif (_tasks_dnd && (taskId && !gantt._locate_css(action_start, \"gantt_link_control\") && !gantt._locate_css(action_start, \"gantt_grid_data\"))) {\n\t\t\t\t\t_tasks_dnd.on_mouse_down(action_start);\n\n\t\t\t\t\tif (_tasks_dnd.drag && _tasks_dnd.drag.start_drag) {\n\t\t\t\t\t\tcloneTaskRendered(taskId);\n\t\t\t\t\t\t_tasks_dnd._start_dnd(action_start);\n\t\t\t\t\t\tgantt._touch_drag = true;\n\n\t\t\t\t\t\tgantt.refreshTask(taskId);\n\n\t\t\t\t\t\tgantt._touch_feedback();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlong_tap_timer = null;\n\t\t\t}, gantt.config.touch_drag);\n\t\t}]);\n\n\t\t//touch end\n\t\ttouchHandlers.push([this.$container, names[2], function (e) {\n\t\t\tif (ignore(e)) return;\n\t\t\tif (long_tap_timer) clearTimeout(long_tap_timer);\n\t\t\tgantt._touch_drag = false;\n\t\t\taction_mode = false;\n\t\t\tvar source = accessor(e);\n\n\t\t\tvar _tasks_dnd = getTaskDND();\n\n\t\t\tif(_tasks_dnd)\n\t\t\t\t_tasks_dnd.on_mouse_up(source);\n\n\t\t\tif (current_target) {\n\t\t\t\tgantt.refreshTask(gantt.locate(current_target));\n\t\t\t\tif (current_target.parentNode) {\n\t\t\t\t\tcurrent_target.parentNode.removeChild(current_target);\n\t\t\t\t\tgantt._touch_feedback();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgantt._touch_scroll_active = action_mode = scroll_mode = false;\n\t\t\tcurrent_target = null;\n\n\t\t\t//dbl-tap handling\n\t\t\tif (action_start && dblclicktime) {\n\t\t\t\tvar now = new Date();\n\t\t\t\tif ((now - dblclicktime) < 500) {\n\n\t\t\t\t\tvar mouseEvents = gantt.$services.getService(\"mouseEvents\");\n\t\t\t\t\tmouseEvents.onDoubleClick(action_start);\n\t\t\t\t\tblock_action(e);\n\t\t\t\t} else\n\t\t\t\t\tdblclicktime = now;\n\t\t\t} else {\n\t\t\t\tdblclicktime = new Date();\n\t\t\t}\n\t\t}]);\n\n\t\tfor(var i = 0; i < touchHandlers.length; i++){\n\t\t\tgantt.event(touchHandlers[i][0], touchHandlers[i][1], touchHandlers[i][2]);\n\t\t}\n\n\t\t//common helper, prevents event\n\t\tfunction block_action(e) {\n\t\t\tif (e && e.preventDefault)\n\t\t\t\te.preventDefault();\n\t\t\t(e || event).cancelBubble = true;\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction cloneTaskRendered(taskId) {\n\t\t\tvar renders = gantt._getTaskLayers();\n\t\t\tvar task = gantt.getTask(taskId);\n\t\t\tif (task && gantt.isTaskVisible(taskId)) {\n\t\t\t\tfor (var i = 0; i < renders.length; i++) {\n\t\t\t\t\ttask = renders[i].rendered[taskId];\n\t\t\t\t\tif (task && task.getAttribute(gantt.config.task_attribute) && task.getAttribute(gantt.config.task_attribute) == taskId) {\n\t\t\t\t\t\tvar copy = task.cloneNode(true);\n\t\t\t\t\t\tcurrent_target = task;\n\t\t\t\t\t\trenders[i].rendered[taskId] = copy;\n\t\t\t\t\t\ttask.style.display = \"none\";\n\t\t\t\t\t\tcopy.className += \" gantt_drag_move \";\n\t\t\t\t\t\ttask.parentNode.appendChild(copy);\n\t\t\t\t\t\t//return copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n};","module.exports = function(gantt) {\ngantt.skins[\"contrast_white\"] = {\n\tconfig:{\n\t\tgrid_width:360,\n\t\trow_height: 35,\n\t\tscale_height: 35,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:100,\n\t_third_column_width:80\n};\n\n};","module.exports = function(gantt) {\ngantt.skins[\"contrast_black\"] = {\n\tconfig:{\n\t\tgrid_width:360,\n\t\trow_height: 35,\n\t\tscale_height: 35,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:100,\n\t_third_column_width:80\n};\n\n};","module.exports = function(gantt) {\n\tgantt.skins.material = {\n\t\tconfig: {\n\t\t\tgrid_width: 411,\n\t\t\trow_height: 34,\n\t\t\ttask_height_offset: 6,\n\t\t\tscale_height: 36,\n\t\t\tlink_line_width: 2,\n\t\t\tlink_arrow_size: 6,\n\t\t\tlightbox_additional_height: 80\n\t\t},\n\t\t_second_column_width: 110,\n\t\t_third_column_width: 75,\n\t\t_redefine_lightbox_buttons: {\n\t\t\t\"buttons_left\": [\"dhx_delete_btn\"],\n\t\t\t\"buttons_right\": [\"dhx_save_btn\", \"dhx_cancel_btn\"]\n\t\t}\n\t};\n\n\tgantt.attachEvent(\"onAfterTaskDrag\", function (id) {\n\t\tvar t = gantt.getTaskNode(id);\n\t\tif (t) {\n\t\t\tt.className += \" gantt_drag_animation\";\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar indx = t.className.indexOf(\" gantt_drag_animation\");\n\t\t\t\tif (indx > -1) {\n\t\t\t\t\tt.className = t.className.slice(0, indx);\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t}\n\t});\n\n};","module.exports = function(gantt) {\n\tgantt.skins.broadway = {\n\t\tconfig: {\n\t\t\tgrid_width: 360,\n\t\t\trow_height: 35,\n\t\t\tscale_height: 35,\n\t\t\tlink_line_width: 1,\n\t\t\tlink_arrow_size: 7,\n\t\t\tlightbox_additional_height: 86\n\t\t},\n\t\t_second_column_width: 90,\n\t\t_third_column_width: 80,\n\n\t\t_lightbox_template: \"<div class='gantt_cal_ltitle'><span class='gantt_mark'>&nbsp;</span><span class='gantt_time'></span><span class='gantt_title'></span><div class='gantt_cancel_btn'></div></div><div class='gantt_cal_larea'></div>\",\n\t\t_config_buttons_left: {},\n\t\t_config_buttons_right: {\n\t\t\t\"gantt_delete_btn\": \"icon_delete\",\n\t\t\t\"gantt_save_btn\": \"icon_save\"\n\t\t}\n\t};\n};","module.exports = function(gantt) {\ngantt.skins.terrace = {\n\tconfig:{\n\t\tgrid_width:360,\n\t\trow_height: 35,\n\t\tscale_height: 35,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:90,\n\t_third_column_width:70\t\t\n};\n\n};","module.exports = function(gantt) {\ngantt.skins.meadow = {\n\tconfig:{\n\t\tgrid_width:350,\n\t\trow_height: 27,\n\t\tscale_height: 30,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:72\n\t},\n\t_second_column_width:95,\n\t_third_column_width:80\n};\n\n};","module.exports = function(gantt) {\ngantt.skins.skyblue = {\n\tconfig:{\n\t\tgrid_width:350,\n\t\trow_height: 27,\n\t\tscale_height: 27,\n\t\tlink_line_width:1,\n\t\tlink_arrow_size:8,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:95,\n\t_third_column_width:80\n};\n\n};","function _configure(col, data, force) {\n\tfor (var key in data)\n\t\tif (typeof col[key] == \"undefined\" || force)\n\t\t\tcol[key] = data[key];\n}\n\nfunction _get_skin(force, gantt) {\n\tvar skin = gantt.skin;\n\tif (!skin || force) {\n\t\tvar links = document.getElementsByTagName(\"link\");\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tvar res = links[i].href.match(\"dhtmlxgantt_([a-z_]+).css\");\n\t\t\tif (res) {\n\t\t\t\tif (gantt.skins[res[1]] || !skin) {\n\t\t\t\t\tskin = res[1];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgantt.skin = skin || \"terrace\";\n\tvar skinset = gantt.skins[gantt.skin] || gantt.skins[\"terrace\"];\n\n\t//apply skin related settings\n\t_configure(gantt.config, skinset.config, force);\n\n\tvar config = gantt.getGridColumns();\n\tif (config[1] && !gantt.defined(config[1].width))\n\t\tconfig[1].width = skinset._second_column_width;\n\tif (config[2] && !gantt.defined(config[2].width))\n\t\tconfig[2].width = skinset._third_column_width;\n\t\n\tfor (var i=0; i<config.length; i++) {\n\t\tvar column = config[i];\n\t\tif (column.name == \"add\") {\n\t\t\tif(!column.width){\n\t\t\t\tcolumn.width = 44;\n\t\t\t}\n\t\t\tif (!(gantt.defined(column.min_width) && gantt.defined(column.max_width))) {\n\t\t\t\tcolumn.min_width = column.min_width || column.width;\n\t\t\t\tcolumn.max_width = column.max_width || column.width;\n\t\t\t}\n\t\t\tif (column.min_width)\n\t\t\t\tcolumn.min_width = +column.min_width;\n\t\t\tif (column.max_width)\n\t\t\t\tcolumn.max_width = +column.max_width;\n\t\t\tif (column.width) {\n\t\t\t\tcolumn.width = +column.width;\n\t\t\t\tcolumn.width = (column.min_width && column.min_width > column.width) ? column.min_width : column.width;\n\t\t\t\tcolumn.width = (column.max_width && column.max_width < column.width) ? column.max_width : column.width;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (skinset.config.task_height)\n\t\tgantt.config.task_height = skinset.config.task_height || \"full\"; \n\n\tif (skinset._lightbox_template)\n\t\tgantt._lightbox_template = skinset._lightbox_template;\n\n\tif (skinset._redefine_lightbox_buttons) {\n\t\tgantt.config.buttons_right = skinset._redefine_lightbox_buttons[\"buttons_right\"];\n\t\tgantt.config.buttons_left = skinset._redefine_lightbox_buttons[\"buttons_left\"];\n\t}\n\n\n\tgantt.resetLightbox();\n}\n\nmodule.exports = function(gantt) {\n\tif(!gantt.resetSkin){\n\t\tgantt.resetSkin = function () {\n\t\t\tthis.skin = \"\";\n\t\t\t_get_skin(true, this);\n\t\t};\n\t\tgantt.skins = {};\n\n\t\tgantt.attachEvent(\"onGanttLayoutReady\", function(){\n\t\t\t_get_skin(false, this);\n\t\t});\n\t}\n};","/*\n reuse results of functions that can be recalculated during rendering\n greatly increases the rendering speed when critical path enabled\n Sample - 94_dev/critical_path.html\n\n */\nmodule.exports = function(gantt){\n\ngantt._cached_functions = {\n\tcache: {},\n\tmode: false,\n\tcritical_path_mode: false,\n\twrap_methods : function(methods, object){\n\t\tif(object._prefetch_originals){\n\t\t\tfor(var i in object._prefetch_originals){\n\t\t\t\tobject[i] = object._prefetch_originals[i];\n\t\t\t}\n\t\t}\n\t\tobject._prefetch_originals = {};\n\t\tfor(var i = 0; i < methods.length; i++)\n\t\t\tthis.prefetch(methods[i], object);\n\n\t},\n\tprefetch : function(methodname, host){\n\t\tvar original = host[methodname];\n\t\tif(original){\n\t\t\tvar optimizer = this;\n\n\t\t\thost._prefetch_originals[methodname] = original;\n\t\t\thost[methodname] = function get_prefetched_value(){\n\n\t\t\t\tvar argumentsArray = new Array(arguments.length);\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\t\targumentsArray[i] = arguments[i];\n\t\t\t\t}\n\n\t\t\t\tif(optimizer.active){\n\t\t\t\t\tvar args = optimizer.get_arguments_hash(Array.prototype.slice.call(argumentsArray));\n\t\t\t\t\tif(!optimizer.cache[methodname]){\n\t\t\t\t\t\toptimizer.cache[methodname] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cached_values = optimizer.cache[methodname];\n\n\t\t\t\t\tif(optimizer.has_cached_value(cached_values, args)){\n\t\t\t\t\t\treturn optimizer.get_cached_value(cached_values, args);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar value = original.apply(this, argumentsArray);\n\t\t\t\t\t\toptimizer.cache_value(cached_values, args, value);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn original.apply(this, argumentsArray);\n\t\t\t};\n\t\t}\n\t\treturn original;\n\t},\n\tcache_value: function(cache, arguments_hash, value){\n\t\tif(this.is_date(value))\n\t\t\tvalue = new Date(value);\n\t\tcache[arguments_hash] = value;\n\t},\n\thas_cached_value: function(cache, arguments_hash){\n\t\treturn cache.hasOwnProperty(arguments_hash);\n\t},\n\tget_cached_value: function(cache, arguments_hash){\n\t\tvar data = cache[arguments_hash];\n\n\t\t//for cached dates - return copy\n\t\tif(this.is_date(data)){\n\t\t\tdata = new Date(data);\n\t\t}\n\t\treturn data;\n\t},\n\tis_date: function(value){\n\t\treturn (value && value.getUTCDate);\n\t},\n\tget_arguments_hash:function(args){\n\t\tvar values = [];\n\t\tfor(var i = 0; i < args.length; i++){\n\t\t\tvalues.push(this.stringify_argument(args[i]));\n\t\t}\n\t\treturn \"(\" + values.join(\";\") + \")\";\n\t},\n\tstringify_argument: function(value){\n\t\t//expecting task or link, or any other data entries, dates and primitive values\n\t\tvar ret = \"\";\n\t\tif(value.id){\n\t\t\tret = value.id;\n\t\t}else if(this.is_date(value)){\n\t\t\tret = value.valueOf();\n\t\t}else{\n\t\t\tret = value;\n\t\t}\n\t\treturn ret + \"\";\n\t},\n\tactivate: function(){\n\t\tthis.clear();\n\t\tthis.active = true;\n\t},\n\tdeactivate: function(){\n\t\tthis.clear();\n\t\tthis.active = false;\n\t},\n\tclear: function(){\n\t\tthis.cache = {};\n\t},\n\n\tsetup: function(gantt){\n\t\tvar override_gantt = [];\n\n\t\tvar gantt_methods  = [\n\t\t\t'_isProjectEnd',\n\t\t\t'_getProjectEnd',\n\t\t\t'_getSlack'\n\t\t];\n\n\n\n\t\tif(this.mode == 'auto'){\n\t\t\tif(gantt.config.highlight_critical_path){\n\t\t\t\toverride_gantt = gantt_methods;\n\t\t\t}\n\t\t}else if(this.mode === true){\n\t\t\toverride_gantt = gantt_methods;\n\t\t}\n\n\t\tthis.wrap_methods(override_gantt, gantt);\n\n\t},\n\tupdate_if_changed: function(gantt){\n\t\tvar changed = (this.critical_path_mode != gantt.config.highlight_critical_path ||\n\t\t\t\t\t\tthis.mode !== gantt.config.optimize_render);\n\t\tif(changed){\n\t\t\tthis.critical_path_mode = gantt.config.highlight_critical_path;\n\t\t\tthis.mode = gantt.config.optimize_render;\n\t\t\tthis.setup(gantt);\n\t\t}\n\t}\n};\n\nfunction activate(){\n\tgantt._cached_functions.update_if_changed(gantt);\n\tif(!gantt._cached_functions.active){\n\t\tgantt._cached_functions.activate();\n\t}\n\treturn true;\n}\ngantt.attachEvent(\"onBeforeGanttRender\", activate);\ngantt.attachEvent(\"onBeforeDataRender\", activate);\ngantt.attachEvent(\"onBeforeSmartRender\",  function(){\n\tactivate();\n});\ngantt.attachEvent(\"onBeforeParse\", activate);\ngantt.attachEvent(\"onDataRender\", function(){\n\tgantt._cached_functions.deactivate();\n});\nvar deactivTimeout = null;\ngantt.attachEvent(\"onSmartRender\", function(){\n\tif(deactivTimeout)\n\t\tclearTimeout(deactivTimeout);\n\tdeactivTimeout = setTimeout(function(){\n\t\tgantt._cached_functions.deactivate();\n\t}, 1000);\n});\n\ngantt.attachEvent(\"onBeforeGanttReady\", function(){\n\tgantt._cached_functions.update_if_changed(gantt);\n\treturn true;\n});\n\n};","module.exports = function(gantt) {\n\n\tgantt.getTaskType = function (type) {\n\t\treturn \"task\";\n\t};\n};","module.exports = function(gantt) {\n\n\tgantt._extend_to_optional = function (lightbox_block) {\n\n\t\tvar duration = lightbox_block;\n\t\tvar optional_time = {\n\t\t\trender: duration.render,\n\t\t\tfocus: duration.focus,\n\t\t\tset_value: function (node, value, task, section) {\n\t\t\t\tvar mapping = gantt._resolve_default_mapping(section);\n\t\t\t\tif (!task[mapping.start_date] || (mapping.start_date == \"start_date\" && this._isAllowedUnscheduledTask(task))) {\n\t\t\t\t\toptional_time.disable(node, section);\n\t\t\t\t\tvar val = {};\n\n\t\t\t\t\tfor (var i in mapping) {\n\t\t\t\t\t\t//take default values from the time control from task start/end dates\n\t\t\t\t\t\tval[mapping[i]] = task[i];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn duration.set_value.call(gantt, node, value, val, section);//set default value\n\t\t\t\t} else {\n\t\t\t\t\toptional_time.enable(node, section);\n\t\t\t\t\treturn duration.set_value.call(gantt, node, value, task, section);\n\t\t\t\t}\n\t\t\t},\n\t\t\tget_value: function (node, task, section) {\n\t\t\t\tif (section.disabled) {\n\t\t\t\t\treturn {start_date: null};\n\t\t\t\t} else {\n\t\t\t\t\treturn duration.get_value.call(gantt, node, task, section);\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate_block: function (node, section) {\n\t\t\t\tgantt.callEvent(\"onSectionToggle\", [gantt._lightbox_id, section]);\n\t\t\t\tnode.style.display = section.disabled ? \"none\" : \"block\";\n\n\t\t\t\tif (section.button) {\n\t\t\t\t\tvar button = node.previousSibling.querySelector(\".gantt_custom_button_label\"),\n\t\t\t\t\t\tlabels = gantt.locale.labels;\n\n\t\t\t\t\tvar button_text = section.disabled ? labels[section.name + \"_enable_button\"] : labels[section.name + \"_disable_button\"];\n\n\t\t\t\t\tbutton.innerHTML = button_text;\n\t\t\t\t}\n\t\t\t\tgantt.resizeLightbox();\n\t\t\t},\n\t\t\tdisable: function (node, section) {\n\t\t\t\tsection.disabled = true;\n\t\t\t\toptional_time.update_block(node, section);\n\n\t\t\t},\n\t\t\tenable: function (node, section) {\n\t\t\t\tsection.disabled = false;\n\t\t\t\toptional_time.update_block(node, section);\n\t\t\t},\n\t\t\tbutton_click: function (index, el, section, container) {\n\t\t\t\tif (gantt.callEvent(\"onSectionButton\", [gantt._lightbox_id, section]) === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar config = gantt._get_typed_lightbox_config()[index];\n\t\t\t\tif (config.disabled) {\n\t\t\t\t\toptional_time.enable(container, config);\n\t\t\t\t} else {\n\t\t\t\t\toptional_time.disable(container, config);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn optional_time;\n\t};\n\n\tgantt.form_blocks.duration_optional = gantt._extend_to_optional(gantt.form_blocks.duration);\n\tgantt.form_blocks.time_optional = gantt._extend_to_optional(gantt.form_blocks.time);\n\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./select_control\")(gantt);\n\n\tfunction ParentControl() {\n\t\tvar self = _super.apply(this, arguments) || this; \n\n\t\treturn self; \n\t}\n\n\t__extends(ParentControl, _super);\n\n\n\tParentControl.prototype.render = function(sns) {\n\t\treturn _display(sns, false);\n\t};\n\n\tParentControl.prototype.set_value = function(node, value, ev, config) {\n\t\tvar tmpDom = document.createElement(\"div\");\n\t\ttmpDom.innerHTML = _display(config, ev.id);\n\t\tvar newOptions = tmpDom.removeChild(tmpDom.firstChild);\n\t\tnode.onselect = null;\n\t\tnode.parentNode.replaceChild(newOptions, node);\n\n\t\treturn gantt.form_blocks.select.set_value.apply(gantt, [newOptions, value, ev, config]);\n\t};\n\n\tfunction _display(config, item_id) {\n\t\tvar tasks = [],\n\t\t\toptions = [];\n\t\tif (item_id) {\n\t\t\ttasks = gantt.getTaskByTime();\n\t\t\tif (config.allow_root) {\n\t\t\t\ttasks.unshift({id: gantt.config.root_id, text: config.root_label || \"\"});\n\t\t\t}\n\t\t\ttasks = _filter(tasks, config, item_id);\n\t\t\tif (config.sort) {\n\t\t\t\ttasks.sort(config.sort);\n\t\t\t}\n\t\t}\n\t\tvar text = config.template || gantt.templates.task_text;\n\t\tfor (var i = 0; i < tasks.length; i++) {\n\t\t\tvar label = text.apply(gantt, [tasks[i].start_date, tasks[i].end_date, tasks[i]]);\n\t\t\tif (label === undefined) {\n\t\t\t\tlabel = \"\";\n\t\t\t}\n\t\t\toptions.push({\n\t\t\t\tkey: tasks[i].id,\n\t\t\t\tlabel: label\n\t\t\t});\n\t\t}\n\t\tconfig.options = options;\n\t\tconfig.map_to = config.map_to || \"parent\";\n\t\treturn gantt.form_blocks.select.render.apply(this, arguments);\n\t}\n\n\tfunction _filter(options, config, item_id) {\n\t\tvar filter = config.filter || function() {\n\t\t\treturn true;\n\t\t};\n\n\t\toptions = options.slice(0);\n\n\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\tvar task = options[i];\n\t\t\tif (task.id == item_id || gantt.isChildOf(task.id, item_id) || filter(task.id, task) === false) {\n\t\t\t\toptions.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\treturn options;\n\t}\n\treturn ParentControl;\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction DurationControl() {\n\t\tvar self = _super.apply(this, arguments) || this; \n\n\t\treturn self; \n\t}\n\n\t__extends(DurationControl, _super);\n\n\tDurationControl.prototype.render = function(sns) {\n\t\tvar time = \"<div class='gantt_time_selects'>\" + gantt.form_blocks.getTimePicker.call(this, sns) + \"</div>\";\n\t\tvar label = gantt.locale.labels[gantt.config.duration_unit + \"s\"];\n\t\tvar singleDate = sns.single_date ? \" style='display:none'\" : \"\";\n\t\tvar readonly = sns.readonly ? \" disabled='disabled'\" : \"\";\n\t\tvar ariaAttr = gantt._waiAria.lightboxDurationInputAttrString(sns);\n\t\tvar duration = \"<div class='gantt_duration' \" + singleDate + \">\" +\n\t\t\t\"<input type='button' class='gantt_duration_dec' value='−'\" + readonly + \">\" +\n\t\t\t\"<input type='text' value='5' class='gantt_duration_value'\" + readonly + \" \" + ariaAttr + \">\" +\n\t\t\t\"<input type='button' class='gantt_duration_inc' value='+'\" + readonly + \"> \" + label + \" <span></span>\" +\n\t\t\t\"</div>\";\n\t\tvar html = \"<div style='height:\" + (sns.height || 30) + \"px;padding-top:0px;font-size:inherit;' class='gantt_section_time'>\" + time + \" \" + duration + \"</div>\";\n\t\treturn html;\n\t};\n\n\tDurationControl.prototype.set_value = function(node, value, ev, config) {\n\t\tvar cfg = config;\n\t\tvar s = node.getElementsByTagName(\"select\");\n\t\tvar inps = node.getElementsByTagName(\"input\");\n\t\tvar duration = inps[1];\n\t\tvar btns = [inps[0], inps[2]];\n\t\tvar endspan = node.getElementsByTagName(\"span\")[0];\n\t\tvar map = config._time_format_order;\n\t\tvar mapping;\n\t\tvar start_date;\n\t\tvar end_date;\n\t\tvar duration_val;\n\n\t\tfunction _calc_date() {\n\t\t\tvar start_date = _getStartDate.call(gantt, node, config);\n\t\t\tvar duration = _getDuration.call(gantt, node, config);\n\t\t\tvar end_date = gantt.calculateEndDate({start_date: start_date, duration: duration, task: ev});\n\n\t\t\tendspan.innerHTML = gantt.templates.task_date(end_date);\n\t\t}\n\n\t\tfunction _change_duration(step) {\n\t\t\tvar value = duration.value;\n\n\t\t\tvalue = parseInt(value, 10);\n\t\t\tif (window.isNaN(value))\n\t\t\t\tvalue = 0;\n\t\t\tvalue += step;\n\t\t\tif (value < 1) value = 1;\n\t\t\tduration.value = value;\n\t\t\t_calc_date();\n\t\t}\n\n\t\tbtns[0].onclick = gantt.bind(function() {\n\t\t\t_change_duration(-1 * gantt.config.duration_step);\n\t\t}, this);\n\t\tbtns[1].onclick = gantt.bind(function() {\n\t\t\t_change_duration(1 * gantt.config.duration_step);\n\t\t}, this);\n\t\ts[0].onchange = _calc_date;\n\t\ts[1].onchange = _calc_date;\n\t\ts[2].onchange = _calc_date;\n\t\tif (s[3]) s[3].onchange = _calc_date;\n\n\t\tduration.onkeydown = gantt.bind(function(e) {\n\t\t\tvar code; \n\n\t\t\te = e || window.event;\n\t\t\tcode = (e.charCode || e.keyCode || e.which);\n\t\t\t\n\t\t\tif (code == gantt.constants.KEY_CODES.DOWN) {\n\t\t\t\t_change_duration(-1 * gantt.config.duration_step);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (code == gantt.constants.KEY_CODES.UP) {\n\t\t\t\t_change_duration(1 * gantt.config.duration_step);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\twindow.setTimeout(_calc_date, 1);\n\t\t}, this);\n\n\t\tduration.onchange = gantt.bind(_calc_date, this);\n\n\t\tmapping = gantt._resolve_default_mapping(config);\n\t\tif (typeof(mapping) === \"string\") mapping = {start_date: mapping};\n\n\t\tstart_date = ev[mapping.start_date] || new Date();\n\t\tend_date = ev[mapping.end_date] || gantt.calculateEndDate({\n\t\t\tstart_date: start_date,\n\t\t\tduration: 1,\n\t\t\ttask: ev\n\t\t});\n\t\tduration_val = Math.round(ev[mapping.duration]) || gantt.calculateDuration({\n\t\t\tstart_date: start_date,\n\t\t\tend_date: end_date,\n\t\t\ttask: ev\n\t\t});\n\n\t\tgantt.form_blocks._fill_lightbox_select(s, 0, start_date, map, cfg);\n\t\tduration.value = duration_val;\n\t\t_calc_date();\n\t};\n\n\tDurationControl.prototype.get_value = function(node, ev, config) {\n\t\tvar startDate = _getStartDate(node, config);\n\t\tvar duration = _getDuration(node, config);\n\t\tvar endDate = gantt.calculateEndDate({start_date: startDate, duration: duration, task: ev});\n\n\t\tif (typeof gantt._resolve_default_mapping(config) == \"string\") {\n\t\t\treturn startDate;\n\t\t}\n\n\t\treturn {\n\t\t\tstart_date: startDate,\n\t\t\tend_date: endDate,\n\t\t\tduration: duration\n\t\t};\n\t};\n\n\tDurationControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.getElementsByTagName(\"select\")[0]);\n\t};\n\n\n\tfunction _getStartDate(node, config) {\n\t\tvar s = node.getElementsByTagName(\"select\");\n\t\tvar map = config._time_format_order;\n\t\tvar hours = 0;\n\t\tvar minutes = 0;\n\n\t\tif (gantt.defined(map[3])) {\n\t\t\tvar input = s[map[3]];\n\t\t\tvar time = parseInt(input.value, 10);\n\t\t\tif (isNaN(time) && input.hasAttribute(\"data-value\")) {\n\t\t\t\ttime = parseInt(input.getAttribute(\"data-value\"), 10);\n\t\t\t}\n\n\t\t\thours = Math.floor(time / 60);\n\t\t\tminutes = time % 60;\n\t\t}\n\t\treturn new Date(s[map[2]].value, s[map[1]].value, s[map[0]].value, hours, minutes);\n\t}\n\n\tfunction _getDuration(node) {\n\t\tvar duration = node.getElementsByTagName(\"input\")[1];\n\n\t\tduration = parseInt(duration.value, 10);\n\t\tif (!duration || window.isNaN(duration)) duration = 1;\n\t\tif (duration < 0) duration *= -1;\n\t\treturn duration;\n\t}\n\n\n\treturn DurationControl; \n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction RadioControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(RadioControl, _super);\n\n\tRadioControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"23\") + \"px\";\n\t\tvar html = \"<div class='gantt_cal_ltext' style='height:\" + height + \";'>\";\n\n\t\tif (sns.options && sns.options.length) {\n\t\t\tfor (var i = 0; i < sns.options.length; i++) {\n\t\t\t\thtml += \"<label><input type='radio' value='\" + sns.options[i].key + \"' name='\" + sns.name + \"'>\" + sns.options[i].label + \"</label>\";\n\t\t\t}\n\t\t}\n\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tRadioControl.prototype.set_value = function(node, value, ev, sns) {\n\t\tvar radio;\n\n\t\tif (!sns.options || !sns.options.length) return;\n\n\t\tradio = node.querySelector(\"input[type=radio][value='\" + value + \"']\") ||\n\t\t\t\tnode.querySelector(\"input[type=radio][value='\" + sns.default_value + \"']\");\n\n\t\tif (!radio) return;\n\n\t\tif (!node._dhx_onchange && sns.onchange) {\n\t\t\tnode.onchange = sns.onchange;\n\t\t\tnode._dhx_onchange = true;\n\t\t}\n\n\t\tradio.checked = true;\n\t};\n\n\tRadioControl.prototype.get_value = function(node, ev) {\n\t\tvar result = node.querySelector(\"input[type=radio]:checked\");\n\n\t\treturn result ? result.value : \"\";\n\t};\n\n\tRadioControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.querySelector(\"input[type=radio]\"));\n\t};\n\n\treturn RadioControl;\n};","var helpers = require(\"../../../utils/helpers\");\nvar __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction CheckboxControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(CheckboxControl, _super);\n\n\tCheckboxControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"23\") + \"px\";\n\t\tvar html = \"<div class='gantt_cal_ltext' style='height:\" + height + \";'>\";\n\n\t\tif (sns.options && sns.options.length) {\n\t\t\tfor (var i = 0; i < sns.options.length; i++) {\n\t\t\t\thtml += \"<label><input type='checkbox' value='\" + sns.options[i].key + \"' name='\" + sns.name + \"'>\" + sns.options[i].label + \"</label>\";\n\t\t\t}\n\t\t}\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tCheckboxControl.prototype.set_value = function(node, value, ev, sns) {\n\t\tvar checkboxes = Array.prototype.slice.call(node.querySelectorAll(\"input[type=checkbox]\"));\n\n\t\tif (!node._dhx_onchange && sns.onchange) {\n\t\t\tnode.onchange = sns.onchange;\n\t\t\tnode._dhx_onchange = true;\n\t\t}\n\n\t\thelpers.forEach(checkboxes, function(entry) {\n\t\t\tentry.checked = value ? value.indexOf(entry.value) >= 0 : false;\n\t\t});\n\t};\n\n\tCheckboxControl.prototype.get_value = function(node) {\n\t\treturn helpers.arrayMap(Array.prototype.slice.call(node.querySelectorAll(\"input[type=checkbox]:checked\")), function(entry) {\n\t\t\treturn entry.value;\n\t\t});\n\t};\n\n\tCheckboxControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.querySelector(\"input[type=checkbox]\"));\n\t};\n\n\treturn CheckboxControl;\n};","var helpers = require(\"./helpers\");\n\nvar htmlHelpers = {\n\tgetHtmlSelect: function(options, attributes, value) {\n\t\tvar innerHTML = \"\";\n\t\tvar _this = this;\n\n\t\toptions = options || [];\n\t\t\n\t\thelpers.forEach(options, function(entry) {\n\t\t\tvar _attributes = [{ key: \"value\", value: entry.key }];\n\n\t\t\tif (value == entry.key) {\n\t\t\t\t_attributes[_attributes.length] = { key: \"selected\", value: \"selected\" };\n\t\t\t}\n\t\t\tif (entry.attributes) {\n\t\t\t\t_attributes = _attributes.concat(entry.attributes);\n\t\t\t}\n\t\t\tinnerHTML += _this.getHtmlOption({ innerHTML: entry.label }, _attributes);\n\t\t});\n\n\t\treturn _getHtmlContainer(\"select\", { innerHTML: innerHTML }, attributes);\n\t},\n\tgetHtmlOption: function(options, attributes) { return _getHtmlContainer(\"option\", options, attributes); },\n\tgetHtmlButton: function(options, attributes) { return _getHtmlContainer(\"button\", options, attributes); },\n\tgetHtmlDiv: function(options, attributes) { return _getHtmlContainer(\"div\", options, attributes); },\n\tgetHtmlLabel: function(options, attributes) { return _getHtmlContainer(\"label\", options, attributes); },\n\tgetHtmlInput: function(attributes) {\n\t\treturn \"<input\" + _getHtmlAttributes(attributes || []) + \">\";\n\t}\n};\n\nfunction _getHtmlContainer(tag, options, attributes) {\n\tvar html;\n\n\toptions = options || [];\n\t\n\thtml = \"<\" + tag + _getHtmlAttributes(attributes || []) + \">\" + (options.innerHTML || \"\") + \"</\" + tag +\">\";\n\treturn html;\n\n}\n\nfunction _getHtmlAttributes(attributes) {\n\tvar html = \"\";\n\n\thelpers.forEach(attributes, function(entry) {\n\t\thtml += \" \" + entry.key + \"='\" + entry.value + \"'\";\n\t});\n\treturn html;\n}\n\nmodule.exports = htmlHelpers;","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction TimeControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(TimeControl, _super);\n\n\n\tTimeControl.prototype.render = function(sns) {\n\t\tvar time = gantt.form_blocks.getTimePicker.call(this, sns);\n\t\tvar html = \"<div style='height:\" + (sns.height || 30) + \"px;padding-top:0px;font-size:inherit;text-align:center;' class='gantt_section_time'>\";\n\t\thtml += time;\n\n\t\tif (sns.single_date) {\n\t\t\ttime = gantt.form_blocks.getTimePicker.call(this, sns, true);\n\t\t\thtml += \"<span></span>\";\n\t\t} else {\n\t\t\thtml += \"<span style='font-weight:normal; font-size:10pt;'> &nbsp;&ndash;&nbsp; </span>\";\n\t\t}\n\n\t\thtml += time;\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tTimeControl.prototype.set_value = function(node, value, ev, config) {\n\t\tvar cfg = config;\n\t\tvar s = node.getElementsByTagName(\"select\");\n\t\tvar map = config._time_format_order;\n\n\t\tif (cfg.auto_end_date) {\n\t\t\tvar _update_lightbox_select = function() {\n\t\t\t\tstart_date = new Date(s[map[2]].value, s[map[1]].value, s[map[0]].value, 0, 0);\n\t\t\t\tend_date = gantt.calculateEndDate({start_date: start_date, duration: 1, task: ev});\n\t\t\t\tgantt.form_blocks._fill_lightbox_select(s, map.size, end_date, map, cfg);\n\t\t\t};\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\ts[i].onchange = _update_lightbox_select;\n\t\t\t}\n\t\t}\n\n\t\tvar mapping = gantt._resolve_default_mapping(config);\n\n\t\tif (typeof(mapping) === \"string\") mapping = {start_date: mapping};\n\n\t\tvar start_date = ev[mapping.start_date] || new Date();\n\t\tvar end_date = ev[mapping.end_date] || gantt.calculateEndDate({\n\t\t\tstart_date: start_date,\n\t\t\tduration: 1,\n\t\t\ttask: ev\n\t\t});\n\n\t\tgantt.form_blocks._fill_lightbox_select(s, 0, start_date, map, cfg);\n\t\tgantt.form_blocks._fill_lightbox_select(s, map.size, end_date, map, cfg);\n\t};\n\n\tTimeControl.prototype.get_value = function(node, ev, config) {\n\t\tvar selects = node.getElementsByTagName(\"select\");\n\t\tvar map = config._time_format_order;\n\t\tvar needSetTime = gantt.defined(map[3]);\n\t\tvar startDate;\n\n\t\tfunction _getEndDate(selects, map, needSetTime, startDate) {\n\t\t\tvar endDate = _getDate(selects, map, needSetTime, map.size);\n\n\t\t\tif (endDate <= startDate) {\n\t\t\t\treturn gantt.date.add(startDate, gantt._get_timepicker_step(), \"minute\");\n\t\t\t}\n\t\t\treturn endDate;\n\t\t}\n\n\t\tfunction _getDate(selects, map, needSetTime, mapOffset) {\n\t\t\tvar time;\n\t\t\tvar hours = 0;\n\t\t\tvar minutes = 0;\n\n\t\t\tmapOffset = mapOffset || 0;\n\n\t\t\tif (needSetTime) {\n\t\t\t\ttime = parseInt(selects[map[3] + mapOffset].value, 10);\n\t\t\t\thours = Math.floor(time / 60);\n\t\t\t\tminutes = time % 60;\n\t\t\t}\n\t\t\treturn new Date(selects[map[2] + mapOffset].value, selects[map[1] + mapOffset].value, selects[map[0] + mapOffset].value, hours, minutes);\n\t\t}\n\n\t\tstartDate = _getDate(selects, map, needSetTime);\n\n\t\tif (typeof gantt._resolve_default_mapping(config) === \"string\") {\n\t\t\treturn startDate;\n\t\t}\n\n\t\treturn {\n\t\t\tstart_date: startDate,\n\t\t\tend_date: _getEndDate(selects, map, needSetTime, startDate)\n\t\t};\n\t};\n\n\tTimeControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.getElementsByTagName(\"select\")[0]);\n\t};\n\n\treturn TimeControl;\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction TextareaControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(TextareaControl, _super);\n\n\tTextareaControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"130\") + \"px\";\n\t\treturn \"<div class='gantt_cal_ltext' style='height:\" + height + \";'><textarea></textarea></div>\";\n\t};\n\n\tTextareaControl.prototype.set_value = function(node, value) {\n\t\tgantt.form_blocks.textarea._get_input(node).value = value || \"\";\n\t};\n\n\tTextareaControl.prototype.get_value = function(node) {\n\t\treturn gantt.form_blocks.textarea._get_input(node).value;\n\t};\n\n\tTextareaControl.prototype.focus = function(node) {\n\t\tvar a = gantt.form_blocks.textarea._get_input(node);\n\t\tgantt._focus(a, true);\n\t};\n\n\tTextareaControl.prototype._get_input = function(node) {\n\t\treturn node.querySelector(\"textarea\");\n\t};\n\n\treturn TextareaControl;\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction TemplateControl() {\n\t\tvar self = _super.apply(this, arguments) || this; \n\t\treturn self; \n\t}\n\n\t__extends(TemplateControl, _super);\n\n\n\tTemplateControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"30\") + \"px\";\n\t\treturn \"<div class='gantt_cal_ltext gantt_cal_template' style='height:\" + height + \";'></div>\";\n\t};\n\n\tTemplateControl.prototype.set_value = function(node, value) {\n\t\tnode.innerHTML = value || \"\";\n\t};\n\n\tTemplateControl.prototype.get_value = function(node) {\n\t\treturn node.innerHTML || \"\";\n\t};\n\n\tTemplateControl.prototype.focus = function() {};\n\n\treturn TemplateControl;\n};","module.exports = function(gantt) {\n\tvar domHelpers = require(\"../../utils/dom_helpers\");\n\tvar helpers = require(\"../../utils/helpers\");\n\n\tvar TemplateControl = require(\"./controls/template_control\")(gantt);\n\tvar TextareaControl = require(\"./controls/textarea_control\")(gantt);\n\tvar TimeControl = require(\"./controls/time_control\")(gantt);\n\tvar SelectControl = require(\"./controls/select_control\")(gantt);\n\tvar CheckboxControl = require(\"./controls/checkbox_control\")(gantt);\n\tvar RadioControl = require(\"./controls/radio_control\")(gantt);\n\tvar DurationControl = require(\"./controls/duration_control\")(gantt);\n\tvar ParentControl = require(\"./controls/parent_control\")(gantt);\n\tvar ResourcesControl = require(\"./controls/resources_control\")(gantt);\n\n\n\tgantt._lightbox_methods = {};\n\tgantt._lightbox_template = \"<div class='gantt_cal_ltitle'><span class='gantt_mark'>&nbsp;</span><span class='gantt_time'></span><span class='gantt_title'></span></div><div class='gantt_cal_larea'></div>\";\n\n\n\t//TODO: gantt._lightbox_id is changed from data.js and accessed from autoscheduling, check if it can be removed from gantt object\n\tvar state = gantt.$services.getService(\"state\");\n\tstate.registerProvider(\"lightbox\", function(){\n\t\treturn {\n\t\t\tlightbox: gantt._lightbox_id\n\t\t};\n\t});\n\n\tgantt.showLightbox = function(id) {\n\t\tif (!id || gantt.isReadonly(this.getTask(id))) return;\n\t\tif (!this.callEvent(\"onBeforeLightbox\", [id])) return;\n\n\t\tvar task = this.getTask(id);\n\n\t\tvar box = this.getLightbox(this.getTaskType(task.type));\n\t\tthis._center_lightbox(box);\n\t\tthis.showCover();\n\t\tthis._fill_lightbox(id, box);\n\n\t\tthis._waiAria.lightboxVisibleAttr(box);\n\n\t\tthis.callEvent(\"onLightbox\", [id]);\n\t};\n\n\tfunction _is_chart_visible(gantt) {\n\t\tvar timeline = gantt.$ui.getView(\"timeline\");\n\t\tif(timeline && timeline.isVisible()){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgantt._get_timepicker_step = function() {\n\t\tif (this.config.round_dnd_dates) {\n\t\t\tvar step;\n\t\t\tif (_is_chart_visible(this)) {\n\t\t\t\tvar scale = gantt.getScale();\n\t\t\t\tstep = (helpers.getSecondsInUnit(scale.unit) * scale.step) / 60;//timepicker step is measured in minutes\n\t\t\t}\n\n\t\t\tif(!step || step >= 60 * 24){\n\t\t\t\tstep = this.config.time_step;\n\t\t\t}\n\t\t\treturn step;\n\t\t}\n\t\treturn this.config.time_step;\n\t};\n\tgantt.getLabel = function(property, key) {\n\t\tvar sections = this._get_typed_lightbox_config();\n\t\tfor (var i = 0; i < sections.length; i++) {\n\t\t\tif (sections[i].map_to == property) {\n\t\t\t\tvar options = sections[i].options;\n\t\t\t\tfor (var j = 0; j < options.length; j++) {\n\t\t\t\t\tif (options[j].key == key) {\n\t\t\t\t\t\treturn options[j].label;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t};\n\n\tgantt.updateCollection = function(list_name, collection) {\n\t\tcollection = collection.slice(0);\n\t\tvar list = gantt.serverList(list_name);\n\t\tif (!list) return false;\n\t\tlist.splice(0, list.length);\n\t\tlist.push.apply(list, collection || []);\n\t\tgantt.resetLightbox();\n\t};\n\tgantt.getLightboxType = function() {\n\t\treturn this.getTaskType(this._lightbox_type);\n\t};\n\tgantt.getLightbox = function(type) {\n\t\tvar lightboxDiv;\n\t\tvar fullWidth;\n\t\tvar html;\n\t\tvar sns;\n\t\tvar ds;\n\t\tvar classNames = \"\";\n\n\t\tif (type === undefined)\n\t\t\ttype = this.getLightboxType();\n\n\t\tif (!this._lightbox || this.getLightboxType() != this.getTaskType(type)) {\n\t\t\tthis._lightbox_type = this.getTaskType(type);\n\t\t\tlightboxDiv = document.createElement(\"div\");\n\t\t\tclassNames = \"gantt_cal_light\";\n\t\t\tfullWidth = this._is_lightbox_timepicker();\n\n\t\t\tif (gantt.config.wide_form || fullWidth)\n\t\t\t\tclassNames += \" gantt_cal_light_wide\";\n\n\t\t\tif (fullWidth) {\n\t\t\t\tgantt.config.wide_form = true;\n\t\t\t\tclassNames += \" gantt_cal_light_full\";\n\t\t\t}\n\n\t\t\tlightboxDiv.className = classNames;\n\n\t\t\tlightboxDiv.style.visibility = \"hidden\";\n\t\t\thtml = this._lightbox_template;\n\n\t\t\thtml += getHtmlButtons(this.config.buttons_left);\n\t\t\thtml += getHtmlButtons(this.config.buttons_right, true);\n\n\t\t\tlightboxDiv.innerHTML = html;\n\n\t\t\tgantt._waiAria.lightboxAttr(lightboxDiv);\n\n\t\t\tif (gantt.config.drag_lightbox) {\n\t\t\t\tlightboxDiv.firstChild.onmousedown = gantt._ready_to_dnd;\n\t\t\t\tlightboxDiv.firstChild.onselectstart = function() {\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t\tlightboxDiv.firstChild.style.cursor = \"pointer\";\n\t\t\t\tgantt._init_dnd_events();\n\t\t\t}\n\n\t\t\tdocument.body.insertBefore(lightboxDiv, document.body.firstChild);\n\t\t\tthis._lightbox = lightboxDiv;\n\n\t\t\tsns = this._get_typed_lightbox_config(type);\n\t\t\thtml = this._render_sections(sns);\n\n\t\t\tds = lightboxDiv.querySelector(\"div.gantt_cal_larea\");\n\t\t\tds.innerHTML = html;\n\n\t\t\tbindLabelsToInputs(sns);\n\n\t\t\t//sizes\n\t\t\tthis.resizeLightbox();\n\n\t\t\tthis._init_lightbox_events(this);\n\t\t\tlightboxDiv.style.display = \"none\";\n\t\t\tlightboxDiv.style.visibility = \"visible\";\n\t\t}\n\t\treturn this._lightbox;\n\t};\n\n\tgantt._render_sections = function(sns) {\n\t\tvar html = \"\";\n\t\tfor (var i = 0; i < sns.length; i++) {\n\t\t\tvar block = this.form_blocks[sns[i].type];\n\t\t\tif (!block) continue; //ignore incorrect blocks\n\t\t\tsns[i].id = \"area_\" + this.uid();\n\n\t\t\tvar display = sns[i].hidden ? \" style='display:none'\" : \"\";\n\t\t\tvar button = \"\";\n\t\t\tif (sns[i].button) {\n\t\t\t\tbutton = \"<div class='gantt_custom_button' data-index='\" + i + \"'><div class='gantt_custom_button_\" + sns[i].button + \"'></div><div class='gantt_custom_button_label'>\" + this.locale.labels[\"button_\" + sns[i].button] + \"</div></div>\";\n\t\t\t}\n\t\t\tif (this.config.wide_form) {\n\t\t\t\thtml += \"<div class='gantt_wrap_section' \" + display + \">\";\n\t\t\t}\n\t\t\thtml += \"<div id='\" + sns[i].id + \"' class='gantt_cal_lsection'><label>\" + button + this.locale.labels[\"section_\" + sns[i].name] + \"</label></div>\" + block.render.call(this, sns[i]);\n\t\t\thtml += \"</div>\";\n\t\t}\n\t\treturn html;\n\t};\n\n\n\tgantt.resizeLightbox = function() {\n\t\tif (!this._lightbox) return;\n\n\t\tvar con = this._lightbox.childNodes[1];\n\t\tcon.style.height = \"0px\";\n\t\tcon.style.height = con.scrollHeight + \"px\";\n\t\tthis._lightbox.style.height = con.scrollHeight + this.config.lightbox_additional_height + \"px\";\n\t\tcon.style.height = con.scrollHeight + \"px\"; //it is incredible , how ugly IE can be\n\t};\n\n\tgantt._center_lightbox = function(box) {\n\t\tif (box) {\n\t\t\tbox.style.display = \"block\";\n\n\t\t\tvar scroll_top = window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;\n\t\t\tvar scroll_left = window.pageXOffset || document.body.scrollLeft || document.documentElement.scrollLeft;\n\n\t\t\tvar view_height = window.innerHeight || document.documentElement.clientHeight;\n\n\t\t\tif (scroll_top) // if vertical scroll on window\n\t\t\t\tbox.style.top = Math.round(scroll_top + Math.max((view_height - box.offsetHeight) / 2, 0)) + \"px\";\n\t\t\telse // vertical scroll on body\n\t\t\t\tbox.style.top = Math.round(Math.max(((view_height - box.offsetHeight) / 2), 0) + 9) + \"px\"; // +9 for compatibility with auto tests\n\n\t\t\t// not quite accurate but used for compatibility reasons\n\t\t\tif (document.documentElement.scrollWidth > document.body.offsetWidth) // if horizontal scroll on the window\n\t\t\t\tbox.style.left = Math.round(scroll_left + (document.body.offsetWidth - box.offsetWidth) / 2) + \"px\";\n\t\t\telse // horizontal scroll on the body\n\t\t\t\tbox.style.left = Math.round((document.body.offsetWidth - box.offsetWidth) / 2) + \"px\";\n\t\t}\n\t};\n\tgantt.showCover = function() {\n\t\tif (this._cover) return;\n\n\t\tthis._cover = document.createElement(\"DIV\");\n\t\tthis._cover.className = \"gantt_cal_cover\";\n\t\tvar _document_height = ((document.height !== undefined) ? document.height : document.body.offsetHeight);\n\t\tvar _scroll_height = ((document.documentElement) ? document.documentElement.scrollHeight : 0);\n\t\tthis._cover.style.height = Math.max(_document_height, _scroll_height) + \"px\";\n\t\tdocument.body.appendChild(this._cover);\n\t};\n\n\n\tgantt._init_lightbox_events = function() {\n\t\tgantt.lightbox_events = {};\n\n\n\t\tgantt.lightbox_events.gantt_save_btn = function() {\n\t\t\tgantt._save_lightbox();\n\t\t};\n\n\n\t\tgantt.lightbox_events.gantt_delete_btn = function() {\n\t\t\tif (!gantt.callEvent(\"onLightboxDelete\", [gantt._lightbox_id]))\n\t\t\t\treturn;\n\n\t\t\tif (gantt.isTaskExists(gantt._lightbox_id)) {\n\t\t\t\tgantt.$click.buttons[\"delete\"](gantt._lightbox_id);\n\t\t\t} else {\n\t\t\t\tgantt.hideLightbox();\n\t\t\t}\n\n\t\t};\n\n\n\t\tgantt.lightbox_events.gantt_cancel_btn = function() {\n\t\t\tgantt._cancel_lightbox();\n\t\t};\n\n\n\t\tgantt.lightbox_events[\"default\"] = function(e, src) {\n\t\t\tif (src.getAttribute(\"data-dhx-button\")) {\n\t\t\t\tgantt.callEvent(\"onLightboxButton\", [src.className, src, e]);\n\t\t\t} else {\n\t\t\t\tvar index, block, sec;\n\n\t\t\t\tvar className = domHelpers.getClassName(src);\n\t\t\t\tif (className.indexOf(\"gantt_custom_button\") != -1) {\n\t\t\t\t\tif (className.indexOf(\"gantt_custom_button_\") != -1) {\n\t\t\t\t\t\tindex = src.parentNode.getAttribute(\"data-index\");\n\t\t\t\t\t\tsec = src;\n\t\t\t\t\t\twhile (sec && domHelpers.getClassName(sec).indexOf(\"gantt_cal_lsection\") == -1) {\n\t\t\t\t\t\t\tsec = sec.parentNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindex = src.getAttribute(\"data-index\");\n\t\t\t\t\t\tsec = src.parentNode;\n\t\t\t\t\t\tsrc = src.firstChild;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar sections = gantt._get_typed_lightbox_config();\n\n\t\t\t\tif (index) {\n\t\t\t\t\tindex = index * 1;\n\t\t\t\t\tblock = gantt.form_blocks[sections[index * 1].type];\n\t\t\t\t\tblock.button_click(index, src, sec, sec.nextSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.event(gantt.getLightbox(), \"click\", function(e) {\n\t\t\te = e || window.event;\n\t\t\tvar src = e.target ? e.target : e.srcElement;\n\n\t\t\tvar className = domHelpers.getClassName(src);\n\t\t\tif (!className) {\n\t\t\t\tsrc = src.previousSibling;\n\t\t\t\tclassName = domHelpers.getClassName(src);\n\t\t\t}\n\t\t\tif (src && className && className.indexOf(\"gantt_btn_set\") === 0) {\n\t\t\t\tsrc = src.firstChild;\n\t\t\t\tclassName = domHelpers.getClassName(src);\n\t\t\t}\n\t\t\tif (src && className) {\n\t\t\t\tvar func = gantt.defined(gantt.lightbox_events[src.className]) ? gantt.lightbox_events[src.className] : gantt.lightbox_events[\"default\"];\n\t\t\t\treturn func(e, src);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tgantt.getLightbox().onkeydown = function(e) {\n\t\t\tvar event = e || window.event;\n\t\t\tvar target = e.target || e.srcElement;\n\t\t\tvar buttonTarget = domHelpers.getClassName(target).indexOf(\"gantt_btn_set\") > -1;\n\n\t\t\tswitch ((e || event).keyCode) {\n\t\t\tcase gantt.constants.KEY_CODES.SPACE: {\n\t\t\t\tif ((e || event).shiftKey) return;\n\t\t\t\tif (buttonTarget && target.click) {\n\t\t\t\t\ttarget.click();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase gantt.keys.edit_save:\n\t\t\t\tif ((e || event).shiftKey) return;\n\t\t\t\tif (buttonTarget && target.click) {\n\t\t\t\t\ttarget.click();\n\t\t\t\t} else {\n\t\t\t\t\tgantt._save_lightbox();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase gantt.keys.edit_cancel:\n\t\t\t\tgantt._cancel_lightbox();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\t};\n\n\tgantt._cancel_lightbox = function() {\n\t\tvar task = this.getLightboxValues();\n\t\tthis.callEvent(\"onLightboxCancel\", [this._lightbox_id, task.$new]);\n\t\tif (gantt.isTaskExists(task.id) && task.$new) {\n\t\t\tthis.silent(function(){\n\t\t\t\tgantt.$data.tasksStore.removeItem(task.id);\n\t\t\t\tgantt._update_flags(task.id, null);\n\t\t\t});\n\t\t}\n\n\t\tthis.refreshData();\n\t\tthis.hideLightbox();\n\t};\n\n\tgantt._save_lightbox = function() {\n\t\tvar task = this.getLightboxValues();\n\t\tif (!this.callEvent(\"onLightboxSave\", [this._lightbox_id, task, !!task.$new]))\n\t\t\treturn;\n\n\t\tif (task.$new) {\n\t\t\tdelete task.$new;\n\t\t\tthis.addTask(task);\n\t\t}else if(this.isTaskExists(task.id)){\n\t\t\tthis.mixin(this.getTask(task.id), task, true);\n\t\t\tthis.refreshTask(task.id);\n\t\t\tthis.updateTask(task.id);\n\t\t}\n\t\tthis.refreshData();\n\n\t\t// TODO: do we need any blockable events here to prevent closing lightbox?\n\t\tthis.hideLightbox();\n\t};\n\n\tgantt._resolve_default_mapping = function(section) {\n\t\tvar mapping = section.map_to;\n\t\tvar time_controls = {\"time\": true, \"time_optional\": true, \"duration\": true, \"duration_optional\": true};\n\t\tif (time_controls[section.type]) {\n\t\t\tif (section.map_to == \"auto\") {\n\t\t\t\tmapping = {start_date: \"start_date\", end_date: \"end_date\", duration: \"duration\"};\n\t\t\t} else if (typeof(section.map_to) === \"string\") {\n\t\t\t\tmapping = {start_date: section.map_to};\n\t\t\t}\n\t\t}\n\n\t\treturn mapping;\n\t};\n\n\tgantt.getLightboxValues = function() {\n\t\tvar task = {};\n\n\t\tif (gantt.isTaskExists(this._lightbox_id)) {\n\t\t\ttask = this.mixin({}, this.getTask(this._lightbox_id));\n\t\t}\n\n\t\tvar sns = this._get_typed_lightbox_config();\n\t\tfor (var i = 0; i < sns.length; i++) {\n\t\t\tvar node = document.getElementById(sns[i].id);\n\t\t\tnode = (node ? node.nextSibling : node);\n\t\t\tvar block = this.form_blocks[sns[i].type];\n\t\t\tif (!block) continue;\n\t\t\tvar res = block.get_value.call(this, node, task, sns[i]);\n\t\t\tvar map_to = gantt._resolve_default_mapping(sns[i]);\n\t\t\tif (typeof map_to == \"string\" && map_to != \"auto\") {\n\t\t\t\ttask[map_to] = res;\n\t\t\t} else if (typeof map_to == \"object\") {\n\t\t\t\tfor (var property in map_to) {\n\t\t\t\t\tif (map_to[property])\n\t\t\t\t\t\ttask[map_to[property]] = res[property];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn task;\n\t};\n\n\n\tgantt.hideLightbox = function() {\n\t\tvar box = this.getLightbox();\n\t\tif (box) box.style.display = \"none\";\n\n\t\tthis._waiAria.lightboxHiddenAttr(box);\n\t\tthis._lightbox_id = null;\n\n\t\tthis.hideCover();\n\t\tthis.callEvent(\"onAfterLightbox\", []);\n\t};\n\tgantt.hideCover = function() {\n\t\tif (this._cover)\n\t\t\tthis._cover.parentNode.removeChild(this._cover);\n\t\tthis._cover = null;\n\t};\n\n\tgantt.resetLightbox = function() {\n\t\tif (gantt._lightbox && !gantt._custom_lightbox)\n\t\t\tgantt._lightbox.parentNode.removeChild(gantt._lightbox);\n\t\tgantt._lightbox = null;\n\t};\n\tgantt._set_lightbox_values = function(data, box) {\n\t\tvar task = data;\n\t\tvar s = box.getElementsByTagName(\"span\");\n\t\tvar lightboxHeader = [];\n\t\tif (gantt.templates.lightbox_header) {\n\t\t\tlightboxHeader.push(\"\");\n\t\t\tlightboxHeader.push(gantt.templates.lightbox_header(task.start_date, task.end_date, task));\n\t\t\ts[1].innerHTML = \"\";\n\t\t\ts[2].innerHTML = gantt.templates.lightbox_header(task.start_date, task.end_date, task);\n\t\t} else {\n\t\t\tlightboxHeader.push(this.templates.task_time(task.start_date, task.end_date, task));\n\t\t\tlightboxHeader.push((this.templates.task_text(task.start_date, task.end_date, task) || \"\").substr(0, 70)); //IE6 fix\n\t\t\ts[1].innerHTML = this.templates.task_time(task.start_date, task.end_date, task);\n\t\t\ts[2].innerHTML = (this.templates.task_text(task.start_date, task.end_date, task) || \"\").substr(0, 70); //IE6 fix\n\t\t}\n\t\ts[1].innerHTML = lightboxHeader[0];\n\t\ts[2].innerHTML = lightboxHeader[1];\n\n\t\tgantt._waiAria.lightboxHeader(box, lightboxHeader.join(\" \"));\n\n\t\tvar sns = this._get_typed_lightbox_config(this.getLightboxType());\n\t\tfor (var i = 0; i < sns.length; i++) {\n\t\t\tvar section = sns[i];\n\n\t\t\tif (!this.form_blocks[section.type]) {\n\t\t\t\tcontinue;//skip incorrect sections, same check is done during rendering\n\t\t\t}\n\n\n\t\t\tvar node = document.getElementById(section.id).nextSibling;\n\t\t\tvar block = this.form_blocks[section.type];\n\t\t\tvar map_to = gantt._resolve_default_mapping(sns[i]);\n\t\t\tvar value = this.defined(task[map_to]) ? task[map_to] : section.default_value;\n\t\t\tblock.set_value.call(gantt, node, value, task, section);\n\n\t\t\tif (section.focus)\n\t\t\t\tblock.focus.call(gantt, node);\n\t\t}\n\t\tif (data.id)\n\t\t\tgantt._lightbox_id = data.id;\n\t};\n\tgantt._fill_lightbox = function(id, box) {\n\t\tvar task = this.getTask(id);\n\t\tthis._set_lightbox_values(task, box);\n\t};\n\n\n\tgantt.getLightboxSection = function(name) {\n\t\tvar config = this._get_typed_lightbox_config();\n\t\tvar i = 0;\n\t\tfor (i; i < config.length; i++)\n\t\t\tif (config[i].name == name)\n\t\t\t\tbreak;\n\t\tvar section = config[i];\n\t\tif (!section)\n\t\t\treturn null;\n\n\t\tif (!this._lightbox)\n\t\t\tthis.getLightbox();\n\t\tvar header = document.getElementById(section.id);\n\t\tvar node = header.nextSibling;\n\n\t\tvar result = {\n\t\t\tsection: section,\n\t\t\theader: header,\n\t\t\tnode: node,\n\t\t\tgetValue: function(ev) {\n\t\t\t\treturn gantt.form_blocks[section.type].get_value.call(gantt, node, (ev || {}), section);\n\t\t\t},\n\t\t\tsetValue: function(value, ev) {\n\t\t\t\treturn gantt.form_blocks[section.type].set_value.call(gantt, node, value, (ev || {}), section);\n\t\t\t}\n\t\t};\n\n\t\tvar handler = this._lightbox_methods[\"get_\" + section.type + \"_control\"];\n\t\treturn handler ? handler(result) : result;\n\t};\n\n\tgantt._lightbox_methods.get_template_control = function(result) {\n\t\tresult.control = result.node;\n\t\treturn result;\n\t};\n\tgantt._lightbox_methods.get_select_control = function(result) {\n\t\tresult.control = result.node.getElementsByTagName(\"select\")[0];\n\t\treturn result;\n\t};\n\tgantt._lightbox_methods.get_textarea_control = function(result) {\n\t\tresult.control = result.node.getElementsByTagName(\"textarea\")[0];\n\t\treturn result;\n\t};\n\tgantt._lightbox_methods.get_time_control = function(result) {\n\t\tresult.control = result.node.getElementsByTagName(\"select\"); // array\n\t\treturn result;\n\t};\n\n\n\tgantt._init_dnd_events = function() {\n\t\tthis.event(document.body, \"mousemove\", gantt._move_while_dnd);\n\t\tthis.event(document.body, \"mouseup\", gantt._finish_dnd);\n\t\tgantt._init_dnd_events = function() {\n\t\t};\n\t};\n\tgantt._move_while_dnd = function(e) {\n\t\tif (gantt._dnd_start_lb) {\n\t\t\tif (!document.gantt_unselectable) {\n\t\t\t\tdocument.body.className += \" gantt_unselectable\";\n\t\t\t\tdocument.gantt_unselectable = true;\n\t\t\t}\n\t\t\tvar lb = gantt.getLightbox();\n\t\t\tvar now = (e && e.target) ? [e.pageX, e.pageY] : [event.clientX, event.clientY];\n\t\t\tlb.style.top = gantt._lb_start[1] + now[1] - gantt._dnd_start_lb[1] + \"px\";\n\t\t\tlb.style.left = gantt._lb_start[0] + now[0] - gantt._dnd_start_lb[0] + \"px\";\n\t\t}\n\t};\n\tgantt._ready_to_dnd = function(e) {\n\t\tvar lb = gantt.getLightbox();\n\t\tgantt._lb_start = [parseInt(lb.style.left, 10), parseInt(lb.style.top, 10)];\n\t\tgantt._dnd_start_lb = (e && e.target) ? [e.pageX, e.pageY] : [event.clientX, event.clientY];\n\t};\n\tgantt._finish_dnd = function() {\n\t\tif (gantt._lb_start) {\n\t\t\tgantt._lb_start = gantt._dnd_start_lb = false;\n\t\t\tdocument.body.className = document.body.className.replace(\" gantt_unselectable\", \"\");\n\t\t\tdocument.gantt_unselectable = false;\n\t\t}\n\t};\n\n\n\tgantt._focus = function(node, select) {\n\t\tif (node && node.focus) {\n\t\t\tif (gantt.config.touch) {\n\t\t\t\t//do not focus editor, to prevent auto-zoom\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tif (select && node.select) node.select();\n\t\t\t\t\tnode.focus();\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// silent errors\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\n\tgantt.form_blocks = {\n\t\tgetTimePicker: function(sns, hidden) {\n\t\t\tvar html = \"\";\n\t\t\tvar cfg = this.config;\n\t\t\tvar i;\n\t\t\tvar options;\n\t\t\tvar ariaAttrs;\n\t\t\tvar readonly;\n\t\t\tvar display;\n\t\t\tvar settings = {\n\t\t\t\tfirst: 0,\n\t\t\t\tlast: 24 * 60,\n\t\t\t\tdate: this.date.date_part(new Date(gantt._min_date.valueOf())),\n\t\t\t\ttimeFormat: getTimeFormat(sns)\n\t\t\t};\n\n\t\t\t// map: default order => real one\n\t\t\tsns._time_format_order = {size: 0};\n\n\t\t\tif (gantt.config.limit_time_select) {\n\t\t\t\tsettings.first = 60 * cfg.first_hour;\n\t\t\t\tsettings.last = 60 * cfg.last_hour + 1;\n\t\t\t\tsettings.date.setHours(cfg.first_hour);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < settings.timeFormat.length; i++) {\n\t\t\t\t// adding spaces between selects\n\t\t\t\tif (i > 0) {\n\t\t\t\t\thtml += \" \";\n\t\t\t\t}\n\n\t\t\t\toptions = getHtmlTimePickerOptions(sns, i, settings);\n\n\t\t\t\tif (options) {\n\t\t\t\t\tariaAttrs = gantt._waiAria.lightboxSelectAttrString(settings.timeFormat[i]);\n\t\t\t\t\treadonly = sns.readonly ? \"disabled='disabled'\" : \"\";\n\t\t\t\t\tdisplay = hidden ? \" style='display:none' \" : \"\";\n\t\t\t\t\thtml += \"<select \" + readonly + display + ariaAttrs + \">\" + options + \"</select>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn html;\n\t\t},\n\t\t_fill_lightbox_select: function(s, i, d, map) {\n\t\t\ts[i + map[0]].value = d.getDate();\n\t\t\ts[i + map[1]].value = d.getMonth();\n\t\t\ts[i + map[2]].value = d.getFullYear();\n\t\t\tif (gantt.defined(map[3])) {\n\t\t\t\tvar v = d.getHours() * 60 + d.getMinutes();\n\t\t\t\tv = Math.round(v / gantt._get_timepicker_step()) * gantt._get_timepicker_step();\n\t\t\t\tvar input = s[i + map[3]];\n\t\t\t\tinput.value = v;\n\t\t\t\t//in case option not shown\n\t\t\t\tinput.setAttribute(\"data-value\", v);\n\t\t\t}\n\t\t},\n\t\ttemplate: new TemplateControl(),\n\t\ttextarea: new TextareaControl(),\n\t\tselect: new SelectControl(),\n\t\ttime: new TimeControl(),\n\t\tduration: new DurationControl(),\n\t\tparent: new ParentControl(),\n\t\tradio: new RadioControl(),\n\t\tcheckbox: new CheckboxControl(),\n\t\tresources: new ResourcesControl()\n\t};\n\n\tgantt._is_lightbox_timepicker = function() {\n\t\tvar s = this._get_typed_lightbox_config();\n\t\tfor (var i = 0; i < s.length; i++)\n\t\t\tif (s[i].name == \"time\" && s[i].type == \"time\")\n\t\t\t\treturn true;\n\t\treturn false;\n\t};\n\n\tgantt._dhtmlx_confirm = function(message, title, callback, ok) {\n\t\tif (!message)\n\t\t\treturn callback();\n\t\tvar opts = {text: message};\n\t\tif (title)\n\t\t\topts.title = title;\n\t\tif (ok) {\n\t\t\topts.ok = ok;\n\t\t}\n\t\tif (callback) {\n\t\t\topts.callback = function(result) {\n\t\t\t\tif (result)\n\t\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\tgantt.confirm(opts);\n\t};\n\n\tfunction _get_type_name(type_value) {\n\t\tfor (var i in this.config.types) {\n\t\t\tif (this.config.types[i] == type_value) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn \"task\";\n\t}\n\n\tgantt._get_typed_lightbox_config = function(type) {\n\t\tif (type === undefined) {\n\t\t\ttype = this.getLightboxType();\n\t\t}\n\n\t\tvar field = _get_type_name.call(this, type);\n\n\t\tif (gantt.config.lightbox[field + \"_sections\"]) {\n\t\t\treturn gantt.config.lightbox[field + \"_sections\"];\n\t\t} else {\n\t\t\treturn gantt.config.lightbox.sections;\n\t\t}\n\t};\n\n\tgantt._silent_redraw_lightbox = function(type) {\n\t\tvar oldType = this.getLightboxType();\n\n\t\tif (this.getState().lightbox) {\n\t\t\tvar taskId = this.getState().lightbox;\n\t\t\tvar formData = this.getLightboxValues(),\n\t\t\t\ttask = this.copy(this.getTask(taskId));\n\n\t\t\tthis.resetLightbox();\n\n\t\t\tvar updTask = this.mixin(task, formData, true);\n\t\t\tvar box = this.getLightbox(type ? type : undefined);\n\t\t\tthis._center_lightbox(this.getLightbox());\n\t\t\tthis._set_lightbox_values(updTask, box);\n\t\t} else {\n\t\t\tthis.resetLightbox();\n\t\t\tthis.getLightbox(type ? type : undefined);\n\t\t}\n\t\tthis.callEvent(\"onLightboxChange\", [oldType, this.getLightboxType()]);\n\t};\n\n\tfunction bindLabelsToInputs(sns) {\n\t\tvar section;\n\t\tvar label;\n\t\tvar labelBlock;\n\t\tvar inputBlock;\n\t\tvar input;\n\t\tvar i;\n\n\t\tfor (i = 0; i < sns.length; i++) {\n\t\t\tsection = sns[i];\n\t\t\tlabelBlock = document.getElementById(section.id);\n\t\t\t\n\t\t\tif (!section.id || !labelBlock) continue;\n\n\t\t\tlabel = labelBlock.querySelector(\"label\");\n\t\t\tinputBlock = labelBlock.nextSibling;\n\t\t\t\n\t\t\tif (!inputBlock) continue;\n\n\t\t\tinput = inputBlock.querySelector(\"input, select, textarea\");\n\t\t\tif (input) {\n\t\t\t\tinput.id = input.id || \"input_\" + gantt.uid();\n\t\t\t\tsection.inputId = input.id;\n\t\t\t\tlabel.setAttribute(\"for\", section.inputId);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getHtmlButtons(buttons, floatRight) {\n\t\tvar button;\n\t\tvar ariaAttr;\n\t\tvar html = \"\";\n\t\tvar i;\n\n\t\tfor (i = 0; i < buttons.length; i++) {\n\t\t\t// needed to migrate from 'dhx_something' to 'gantt_something' naming in a lightbox\n\t\t\tbutton = gantt.config._migrate_buttons[buttons[i]] ? gantt.config._migrate_buttons[buttons[i]] : buttons[i];\n\n\t\t\tariaAttr = gantt._waiAria.lightboxButtonAttrString(button);\n\t\t\thtml += \"<div \" + ariaAttr + \" class='gantt_btn_set gantt_left_btn_set \" + button + \"_set'\" + (floatRight ? \" style='float:right;'\" : \"\") + \"><div dhx_button='1' data-dhx-button='1' class='\" + button + \"'></div><div>\" + gantt.locale.labels[button] + \"</div></div>\";\n\t\t}\n\t\treturn html;\n\t}\n\n\tfunction getTimeFormat(sns) {\n\t\tvar scale;\n\t\tvar unit;\n\t\tvar result;\n\n\t\tif (sns.time_format) return sns.time_format;\n\n\t\t// default order\n\t\tresult = [\"%d\", \"%m\", \"%Y\"];\n\t\tscale = gantt.getScale();\n\t\tunit = scale ? scale.unit : gantt.config.duration_unit;\n\t\tif (helpers.getSecondsInUnit(unit) < helpers.getSecondsInUnit(\"day\")) {\n\t\t\tresult.push(\"%H:%i\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getHtmlTimePickerOptions(sns, index, settings) {\n\t\tvar range;\n\t\tvar offset;\n\t\tvar start_year;\n\t\tvar end_year;\n\t\tvar i;\n\t\tvar time;\n\t\tvar diff;\n\t\tvar tdate;\n\t\tvar html = \"\";\n\n\t\tswitch (settings.timeFormat[index]) {\n\t\tcase \"%Y\":\n\t\t\tsns._time_format_order[2] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//year\n\n\t\t\tif (sns.year_range) {\n\t\t\t\tif (!isNaN(sns.year_range)) {\n\t\t\t\t\trange = sns.year_range;\n\t\t\t\t} else if (sns.year_range.push) {\n\t\t\t\t\t// if\n\t\t\t\t\tstart_year = sns.year_range[0];\n\t\t\t\t\tend_year = sns.year_range[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trange = range || 10;\n\t\t\toffset = offset || Math.floor(range / 2);\n\t\t\tstart_year = start_year || settings.date.getFullYear() - offset;\n\t\t\tend_year = end_year || start_year + range;\n\n\t\t\tfor (i = start_year; i < end_year; i++)\n\t\t\t\thtml += \"<option value='\" + (i) + \"'>\" + (i) + \"</option>\";\n\t\t\tbreak;\n\t\tcase \"%m\":\n\t\t\tsns._time_format_order[1] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//month\n\t\t\tfor (i = 0; i < 12; i++)\n\t\t\t\thtml += \"<option value='\" + i + \"'>\" + gantt.locale.date.month_full[i] + \"</option>\";\n\t\t\tbreak;\n\t\tcase \"%d\":\n\t\t\tsns._time_format_order[0] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//days\n\t\t\tfor (i = 1; i < 32; i++)\n\t\t\t\thtml += \"<option value='\" + i + \"'>\" + i + \"</option>\";\n\t\t\tbreak;\n\t\tcase \"%H:%i\":\n\t\t\t//  var last = 24*60, first = 0;\n\t\t\tsns._time_format_order[3] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//hours\n\t\t\ti = settings.first;\n\t\t\ttdate = settings.date.getDate();\n\t\t\tsns._time_values = [];\n\n\t\t\twhile (i < settings.last) {\n\t\t\t\ttime = gantt.templates.time_picker(settings.date);\n\t\t\t\thtml += \"<option value='\" + i + \"'>\" + time + \"</option>\";\n\t\t\t\tsns._time_values.push(i);\n\t\t\t\tsettings.date.setTime(settings.date.valueOf() + gantt._get_timepicker_step() * 60 * 1000);\n\t\t\t\tdiff = (settings.date.getDate() != tdate) ? 1 : 0; // moved or not to the next day\n\t\t\t\ti = diff * 24 * 60 + settings.date.getHours() * 60 + settings.date.getMinutes();\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\treturn html;\n\t}\n};","var helpers = require(\"../utils/helpers\");\n\nmodule.exports = function(gantt) {\n\n\tgantt.isUnscheduledTask = function (task) {\n\t\tgantt.assert(task && task instanceof Object, \"Invalid argument <b>task</b>=\"+task+\" of gantt.isUnscheduledTask. Task object was expected\");\n\t\treturn (!!task.unscheduled || !task.start_date);\n\t};\n\n\tgantt._isAllowedUnscheduledTask = function (task) {\n\t\treturn !!(task.unscheduled && gantt.config.show_unscheduled);\n\t};\n\n\tgantt.isTaskVisible = function (id) {\n\t\tif (!this.isTaskExists(id))\n\t\t\treturn false;\n\n\t\tvar task = this.getTask(id);\n\n\t\tvar taskStart = task.start_date ? task.start_date.valueOf() : null;\n\t\tvar taskEnd = task.end_date ? task.end_date.valueOf() : null;\n\n\t\tif (!(gantt._isAllowedUnscheduledTask(task) || (taskStart && taskEnd && taskStart <= this._max_date.valueOf() && taskEnd >= this._min_date.valueOf()))){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(gantt.getGlobalTaskIndex(id) >= 0);\n\t};\n\n\tgantt._defaultTaskDate = function (item, parent_id) {\n\t\tvar parent = (parent_id && parent_id != this.config.root_id) ? this.getTask(parent_id) : false,\n\t\t\tstartDate = '';\n\t\tif (parent) {\n\t\t\tstartDate = parent.start_date;\n\t\t} else {\n\t\t\tvar first = this.getTaskByIndex(0);\n\t\t\tstartDate = first ? (first.start_date ? first.start_date : (first.end_date ? this.calculateEndDate({\n\t\t\t\tstart_date: first.end_date,\n\t\t\t\tduration: -this.config.duration_step\n\t\t\t}) : '')) : this.config.start_date || this.getState().min_date;\n\t\t}\n\t\tgantt.assert(startDate, \"Invalid dates\");\n\t\treturn new Date(startDate);\n\t};\n\n\tgantt._set_default_task_timing = function (task) {\n\t\ttask.start_date = task.start_date || gantt._defaultTaskDate(task, this.getParent(task));\n\t\ttask.duration = task.duration || this.config.duration_step;\n\t\ttask.end_date = task.end_date || this.calculateEndDate(task);\n\t};\n\n\tgantt.createTask = function (item, parent, index) {\n\t\titem = item || {};\n\t\tif (!gantt.defined(item.id))\n\t\t\titem.id = gantt.uid();\n\n\t\tif (!item.start_date) {\n\t\t\titem.start_date = gantt._defaultTaskDate(item, parent);\n\t\t}\n\t\tif (item.text === undefined) {\n\t\t\titem.text = gantt.locale.labels.new_task;\n\t\t}\n\t\tif (item.duration === undefined) {\n\t\t\titem.duration = 1;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tthis.setParent(item, parent, true);\n\t\t\tvar parentObj = this.getTask(parent);\n\t\t\tparentObj.$open = true;\n\t\t}\n\n\t\tif (!this.callEvent(\"onTaskCreated\", [item])) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.config.details_on_create) {\n\t\t\titem.$new = true;\n\t\t\tthis.silent(function(){\n\t\t\t\tgantt.$data.tasksStore.addItem(item, index);\n\t\t\t});\n\t\t\tthis.selectTask(item.id);\n\t\t\tthis.refreshData();\n\t\t\tthis.showLightbox(item.id);\n\t\t} else {\n\t\t\tif (this.addTask(item, parent, index)) {\n\t\t\t\tthis.showTask(item.id);\n\t\t\t\tthis.selectTask(item.id);\n\t\t\t}\n\t\t}\n\t\treturn item.id;\n\t};\n\n\tgantt._update_flags = function (oldid, newid) {\n\t\t//  TODO: need a proper way to update all possible flags\n\t\tvar store = gantt.$data.tasksStore;\n\t\tif (oldid === undefined) {\n\t\t\tthis._lightbox_id = null;\n\n\t\t\tstore.silent(function(){\n\t\t\t\tstore.unselect();\n\t\t\t});\n\n\t\t\tif (this._tasks_dnd && this._tasks_dnd.drag) {\n\t\t\t\tthis._tasks_dnd.drag.id = null;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._lightbox_id == oldid)\n\t\t\t\tthis._lightbox_id = newid;\n\n\t\t\t// TODO: probably can be removed\n\t\t\tif (store.getSelectedId() == oldid) {\n\t\t\t\tstore.silent(function(){\n\t\t\t\t\tstore.unselect(oldid);\n\t\t\t\t\tstore.select(newid);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (this._tasks_dnd && this._tasks_dnd.drag && this._tasks_dnd.drag.id == oldid) {\n\t\t\t\tthis._tasks_dnd.drag.id = newid;\n\t\t\t}\n\t\t}\n\t};\n\n\tgantt._get_task_timing_mode = function (task, force) {\n\t\tvar task_type = this.getTaskType(task.type);\n\n\t\tvar state = {\n\t\t\ttype: task_type,\n\t\t\t$no_start: false,\n\t\t\t$no_end: false\n\t\t};\n\n\t\tif (!force && task_type == task.$rendered_type) {\n\t\t\tstate.$no_start = task.$no_start;\n\t\t\tstate.$no_end = task.$no_end;\n\t\t\treturn state;\n\t\t}\n\n\t\tif (task_type == this.config.types.project) {\n\t\t\t//project duration is always defined by children duration\n\t\t\tstate.$no_end = state.$no_start = true;\n\t\t} else if (task_type != this.config.types.milestone) {\n\t\t\t//tasks can have fixed duration, children duration(as projects), or one date fixed, and other defined by nested items\n\t\t\tstate.$no_end = !(task.end_date || task.duration);\n\t\t\tstate.$no_start = !task.start_date;\n\n\t\t\tif (this._isAllowedUnscheduledTask(task)) {\n\t\t\t\tstate.$no_end = state.$no_start = false;\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t};\n\n\tgantt._init_task_timing = function (task) {\n\t\tvar task_mode = gantt._get_task_timing_mode(task, true);\n\n\t\tvar dirty = task.$rendered_type != task_mode.type;\n\n\t\tvar task_type = task_mode.type;\n\n\t\tif (dirty) {\n\t\t\ttask.$no_start = task_mode.$no_start;\n\t\t\ttask.$no_end = task_mode.$no_end;\n\t\t\ttask.$rendered_type = task_mode.type;\n\t\t}\n\n\t\tif (dirty && task_type != this.config.types.milestone) {\n\t\t\tif (task_type == this.config.types.project) {\n\t\t\t\t//project duration is always defined by children duration\n\t\t\t\tthis._set_default_task_timing(task);\n\t\t\t}\n\t\t}\n\n\t\tif (task_type == this.config.types.milestone) {\n\t\t\ttask.end_date = task.start_date;\n\t\t}\n\t\tif (task.start_date && task.end_date) {\n\t\t\ttask.duration = this.calculateDuration(task);\n\t\t}\n\n\t\tif (!task.end_date) {\n\t\t\ttask.end_date = task.start_date;\n\t\t}\n\n\t\ttask.duration = task.duration || 0;\n\t};\n\n\tgantt.isSummaryTask = function (task) {\n\t\tgantt.assert(task && task instanceof Object, \"Invalid argument <b>task</b>=\"+task+\" of gantt.isSummaryTask. Task object was expected\");\n\t\t\n\t\tvar mode = gantt._get_task_timing_mode(task);\n\n\t\treturn !!(mode.$no_end || mode.$no_start);\n\t};\n\n// downward calculation of project duration\n\tgantt.resetProjectDates = function (task) {\n\t\tvar taskMode = this._get_task_timing_mode(task);\n\t\tif (taskMode.$no_end || taskMode.$no_start) {\n\t\t\tvar dates = this.getSubtaskDates(task.id);\n\t\t\tthis._assign_project_dates(task, dates.start_date, dates.end_date);\n\t\t}\n\t};\n\n\tgantt.getSubtaskDuration = function (task_id) {\n\t\tvar res = 0,\n\t\t\troot = task_id !== undefined ? task_id : gantt.config.root_id;\n\n\t\tthis.eachTask(function (child) {\n\t\t\tif (this.getTaskType(child.type) == gantt.config.types.project || this.isUnscheduledTask(child))\n\t\t\t\treturn;\n\n\t\t\tres += child.duration;\n\t\t}, root);\n\n\t\treturn res;\n\t};\n\n\tgantt.getSubtaskDates = function (task_id) {\n\t\tvar min = null,\n\t\t\tmax = null,\n\t\t\troot = task_id !== undefined ? task_id : gantt.config.root_id;\n\n\t\tthis.eachTask(function (child) {\n\t\t\tif (this.getTaskType(child.type) == gantt.config.types.project || this.isUnscheduledTask(child))\n\t\t\t\treturn;\n\n\t\t\tif ((child.start_date && !child.$no_start) && (!min || min > child.start_date.valueOf()))\n\t\t\t\tmin = child.start_date.valueOf();\n\t\t\tif ((child.end_date && !child.$no_end) && (!max || max < child.end_date.valueOf()))\n\t\t\t\tmax = child.end_date.valueOf();\n\t\t}, root);\n\n\t\treturn {\n\t\t\tstart_date: min ? new Date(min) : null,\n\t\t\tend_date: max ? new Date(max) : null\n\t\t};\n\t};\n\n\tgantt._assign_project_dates = function (task, from, to) {\n\t\tvar taskTiming = this._get_task_timing_mode(task);\n\t\tif (taskTiming.$no_start) {\n\t\t\tif (from && from != Infinity) {\n\t\t\t\ttask.start_date = new Date(from);\n\t\t\t} else {\n\t\t\t\ttask.start_date = this._defaultTaskDate(task, this.getParent(task));\n\t\t\t}\n\t\t}\n\n\t\tif (taskTiming.$no_end) {\n\t\t\tif (to && to != -Infinity) {\n\t\t\t\ttask.end_date = new Date(to);\n\t\t\t} else {\n\t\t\t\ttask.end_date = this.calculateEndDate({\n\t\t\t\t\tstart_date: task.start_date,\n\t\t\t\t\tduration: this.config.duration_step,\n\t\t\t\t\ttask: task\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (taskTiming.$no_start || taskTiming.$no_end) {\n\t\t\tthis._init_task_timing(task);\n\t\t}\n\t};\n\n// upward calculation of project duration\n\tgantt._update_parents = function (taskId, silent) {\n\t\tif (!taskId) return;\n\n\t\tvar task = this.getTask(taskId);\n\t\tvar pid = this.getParent(task);\n\n\t\tvar taskTiming = this._get_task_timing_mode(task);\n\n\t\tvar has_changed = true;\n\n\t\tif (taskTiming.$no_start || taskTiming.$no_end) {\n\t\t\tvar oldStart = task.start_date.valueOf(),\n\t\t\t\toldEnd = task.end_date.valueOf();\n\n\t\t\tgantt.resetProjectDates(task);\n\n\t\t\t// not refresh parent projects if dates hasn't changed\n\t\t\tif (oldStart == task.start_date.valueOf() && oldEnd == task.end_date.valueOf()) {\n\t\t\t\thas_changed = false;\n\t\t\t}\n\n\t\t\tif (has_changed && !silent) {\n\t\t\t\tthis.refreshTask(task.id, true);\n\t\t\t}\n\t\t}\n\n\n\t\tif (has_changed && pid && this.isTaskExists(pid)) {\n\t\t\tthis._update_parents(pid, silent);\n\t\t}\n\t};\n\n\tgantt.roundDate = function (config) {\n\t\tvar scale = gantt.getScale();\n\n\t\tif (helpers.isDate(config)) {\n\t\t\tconfig = {\n\t\t\t\tdate: config,\n\t\t\t\tunit: scale ? scale.unit : gantt.config.duration_unit,\n\t\t\t\tstep: scale ?  scale.step : gantt.config.duration_step\n\t\t\t};\n\t\t}\n\t\tvar date = config.date,\n\t\t\tsteps = config.step,\n\t\t\tunit = config.unit;\n\n\t\tif(!scale){\n\t\t\treturn date;\n\t\t}\n\n\t\tvar upper, lower, colIndex;\n\t\tif (unit == scale.unit && steps == scale.step &&\n\t\t\t+date >= +scale.min_date && +date <= +scale.max_date) {\n\t\t\t//find date in time scale config\n\t\t\tcolIndex = Math.floor(gantt.columnIndexByDate(date));\n\n\t\t\tif (!scale.trace_x[colIndex]) {\n\t\t\t\tcolIndex -= 1;// end of time scale\n\t\t\t\tif(scale.rtl){\n\t\t\t\t\tcolIndex = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlower = new Date(scale.trace_x[colIndex]);\n\t\t\tupper = gantt.date.add(lower, steps, unit);\n\t\t} else {\n\t\t\tcolIndex = Math.floor(gantt.columnIndexByDate(date));\n\n\t\t\tupper = gantt.date[unit + \"_start\"](new Date(scale.min_date));\n\t\t\tif (scale.trace_x[colIndex]) {\n\t\t\t\tupper = gantt.date[unit + \"_start\"](scale.trace_x[colIndex]);// end of time scale\n\t\t\t}\n\n\t\t\twhile (+upper < +date) {\n\t\t\t\tupper = gantt.date[unit + \"_start\"](gantt.date.add(upper, steps, unit));\n\n\t\t\t\tvar tzOffset = upper.getTimezoneOffset();\n\n\t\t\t\tupper = gantt._correct_dst_change(upper, tzOffset, upper, unit);\n\t\t\t\tif (gantt.date[unit + '_start'])\n\t\t\t\t\tupper = gantt.date[unit + '_start'](upper);\n\t\t\t}\n\n\t\t\tlower = gantt.date.add(upper, -1 * steps, unit);\n\n\t\t}\n\t\tif (config.dir && config.dir == 'future')\n\t\t\treturn upper;\n\t\tif (config.dir && config.dir == 'past')\n\t\t\treturn lower;\n\n\t\tif (Math.abs(date - lower) < Math.abs(upper - date)) {\n\t\t\treturn lower;\n\t\t} else {\n\t\t\treturn upper;\n\t\t}\n\n\t};\n\n\tgantt.correctTaskWorkTime = function (task) {\n\t\tif (gantt.config.work_time && gantt.config.correct_work_time) {\n\t\t\tif (!this.isWorkTime(task.start_date, undefined, task)) {\n\t\t\t\ttask.start_date = this.getClosestWorkTime({date: task.start_date, dir: 'future', task: task});\n\t\t\t\ttask.end_date = this.calculateEndDate(task);\n\t\t\t} else if (!this.isWorkTime(new Date(+task.end_date - 1), undefined, task)) {\n\t\t\t\ttask.end_date = this.calculateEndDate(task);\n\t\t\t}\n\t\t}\n\t};\n\n\tgantt.attachEvent(\"onBeforeTaskUpdate\", function (id, task) {\n\t\tgantt._init_task_timing(task);\n\t\treturn true;\n\t});\n\tgantt.attachEvent(\"onBeforeTaskAdd\", function (id, task) {\n\t\tgantt._init_task_timing(task);\n\t\treturn true;\n\t});\n\n};","// TODO: rework public api for date methods\nvar utils = require(\"../../utils/utils\");\n\nvar createWorktimeFacade = function(calendarManager, timeCalculator){\n\treturn {\n\t\tgetWorkHours: function (date) {\n\t\t\treturn timeCalculator.getWorkHours(date);\n\t\t},\n\n\t\tsetWorkTime: function (config) {\n\t\t\treturn timeCalculator.setWorkTime(config);\n\t\t},\n\n\t\tunsetWorkTime: function (config) {\n\t\t\ttimeCalculator.unsetWorkTime(config);\n\t\t},\n\n\t\tisWorkTime: function (date, unit, task) {\n\t\t\treturn timeCalculator.isWorkTime(date, unit, task);\n\t\t},\n\n\t\tgetClosestWorkTime: function (config) {\n\t\t\treturn timeCalculator.getClosestWorkTime(config);\n\t\t},\n\n\t\tcalculateDuration: function (start_date, end_date, task) {\n\t\t\treturn timeCalculator.calculateDuration(start_date, end_date, task);\n\t\t},\n\t\t_hasDuration: function (start_date, end_date, task) {\n\t\t\treturn timeCalculator.hasDuration(start_date, end_date, task);\n\t\t},\n\n\t\tcalculateEndDate: function (start, duration, unit, task) {\n\t\t\treturn timeCalculator.calculateEndDate(start, duration, unit, task);\n\t\t},\n\n\t\tcreateCalendar: utils.bind(calendarManager.createCalendar, calendarManager),\n\t\taddCalendar: utils.bind(calendarManager.addCalendar, calendarManager),\n\t\tgetCalendar: utils.bind(calendarManager.getCalendar, calendarManager),\n\t\tgetCalendars: utils.bind(calendarManager.getCalendars, calendarManager),\n\t\tgetTaskCalendar: utils.bind(calendarManager.getTaskCalendar, calendarManager),\n\t\tdeleteCalendar: utils.bind(calendarManager.deleteCalendar, calendarManager)\n\t};\n};\n\n\nmodule.exports = { create: createWorktimeFacade };\n","function CalendarDisabledTimeStrategy(gantt, argumentsHelper){\n\tthis.argumentsHelper = argumentsHelper;\n\tthis.$gantt = gantt;\n}\n\nCalendarDisabledTimeStrategy.prototype = {\n\tgetWorkHours: function () {\n\t\treturn [0, 24];\n\t},\n\tsetWorkTime: function () {\n\t\treturn true;\n\t},\n\tunsetWorkTime: function () {\n\t\treturn true;\n\t},\n\tisWorkTime: function () {\n\t\treturn true;\n\t},\n\tgetClosestWorkTime: function (config) {\n\t\tvar config = this.argumentsHelper.getClosestWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\t\treturn config.date;\n\t},\n\n\tcalculateDuration: function () {\n\t\tvar config = this.argumentsHelper.getDurationArguments.apply(this.argumentsHelper, arguments);\n\t\tvar from = config.start_date,\n\t\t\tto = config.end_date,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\treturn this._calculateDuration(from, to, unit, step);\n\t},\n\t_calculateDuration: function (start, end, unit, step) {\n\t\tvar dateHelper = this.$gantt.date;\n\t\tvar fixedUnits = {\n\t\t\t\"week\": 1000 * 60 * 60 * 24 * 7,\n\t\t\t\"day\": 1000 * 60 * 60 * 24,\n\t\t\t\"hour\": 1000 * 60 * 60,\n\t\t\t\"minute\": 1000 * 60\n\t\t};\n\n\t\tvar res = 0;\n\t\tif (fixedUnits[unit]) {\n\t\t\tres = Math.round((end - start) / (step * fixedUnits[unit]));\n\t\t} else {\n\t\t\tvar from = new Date(start),\n\t\t\t\tto = new Date(end);\n\t\t\twhile (from.valueOf() < to.valueOf()) {\n\t\t\t\tres += 1;\n\t\t\t\tfrom = dateHelper.add(from, step, unit);\n\t\t\t}\n\n\t\t\tif (from.valueOf() != end.valueOf()) {\n\t\t\t\tres += (to - from) / (dateHelper.add(from, step, unit) - from);\n\t\t\t}\n\t\t}\n\n\t\treturn Math.round(res);\n\t},\n\n\thasDuration: function () {\n\t\tvar config = this.argumentsHelper.getDurationArguments.apply(this.argumentsHelper, arguments);\n\t\tvar from = config.start_date,\n\t\t\tto = config.end_date,\n\t\t\tunit = config.unit;\n\n\t\tif (!unit) {\n\t\t\treturn false;\n\t\t}\n\t\tfrom = new Date(from);\n\t\tto = new Date(to);\n\n\t\treturn (from.valueOf() < to.valueOf());\n\t},\n\n\tcalculateEndDate: function () {\n\t\tvar config = this.argumentsHelper.calculateEndDateArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar start = config.start_date,\n\t\t\tduration = config.duration,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\treturn this.$gantt.date.add(start, step * duration, unit);\n\t}\n};\n\nmodule.exports = CalendarDisabledTimeStrategy;","var createArgumentsHelper = require(\"./calendar_arguments_helper\"),\n\tNoWorkTimeCalendar = require(\"./strategy/no_work_time\");\n\nfunction TimeCalculator(calendarManager){\n\n\tthis.$gantt = calendarManager.$gantt;\n\tthis.argumentsHelper = createArgumentsHelper(this.$gantt);\n\tthis.calendarManager = calendarManager;\n\tthis.$disabledCalendar = new NoWorkTimeCalendar(this.$gantt, this.argumentsHelper);\n}\n\nTimeCalculator.prototype = {\n\t_getCalendar: function (config) {\n\t\tvar calendar;\n\t\tif (!this.$gantt.$services.config().work_time) {\n\t\t\tcalendar = this.$disabledCalendar;\n\t\t} else {\n\t\t\tvar manager = this.calendarManager;\n\t\t\tif (config.task) {\n\t\t\t\tcalendar = manager.getTaskCalendar(config.task);\n\t\t\t} else if (config.id) {\n\t\t\t\tcalendar = manager.getTaskCalendar(config);\n\t\t\t} else if (config.calendar) {\n\t\t\t\tcalendar = config.calendar;\n\t\t\t}\n\t\t\tif (!calendar) {\n\t\t\t\tcalendar = manager.getTaskCalendar();\n\t\t\t}\n\t\t}\n\t\treturn calendar;\n\t},\n\n\tgetWorkHours: function (config) {\n\t\tconfig = this.argumentsHelper.getWorkHoursArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\n\t\treturn calendar.getWorkHours(config.date);\n\t},\n\n\tsetWorkTime: function (config, calendar) {\n\t\tconfig = this.argumentsHelper.setWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tif (!calendar)\n\t\t\tcalendar = this.calendarManager.getCalendar(); // Global\n\t\treturn calendar.setWorkTime(config);\n\t},\n\n\tunsetWorkTime: function (config, calendar) {\n\t\tconfig = this.argumentsHelper.unsetWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tif (!calendar)\n\t\t\tcalendar = this.calendarManager.getCalendar(); // Global\n\t\treturn calendar.unsetWorkTime(config);\n\t},\n\tisWorkTime: function (date, unit, task, calendar) {\n\t\tvar config = this.argumentsHelper.isWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tcalendar = this._getCalendar(config);\n\t\treturn calendar.isWorkTime(config);\n\t},\n\tgetClosestWorkTime: function (config) {\n\t\tconfig = this.argumentsHelper.getClosestWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\n\t\treturn calendar.getClosestWorkTime(config);\n\t},\n\n\tcalculateDuration: function () { // start_date_date, end_date, task\n\t\tvar config = this.argumentsHelper.getDurationArguments.apply(this.argumentsHelper, arguments);\n\n\n\t\tvar calendar = this._getCalendar(config);\n\t\treturn calendar.calculateDuration(config);\n\t},\n\thasDuration: function () {\n\t\tvar config = this.argumentsHelper.hasDurationArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\n\t\treturn calendar.hasDuration(config);\n\t},\n\tcalculateEndDate: function (config) { // start_date, duration, unit, task\n\t\tvar config = this.argumentsHelper.calculateEndDateArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\t\treturn calendar.calculateEndDate(config);\n\t}\n};\n\nmodule.exports = TimeCalculator;\n\n","function WorkUnitsCache() {\n\tthis._cache = {};\n}\n\nWorkUnitsCache.prototype = {\n\t// cache previously calculated worktime\n\tget: function (unit, date) {\n\t\tvar result = -1;// default value (if not existed in the cache)\n\n\t\tvar cache = this._cache;\n\t\tif (cache && cache[unit]) {\n\t\t\tvar units = cache[unit];\n\t\t\tvar time = date.getTime();\n\t\t\tif (units[time] !== undefined)\n\t\t\t\tresult = units[time];\n\t\t}\n\t\treturn result;\n\t},\n\n\tput: function (unit, date, value) {\n\t\tif (!unit || !date) return false;\n\n\t\tvar cache = this._cache;\n\n\t\tvar time = date.getTime();\n\n\t\tvalue = !!value;\n\n\t\tif (!cache) return false;\n\t\tif (!cache[unit]) cache[unit] = {};\n\t\tcache[unit][time] = value;\n\t\treturn true;\n\t},\n\n\tclear: function () {\n\t\tthis._cache = {};\n\t}\n};\n\nmodule.exports = WorkUnitsCache;","var Cache = require(\"./calendar_workunit_cache\"),\n\tutils = require(\"../../../utils/utils\");\n\nfunction CalendarWorkTimeStrategy(gantt, argumentsHelper){\n\tthis.argumentsHelper = argumentsHelper;\n\tthis.$gantt = gantt;\n\tthis._workingUnitsCache = new Cache();\n}\n\nCalendarWorkTimeStrategy.prototype = {\n\tunits: [\n\t\t\"year\",\n\t\t\"month\",\n\t\t\"week\",\n\t\t\"day\",\n\t\t\"hour\",\n\t\t\"minute\"\n\t],\n\t// cache previously calculated worktime\n\t_getUnitOrder: function (unit) {\n\t\tfor (var i = 0, len = this.units.length; i < len; i++) {\n\t\t\tif (this.units[i] == unit)\n\t\t\t\treturn i;\n\t\t}\n\t},\n\t_timestamp: function (settings) {\n\n\t\tvar timestamp = null;\n\t\tif ((settings.day || settings.day === 0)) {\n\t\t\ttimestamp = settings.day;\n\t\t} else if (settings.date) {\n\t\t\t// store worktime datestamp in utc so it could be recognized in different timezones (e.g. opened locally and sent to the export service in different timezone)\n\t\t\ttimestamp = Date.UTC(settings.date.getFullYear(), settings.date.getMonth(), settings.date.getDate());\n\t\t}\n\t\treturn timestamp;\n\t},\n\t_checkIfWorkingUnit: function (date, unit, order) {\n\t\tif (order === undefined) {\n\t\t\torder = this._getUnitOrder(unit);\n\t\t}\n\n\t\t// disable worktime check for custom time units\n\t\tif (order === undefined) {\n\t\t\treturn true;\n\t\t}\n\t\tif (order) {\n\t\t\t//check if bigger time unit is a work time (hour < day < month...)\n\t\t\t//i.e. don't check particular hour if the whole day is marked as not working\n\t\t\tif (!this._isWorkTime(date, this.units[order - 1], order - 1))\n\t\t\t\treturn false;\n\t\t}\n\t\tif (!this[\"_is_work_\" + unit])\n\t\t\treturn true;\n\t\treturn this[\"_is_work_\" + unit](date);\n\t},\n\t//checkings for particular time units\n\t//methods for month-year-week can be defined, otherwise always return 'true'\n\t_is_work_day: function (date) {\n\t\tvar val = this._getWorkHours(date);\n\n\t\tif (val instanceof Array) {\n\t\t\treturn val.length > 0;\n\t\t}\n\t\treturn false;\n\t},\n\t_is_work_hour: function (date) {\n\t\tvar hours = this._getWorkHours(date); // [7,12] or []\n\t\tvar hour = date.getHours();\n\t\tfor (var i = 0; i < hours.length; i += 2) {\n\t\t\tif (hours[i + 1] === undefined) {\n\t\t\t\treturn hours[i] == hour;\n\t\t\t} else {\n\t\t\t\tif (hour >= hours[i] && hour < hours[i + 1])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_internDatesPull: {},\n\t_nextDate: function (start, unit, step) {\n\t\tvar dateHelper = this.$gantt.date;\n\t\treturn dateHelper.add(start, step, unit);\n\n\t\t/*var start_value = +start,\n\t\t\tkey = unit + \"_\" + step;\n\t\tvar interned = this._internDatesPull[key];\n\t\tif(!interned){\n\t\t\tinterned = this._internDatesPull[key] = {};\n\t\t}\n\t\tvar calculated;\n\t\tif(!interned[start_value]){\n\t\t\tinterned[start_value] = calculated = dateHelper.add(start, step, unit);\n\t\t\t//interned[start_value] = dateHelper.add(start, step, unit);\n\t\t}\n\t\treturn calculated || interned[start_value];*/\n\t},\n\t_getWorkUnitsBetweenGeneric: function (from, to, unit, step) {\n\t\tvar dateHelper = this.$gantt.date;\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\t\tstep = step || 1;\n\t\tvar units = 0;\n\n\n\t\tvar next = null;\n\t\tvar stepStart,\n\t\t\tstepEnd;\n\n\t\t// calculating decimal durations, i.e. 2016-09-20 00:05:00 - 2016-09-20 01:00:00 ~ 0.95 instead of 1\n\t\t// and also  2016-09-20 00:00:00 - 2016-09-20 00:05:00 ~ 0.05 instead of 1\n\t\t// durations must be rounded later\n\t\tvar checkFirst = false;\n\t\tstepStart = dateHelper[unit + \"_start\"](new Date(start));\n\t\tif (stepStart.valueOf() != start.valueOf()) {\n\t\t\tcheckFirst = true;\n\t\t}\n\t\tvar checkLast = false;\n\t\tstepEnd = dateHelper[unit + \"_start\"](new Date(to));\n\t\tif (stepEnd.valueOf() != to.valueOf()) {\n\t\t\tcheckLast = true;\n\t\t}\n\n\t\tvar isLastStep = false;\n\t\twhile (start.valueOf() < end.valueOf()) {\n\t\t\tnext = this._nextDate(start, unit, step);\n\t\t\tisLastStep = (next.valueOf() > end.valueOf());\n\n\t\t\tif (this._isWorkTime(start, unit)) {\n\t\t\t\tif (checkFirst || (checkLast && isLastStep)) {\n\t\t\t\t\tstepStart = dateHelper[unit + \"_start\"](new Date(start));\n\t\t\t\t\tstepEnd = dateHelper.add(stepStart, step, unit);\n\t\t\t\t}\n\n\t\t\t\tif (checkFirst) {\n\t\t\t\t\tcheckFirst = false;\n\t\t\t\t\tnext = this._nextDate(stepStart, unit, step);\n\t\t\t\t\tunits += ((stepEnd.valueOf() - start.valueOf()) / (stepEnd.valueOf() - stepStart.valueOf()));\n\t\t\t\t} else if (checkLast && isLastStep) {\n\t\t\t\t\tcheckLast = false;\n\t\t\t\t\tunits += ((end.valueOf() - start.valueOf()) / (stepEnd.valueOf() - stepStart.valueOf()));\n\n\t\t\t\t} else {\n\t\t\t\t\tunits++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tstart = next;\n\t\t}\n\t\treturn units;\n\t},\n\t_getHoursPerDay: function (date) {\n\t\tvar hours = this._getWorkHours(date);\n\t\tvar res = 0;\n\t\tfor (var i = 0; i < hours.length; i += 2) {\n\t\t\tres += ((hours[i + 1] - hours[i]) || 0);\n\t\t}\n\t\treturn res;\n\t},\n\t_getWorkHoursForRange: function (from, to) {\n\t\tvar hours = 0;\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\n\t\twhile (start.valueOf() < end.valueOf()) {\n\t\t\tif (this._isWorkTime(start, \"day\"))\n\t\t\t\thours += this._getHoursPerDay(start);\n\t\t\tstart = this._nextDate(start, \"day\", 1);\n\t\t}\n\t\treturn hours;\n\t},\n\t_getWorkUnitsBetweenHours: function (from, to, unit, step) {\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\t\tstep = step || 1;\n\n\t\tvar firstDayStart = new Date(start);\n\t\tvar firstDayEnd = this.$gantt.date.add(this.$gantt.date.day_start(new Date(start)), 1, \"day\");\n\n\t\tif (end.valueOf() <= firstDayEnd.valueOf()) {\n\t\t\treturn this._getWorkUnitsBetweenGeneric(from, to, unit, step);\n\t\t} else {\n\n\t\t\tvar lastDayStart = this.$gantt.date.day_start(new Date(end));\n\t\t\tvar lastDayEnd = end;\n\n\t\t\tvar startPart = this._getWorkUnitsBetweenGeneric(firstDayStart, firstDayEnd, unit, step);\n\t\t\tvar endPart = this._getWorkUnitsBetweenGeneric(lastDayStart, lastDayEnd, unit, step);\n\n\t\t\tvar hourRange = this._getWorkHoursForRange(firstDayEnd, lastDayStart);\n\t\t\thourRange = ((hourRange / step) + startPart + endPart);\n\n\t\t\treturn hourRange;\n\t\t}\n\t},\n\n\t_getCalendar: function () {\n\t\treturn this.worktime;\n\t},\n\t_setCalendar: function (settings) {\n\t\tthis.worktime = settings;\n\t},\n\n\t_tryChangeCalendarSettings: function (payload) {\n\t\tvar backup = JSON.stringify(this._getCalendar());\n\t\tpayload();\n\t\tif (this._isEmptyCalendar(this._getCalendar())) {\n\t\t\tthis.$gantt.assert(false, \"Invalid calendar settings, no worktime available\");\n\t\t\tthis._setCalendar(JSON.parse(backup));\n\t\t\tthis._workingUnitsCache.clear();\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\n\t},\n\n\t_isEmptyCalendar: function (settings) {\n\t\tvar result = false,\n\t\t\tdatesArray = [],\n\t\t\tisFullWeekSet = true;\n\t\tfor (var i in settings.dates) {\n\t\t\tresult |= !!settings.dates[i];\n\t\t\tdatesArray.push(i);\n\t\t}\n\n\t\tvar checkFullArray = [];\n\t\tfor (var i = 0; i < datesArray.length; i++) {\n\t\t\tif (datesArray[i] < 10) {\n\t\t\t\tcheckFullArray.push(datesArray[i]);\n\t\t\t}\n\t\t}\n\t\tcheckFullArray.sort();\n\n\t\tfor (var i = 0; i < 7; i++) {\n\t\t\tif (checkFullArray[i] != i)\n\t\t\t\tisFullWeekSet = false;\n\t\t}\n\t\tif (isFullWeekSet)\n\t\t\treturn !result;\n\t\treturn !(result || !!settings.hours); // can still return false if separated dates are set to true\n\t},\n\n\tgetWorkHours: function () {\n\t\tvar config = this.argumentsHelper.getWorkHoursArguments.apply(this.argumentsHelper, arguments);\n\t\treturn this._getWorkHours(config.date);\n\t},\n\t_getWorkHours: function (date) {\n\t\tvar t = this._timestamp({date: date});\n\t\tvar hours = true;\n\t\tvar calendar = this._getCalendar();\n\t\tif (calendar.dates[t] !== undefined) {\n\t\t\thours = calendar.dates[t];//custom day\n\t\t} else if (calendar.dates[date.getDay()] !== undefined) {\n\t\t\thours = calendar.dates[date.getDay()];//week day\n\t\t}\n\t\tif (hours === true) {\n\t\t\treturn calendar.hours;\n\t\t} else if (hours) {\n\t\t\treturn hours;\n\t\t}\n\t\treturn [];\n\t},\n\n\tsetWorkTime: function (settings) {\n\t\treturn this._tryChangeCalendarSettings(utils.bind(function () {\n\t\t\tvar hours = settings.hours !== undefined ? settings.hours : true;\n\t\t\tvar timestamp = this._timestamp(settings);\n\t\t\tif (timestamp !== null) {\n\t\t\t\tthis._getCalendar().dates[timestamp] = hours;\n\t\t\t} else {\n\t\t\t\tthis._getCalendar().hours = hours;\n\t\t\t}\n\t\t\tthis._workingUnitsCache.clear();\n\t\t}, this));\n\t},\n\n\tunsetWorkTime: function (settings) {\n\t\treturn this._tryChangeCalendarSettings(utils.bind(function () {\n\t\t\tif (!settings) {\n\t\t\t\tthis.reset_calendar();\n\t\t\t} else {\n\n\t\t\t\tvar timestamp = this._timestamp(settings);\n\n\t\t\t\tif (timestamp !== null) {\n\t\t\t\t\tdelete this._getCalendar().dates[timestamp];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Clear work units cache\n\t\t\tthis._workingUnitsCache.clear();\n\t\t}, this));\n\t},\n\n\t_isWorkTime: function (date, unit, order) {\n\t\t//Check if this item has in the cache\n\t\tvar is_work_unit = this._workingUnitsCache.get(unit, date);\n\n\t\tif (is_work_unit == -1) {\n\t\t\t// calculate if not cached\n\t\t\tis_work_unit = this._checkIfWorkingUnit(date, unit, order);\n\t\t\tthis._workingUnitsCache.put(unit, date, is_work_unit);\n\t\t}\n\n\t\treturn is_work_unit;\n\t},\n\n\tisWorkTime: function () {\n\t\tvar config =  this.argumentsHelper.isWorkTimeArguments.apply( this.argumentsHelper, arguments);\n\t\treturn this._isWorkTime(config.date, config.unit);\n\t},\n\n\tcalculateDuration: function () {\n\t\tvar config =  this.argumentsHelper.getDurationArguments.apply( this.argumentsHelper, arguments);\n\n\t\tif (!config.unit) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar res = 0;\n\t\tif (config.unit == \"hour\") {\n\t\t\tres = this._getWorkUnitsBetweenHours(config.start_date, config.end_date, config.unit, config.step);\n\t\t} else {\n\t\t\tres = this._getWorkUnitsBetweenGeneric(config.start_date, config.end_date, config.unit, config.step);\n\t\t}\n\n\t\t// getDuration.. returns decimal durations\n\t\treturn Math.round(res);\n\t},\n\thasDuration: function () {\n\t\tvar config =  this.argumentsHelper.getDurationArguments.apply( this.argumentsHelper, arguments);\n\n\t\tvar from = config.start_date,\n\t\t\tto = config.end_date,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\tif (!unit) {\n\t\t\treturn false;\n\t\t}\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\t\tstep = step || 1;\n\n\t\twhile (start.valueOf() < end.valueOf()) {\n\t\t\tif (this._isWorkTime(start, unit))\n\t\t\t\treturn true;\n\t\t\tstart = this._nextDate(start, unit, step);\n\t\t}\n\t\treturn false;\n\t},\n\n\tcalculateEndDate: function () {\n\t\tvar config =  this.argumentsHelper.calculateEndDateArguments.apply( this.argumentsHelper, arguments);\n\n\t\tvar from = config.start_date,\n\t\t\tduration = config.duration,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\tvar mult = (config.duration >= 0) ? 1 : -1;\n\t\treturn this._calculateEndDate(from, duration, unit, step * mult);\n\t},\n\t_calculateEndDate: function (from, duration, unit, step) {\n\t\tif (!unit)\n\t\t\treturn false;\n\n\t\tvar start = new Date(from),\n\t\t\tadded = 0;\n\t\tstep = step || 1;\n\t\tduration = Math.abs(duration * 1);\n\n\t\twhile (added < duration) {\n\t\t\tvar next = this._nextDate(start, unit, step);\n\t\t\t//if(this.isWorkTime(step > 0 ? start : next, unit))\n\t\t\tif (this._isWorkTime(step > 0 ? new Date(next.valueOf() - 1) : new Date(next.valueOf() + 1), unit))\n\t\t\t\tadded++;\n\t\t\tstart = next;\n\t\t}\n\t\treturn start;\n\t},\n\n\tgetClosestWorkTime: function () {\n\t\tvar config =  this.argumentsHelper.getClosestWorkTimeArguments.apply( this.argumentsHelper, arguments);\n\t\treturn this._getClosestWorkTime(config);\n\t},\n\n\t_getClosestWorkTime: function (settings) {\n\t\tif (this._isWorkTime(settings.date, settings.unit))\n\t\t\treturn settings.date;\n\n\t\tvar unit = settings.unit;\n\n\t\tvar curr = this.$gantt.date[unit + '_start'](new Date(settings.date));\n\n\t\tvar future_target = new Date(curr),\n\t\t\tprev_target = new Date(curr),\n\t\t\ttick = true,\n\t\t\tmaximum_loop = 3000,//be extra sure we won't fall into infinite loop, 3k seems big enough\n\t\t\tcount = 0,\n\t\t\tboth_directins = (settings.dir == 'any' || !settings.dir);\n\n\t\tvar inc = 1;\n\t\tif (settings.dir == 'past')\n\t\t\tinc = -1;\n\n\t\tvar unitOrder = this._getUnitOrder(unit),\n\t\t\tbiggerTimeUnit = this.units[unitOrder - 1];\n\n\t\t//will seek closest working hour in future or in past, one step in one direction per iteration\n\t\twhile (!this._isWorkTime(curr, unit)) {\n\n\t\t\tif(biggerTimeUnit && !this._isWorkTime(curr, biggerTimeUnit)){\n\t\t\t\t// no need to check every hour/minute if we know that the whole day is not working\n\t\t\t\tvar biggerTimeUnitSettings = this.$gantt.copy(settings);\n\t\t\t\tbiggerTimeUnitSettings.date = curr;\n\t\t\t\tbiggerTimeUnitSettings.unit = biggerTimeUnit;\n\n\t\t\t\treturn this._getClosestWorkTime(biggerTimeUnitSettings);\n\t\t\t}\n\n\t\t\tif (both_directins) {\n\t\t\t\tcurr = tick ? future_target : prev_target;\n\t\t\t\tinc = inc * (-1);\n\t\t\t}\n\t\t\tvar tzOffset = curr.getTimezoneOffset();\n\t\t\tcurr = this.$gantt.date.add(curr, inc, unit);\n\n\t\t\tcurr = this.$gantt._correct_dst_change(curr, tzOffset, inc, unit);\n\t\t\tif (this.$gantt.date[unit + '_start'])\n\t\t\t\tcurr = this.$gantt.date[unit + '_start'](curr);\n\n\t\t\tif (both_directins) {\n\t\t\t\tif (tick) {\n\t\t\t\t\tfuture_target = curr;\n\t\t\t\t} else {\n\t\t\t\t\tprev_target = curr;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick = !tick;\n\t\t\tcount++;\n\t\t\tif (count > maximum_loop) {\n\t\t\t\tthis.$gantt.assert(false, \"Invalid working time check\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (curr == prev_target || settings.dir == 'past') {\n\t\t\tcurr = this.$gantt.date.add(curr, 1, unit);\n\t\t}\n\n\t\treturn curr;\n\t}\n};\n\nmodule.exports = CalendarWorkTimeStrategy;","var utils = require(\"../../utils/utils\");\nvar createArgumentsHelper = require(\"./calendar_arguments_helper\");\nvar CalendarWorktimeStrategy = require(\"./strategy/calendar_strategy\");\n\nfunction CalendarManager (gantt){\n\tthis.$gantt = gantt;\n\tthis._calendars = {};\n}\n\nCalendarManager.prototype = {\n\t_calendars: {},\n\t_getDayHoursForMultiple: function (calendars, date) {\n\t\tvar units = [],\n\t\t\ttick = true,\n\t\t\tcurrPos = 0,\n\t\t\tis_work_hour = false,\n\t\t\tstart = this.$gantt.date.day_start(new Date(date));\n\t\tfor (var hour = 0; hour < 24; hour++) {\n\t\t\tis_work_hour = calendars.reduce(function (acc, calendar) {\n\t\t\t\treturn acc && calendar._is_work_hour(start);\n\t\t\t}, true);\n\t\t\tif (is_work_hour) {\n\t\t\t\tif (tick) {\n\t\t\t\t\tunits[currPos] = hour;\n\t\t\t\t\tunits[currPos + 1] = (hour + 1);\n\t\t\t\t\tcurrPos += 2;\n\t\t\t\t} else {\n\t\t\t\t\tunits[currPos - 1] += 1;\n\t\t\t\t}\n\t\t\t\ttick = false;\n\t\t\t} else if (!tick) {\n\t\t\t\ttick = true;\n\t\t\t}\n\t\t\tstart = this.$gantt.date.add(start, 1, \"hour\");\n\t\t}\n\t\tif (!units.length)\n\t\t\tunits = false;\n\t\treturn units;\n\t},\n\tmergeCalendars: function () {\n\t\tvar newCalendar = this.createCalendar(),\n\t\t\tday,\n\t\t\tunits = [];\n\t\tvar calendars = Array.prototype.slice.call(arguments, 0);\n\t\tnewCalendar.worktime.hours = [0, 24];\n\t\tnewCalendar.worktime.dates = {};\n\t\tvar start = this.$gantt.date.day_start(new Date(259200000)); // 1970 day=0\n\t\tfor (day = 0; day < 7; day++) {\n\t\t\tunits = this._getDayHoursForMultiple(calendars, start);\n\t\t\tnewCalendar.worktime.dates[day] = units;\n\t\t\tstart = this.$gantt.date.add(start, 1, \"day\");\n\t\t}\n\t\tfor (var i = 0; i < calendars.length; i++) {\n\t\t\tfor (var value in calendars[i].worktime.dates) if (+value > 10000) {\n\t\t\t\tunits = this._getDayHoursForMultiple(calendars, new Date(+value));\n\t\t\t\tnewCalendar.worktime.dates[value] = units;\n\t\t\t}\n\t\t}\n\t\treturn newCalendar;\n\t},\n\n\t_convertWorktimeSettings: function (settings) {\n\t\tvar days = settings.days;\n\t\tif (days) {\n\t\t\tsettings.dates = settings.dates || {};\n\t\t\tfor (var i = 0; i < days.length; i++) {\n\t\t\t\tsettings.dates[i] = days[i];\n\t\t\t\tif (!(days[i] instanceof Array)) {\n\t\t\t\t\tsettings.dates[i] = !!days[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete settings.days;\n\t\t}\n\t\treturn settings;\n\t},\n\n\tcreateCalendar: function (parentCalendar) {\n\t\tvar settings;\n\n\t\tif (!parentCalendar) {\n\t\t\tparentCalendar = {};\n\t\t}\n\n\t\tif (parentCalendar.worktime) {\n\t\t\tsettings = utils.copy(parentCalendar.worktime);\n\t\t} else {\n\t\t\tsettings = utils.copy(parentCalendar);\n\t\t}\n\n\t\tvar defaults = utils.copy(this.defaults.fulltime.worktime);\n\t\tutils.mixin(settings, defaults);\n\n\t\tvar id = utils.uid();\n\t\tvar calendar = {\n\t\t\tid: id + \"\",\n\t\t\tworktime: this._convertWorktimeSettings(settings)\n\t\t};\n\n\t\tvar apiCore = new CalendarWorktimeStrategy(this.$gantt, createArgumentsHelper(this.$gantt));\n\t\tutils.mixin(apiCore, calendar);\n\n\t\t// validate/check if empty calendar\n\t\tif (!apiCore._tryChangeCalendarSettings(function () {\n\t\t\t})) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn apiCore;\n\t\t}\n\t},\n\n\tgetCalendar: function (id) {\n\t\tid = id || \"global\";\n\t\tthis.createDefaultCalendars();\n\t\treturn this._calendars[id];\n\t},\n\n\tgetCalendars: function () {\n\t\tvar res = [];\n\t\tfor (var i in this._calendars) {\n\t\t\tres.push(this.getCalendar(i));\n\t\t}\n\t\treturn res;\n\t},\n\n\tgetTaskCalendar: function (task) {\n\t\tvar config = this.$gantt.$services.config();\n\t\tif (!task) {\n\t\t\treturn this.getCalendar();\n\t\t} else if (task[config.calendar_property]) {\n\t\t\treturn this.getCalendar(task[config.calendar_property]);\n\t\t} else if (config.resource_calendars) {\n\n\t\t\tfor (var field in config.resource_calendars) {\n\t\t\t\tvar resource = config.resource_calendars[field];\n\t\t\t\tif (task[field]) {\n\t\t\t\t\tvar calendarId = resource[task[field]];\n\t\t\t\t\tif (calendarId) {\n\t\t\t\t\t\treturn this.getCalendar(calendarId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.getCalendar();\n\t},\n\n\taddCalendar: function (calendar) { // puts new calendar to Global Storage - gantt.calendarManager._calendars {}\n\t\tif (!(calendar instanceof CalendarWorktimeStrategy)) {\n\t\t\tvar id = calendar.id;\n\t\t\tcalendar = this.createCalendar(calendar);\n\t\t\tcalendar.id = id;\n\t\t}\n\t\tvar config = this.$gantt.$services.config();\n\n\t\tcalendar.id = calendar.id || utils.uid();\n\t\tthis._calendars[calendar.id] = calendar;\n\t\tif (!config.worktimes)\n\t\t\tconfig.worktimes = {};\n\t\tconfig.worktimes[calendar.id] = calendar.worktime;\n\t\treturn calendar.id;\n\t},\n\n\tdeleteCalendar: function (calendar) {\n\t\tvar config = this.$gantt.$services.config();\n\t\tif (!calendar) return false;\n\t\tif (this._calendars[calendar]) {\n\t\t\tdelete this._calendars[calendar];\n\t\t\tif (config.worktimes && config.worktimes[calendar])\n\t\t\t\tdelete config.worktimes[calendar];\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\t},\n\n\trestoreConfigCalendars: function (configs) {\n\t\tfor (var i in configs) {\n\t\t\tif (this._calendars[i])\n\t\t\t\tcontinue;\n\n\t\t\tvar settings = configs[i];\n\t\t\tvar calendar = this.createCalendar(settings);\n\t\t\tcalendar.id = i;\n\t\t\tthis.addCalendar(calendar);\n\t\t}\n\t},\n\n\tdefaults: {\n\t\tglobal: {\n\t\t\tid: \"global\",\n\t\t\tworktime: {\n\t\t\t\thours: [8, 17],\n\t\t\t\tdays: [0, 1, 1, 1, 1, 1, 0]\n\t\t\t}\n\t\t},\n\t\tfulltime: {\n\t\t\tid: \"fulltime\",\n\t\t\tworktime: {\n\t\t\t\thours: [0, 24],\n\t\t\t\tdays: [1, 1, 1, 1, 1, 1, 1]\n\t\t\t}\n\t\t}\n\t},\n\n\tcreateDefaultCalendars: function () {\n\t\tvar config = this.$gantt.$services.config();\n\t\tthis.restoreConfigCalendars(this.defaults);\n\t\tthis.restoreConfigCalendars(config.worktimes);\n\t}\n};\n\nmodule.exports = CalendarManager;","var CalendarManager = require(\"./calendar_manager\"),\n\tTimeCalculator = require(\"./time_calculator\"),\n\tworktimeFacadeFactory = require(\"../facades/worktime_calendars\"),\n\tutils = require(\"../../utils/utils\");\n\nmodule.exports = function (gantt) {\n\tvar manager = new CalendarManager(gantt),\n\ttimeCalculator = new TimeCalculator(manager);\n\tvar facade = worktimeFacadeFactory.create(manager, timeCalculator);\n\tutils.mixin(gantt, facade);\n};\n","var helpers = require(\"../utils/helpers\");\n\nmodule.exports = function(gantt) {\n\n\tgantt.load = function (url, type, callback) {\n\t\tthis._load_url = url;\n\t\tthis.assert(arguments.length, \"Invalid load arguments\");\n\n\t\tvar tp = 'json', cl = null;\n\t\tif (arguments.length >= 3) {\n\t\t\ttp = type;\n\t\t\tcl = callback;\n\t\t} else {\n\t\t\tif (typeof arguments[1] == \"string\")\n\t\t\t\ttp = arguments[1];\n\t\t\telse if (typeof arguments[1] == \"function\")\n\t\t\t\tcl = arguments[1];\n\t\t}\n\n\t\tthis._load_type = tp;\n\n\t\tthis.callEvent(\"onLoadStart\", [url, tp]);\n\n\t\tthis.ajax.get(url, gantt.bind(function (l) {\n\t\t\tthis.on_load(l, tp);\n\t\t\tthis.callEvent(\"onLoadEnd\", [url, tp]);\n\t\t\tif (typeof cl == \"function\")\n\t\t\t\tcl.call(this);\n\t\t}, this));\n\t};\n\tgantt.parse = function (data, type) {\n\t\tthis.on_load({xmlDoc: {responseText: data}}, type);\n\t};\n\n\tgantt.serialize = function (type) {\n\t\ttype = type || \"json\";\n\t\treturn this[type].serialize();\n\t};\n\n\t/*\n\ttasks and relations\n\t{\n\tdata:[\n\t\t{\n\t\t\t\"id\":\"string\",\n\t\t\t\"text\":\"...\",\n\t\t\t\"start_date\":\"Date or string\",\n\t\t\t\"end_date\":\"Date or string\",\n\t\t\t\"duration\":\"number\",\n\t\t\t\"progress\":\"0..1\",\n\t\t\t\"parent_id\":\"string\",\n\t\t\t\"order\":\"number\"\n\t\t},...],\n\tlinks:[\n\t\t{\n\t\t\tid:\"string\",\n\t\t\tsource:\"string\",\n\t\t\ttarget:\"string\",\n\t\t\ttype:\"string\"\n\t\t},...],\n\tcollections:{\n\t\t\tcollectionName:[\n\t\t\t\t{key:, label:, optional:...},...\n\t\t\t],...\n\t\t}\n\t}\n\n\t* */\n\n\tgantt.on_load = function (resp, type) {\n\t\tthis.callEvent(\"onBeforeParse\", []);\n\t\tif (!type)\n\t\t\ttype = \"json\";\n\t\tthis.assert(this[type], \"Invalid data type:'\" + type + \"'\");\n\n\t\tvar raw = resp.xmlDoc.responseText;\n\n\t\tvar data = this[type].parse(raw, resp);\n\t\tthis._process_loading(data);\n\t};\n\n\tgantt._process_loading = function (data) {\n\t\tif(data.collections)\n\t\t\tthis._load_collections(data.collections);\n\n\t\tthis.$data.tasksStore.parse(data.data);\n\t\tvar links = data.links || (data.collections ? data.collections.links : []);\n\t\tthis.$data.linksStore.parse(links);\n\n\t\t//this._sync_links();\n\t\tthis.callEvent(\"onParse\", []);\n\t\tthis.render();\n\t\tif(this.config.initial_scroll){\n\t\t\tvar firstTask = this.getTaskByIndex(0);\n\t\t\tvar id = firstTask ? firstTask.id : this.config.root_id;\n\t\t\tif(this.isTaskExists(id))\n\t\t\t\tthis.showTask(id);\n\t\t}\n\t};\n\n\n\tgantt._load_collections = function (collections) {\n\t\tvar collections_loaded = false;\n\t\tfor (var key in collections) {\n\t\t\tif (collections.hasOwnProperty(key)) {\n\t\t\t\tcollections_loaded = true;\n\t\t\t\tvar collection = collections[key];\n\t\t\t\tvar arr = this.serverList[key];\n\t\t\t\tif (!arr) continue;\n\t\t\t\tarr.splice(0, arr.length); //clear old options\n\t\t\t\tfor (var j = 0; j < collection.length; j++) {\n\t\t\t\t\tvar option = collection[j];\n\t\t\t\t\tvar obj = this.copy(option);\n\t\t\t\t\tobj.key = obj.value;// resulting option object\n\n\t\t\t\t\tfor (var option_key in option) {\n\t\t\t\t\t\tif (option.hasOwnProperty(option_key)) {\n\t\t\t\t\t\t\tif (option_key == \"value\" || option_key == \"label\")\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tobj[option_key] = option[option_key]; // obj['value'] = option['value']\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (collections_loaded)\n\t\t\tthis.callEvent(\"onOptionsLoad\", []);\n\t};\n\n\tgantt.attachEvent(\"onBeforeTaskDisplay\", function (id, task) {\n\t\treturn !task.$ignore;\n\t});\n\n\tgantt.json = {\n\t\tparse: function (data) {\n\t\t\tgantt.assert(data, \"Invalid data\");\n\n\t\t\tif (typeof data == \"string\") {\n\t\t\t\tif (window.JSON)\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\telse {\n\t\t\t\t\tgantt.assert(false, \"JSON is not supported\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.dhx_security)\n\t\t\t\tgantt.security_key = data.dhx_security;\n\t\t\treturn data;\n\t\t},\n\t\tserializeTask: function (task) {\n\t\t\treturn this._copyObject(task);\n\t\t},\n\t\tserializeLink: function (link) {\n\t\t\treturn this._copyLink(link);\n\t\t},\n\t\t_copyLink: function (obj) {\n\t\t\tvar copy = {};\n\t\t\tfor (var key in obj)\n\t\t\t\tcopy[key] = obj[key];\n\t\t\treturn copy;\n\t\t},\n\t\t_copyObject: function (obj) {\n\t\t\tvar copy = {};\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (key.charAt(0) == \"$\")\n\t\t\t\t\tcontinue;\n\t\t\t\tcopy[key] = obj[key];\n\n\t\t\t\tif (helpers.isDate(copy[key])) {\n\t\t\t\t\tcopy[key] = gantt.templates.xml_format(copy[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn copy;\n\t\t},\n\t\tserialize: function () {\n\t\t\tvar tasks = [];\n\t\t\tvar links = [];\n\n\t\t\tgantt.eachTask(function (obj) {\n\t\t\t\tgantt.resetProjectDates(obj);\n\t\t\t\ttasks.push(this.serializeTask(obj));\n\t\t\t}, gantt.config.root_id, this);\n\n\t\t\tvar rawLinks = gantt.getLinks();\n\t\t\tfor (var i = 0; i < rawLinks.length; i++) {\n\t\t\t\tlinks.push(this.serializeLink(rawLinks[i]));\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: tasks,\n\t\t\t\tlinks: links\n\t\t\t};\n\t\t}\n\t};\n\n\t/*\n\t<data>\n\t\t<task id:\"some\" parent_id=\"0\" progress=\"0.5\">\n\t\t\t<text>My task 1</text>\n\t\t\t<start_date>16.08.2013</start_date>\n\t\t\t<end_date>22.08.2013</end_date>\n\t\t</task>\n\t\t<coll_options>\n\t\t\t<links>\n\t\t\t\t<link source='a1' target='b2' type='c3' />\n\t\t\t</links>\n\t\t</coll_options>\n\t</data>\n\t*/\n\n\tgantt.xml = {\n\t\t_xmlNodeToJSON: function (node, attrs_only) {\n\t\t\tvar t = {};\n\t\t\tfor (var i = 0; i < node.attributes.length; i++)\n\t\t\t\tt[node.attributes[i].name] = node.attributes[i].value;\n\n\t\t\tif (!attrs_only) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; i++) {\n\t\t\t\t\tvar child = node.childNodes[i];\n\t\t\t\t\tif (child.nodeType == 1)\n\t\t\t\t\t\tt[child.tagName] = child.firstChild ? child.firstChild.nodeValue : \"\";\n\t\t\t\t}\n\n\t\t\t\tif (!t.text) t.text = node.firstChild ? node.firstChild.nodeValue : \"\";\n\t\t\t}\n\n\t\t\treturn t;\n\t\t},\n\t\t_getCollections: function (loader) {\n\t\t\tvar collection = {};\n\t\t\tvar opts = gantt.ajax.xpath(\"//coll_options\", loader);\n\t\t\tfor (var i = 0; i < opts.length; i++) {\n\t\t\t\tvar bind = opts[i].getAttribute(\"for\");\n\t\t\t\tvar arr = collection[bind] = [];\n\t\t\t\tvar itms = gantt.ajax.xpath(\".//item\", opts[i]);\n\t\t\t\tfor (var j = 0; j < itms.length; j++) {\n\t\t\t\t\tvar itm = itms[j];\n\t\t\t\t\tvar attrs = itm.attributes;\n\t\t\t\t\tvar obj = {key: itms[j].getAttribute(\"value\"), label: itms[j].getAttribute(\"label\")};\n\t\t\t\t\tfor (var k = 0; k < attrs.length; k++) {\n\t\t\t\t\t\tvar attr = attrs[k];\n\t\t\t\t\t\tif (attr.nodeName == \"value\" || attr.nodeName == \"label\")\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tobj[attr.nodeName] = attr.nodeValue;\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn collection;\n\t\t},\n\t\t_getXML: function (text, loader, toptag) {\n\t\t\ttoptag = toptag || \"data\";\n\t\t\tif (!loader.getXMLTopNode) {\n\t\t\t\tloader = gantt.ajax.parse(loader);\n\t\t\t}\n\n\t\t\tvar xml = gantt.ajax.xmltop(toptag, loader.xmlDoc);\n\t\t\tif (!xml || xml.tagName != toptag) throw \"Invalid XML data\";\n\n\t\t\tvar skey = xml.getAttribute(\"dhx_security\");\n\t\t\tif (skey)\n\t\t\t\tgantt.security_key = skey;\n\n\t\t\treturn xml;\n\t\t},\n\t\tparse: function (text, loader) {\n\t\t\tloader = this._getXML(text, loader);\n\t\t\tvar data = {};\n\n\t\t\tvar evs = data.data = [];\n\t\t\tvar xml = gantt.ajax.xpath(\"//task\", loader);\n\n\t\t\tfor (var i = 0; i < xml.length; i++)\n\t\t\t\tevs[i] = this._xmlNodeToJSON(xml[i]);\n\n\t\t\tdata.collections = this._getCollections(loader);\n\t\t\treturn data;\n\t\t},\n\t\t_copyLink: function (obj) {\n\t\t\treturn \"<item id='\" + obj.id + \"' source='\" + obj.source + \"' target='\" + obj.target + \"' type='\" + obj.type + \"' />\";\n\t\t},\n\t\t_copyObject: function (obj) {\n\t\t\treturn \"<task id='\" + obj.id + \"' parent='\" + (obj.parent || \"\") + \"' start_date='\" + obj.start_date + \"' duration='\" + obj.duration + \"' open='\" + (!!obj.open) + \"' progress='\" + obj.progress + \"' end_date='\" + obj.end_date + \"'><![CDATA[\" + obj.text + \"]]></task>\";\n\t\t},\n\t\tserialize: function () {\n\t\t\tvar tasks = [];\n\t\t\tvar links = [];\n\n\t\t\tvar json = gantt.json.serialize();\n\t\t\tfor (var i = 0, len = json.data.length; i < len; i++) {\n\t\t\t\ttasks.push(this._copyObject(json.data[i]));\n\t\t\t}\n\t\t\tfor (var i = 0, len = json.links.length; i < len; i++) {\n\t\t\t\tlinks.push(this._copyLink(json.links[i]));\n\t\t\t}\n\t\t\treturn \"<data>\" + tasks.join(\"\") + \"<coll_options for='links'>\" + links.join(\"\") + \"</coll_options></data>\";\n\t\t}\n\t};\n\n\n\tgantt.oldxml = {\n\t\tparse: function (text, loader) {\n\t\t\tloader = gantt.xml._getXML(text, loader, \"projects\");\n\t\t\tvar data = {collections: {links: []}};\n\n\t\t\tvar evs = data.data = [];\n\t\t\tvar xml = gantt.ajax.xpath(\"//task\", loader);\n\n\t\t\tfor (var i = 0; i < xml.length; i++) {\n\t\t\t\tevs[i] = gantt.xml._xmlNodeToJSON(xml[i]);\n\t\t\t\tvar parent = xml[i].parentNode;\n\n\t\t\t\tif (parent.tagName == \"project\")\n\t\t\t\t\tevs[i].parent = \"project-\" + parent.getAttribute(\"id\");\n\t\t\t\telse\n\t\t\t\t\tevs[i].parent = parent.parentNode.getAttribute(\"id\");\n\t\t\t}\n\n\t\t\txml = gantt.ajax.xpath(\"//project\", loader);\n\t\t\tfor (var i = 0; i < xml.length; i++) {\n\t\t\t\tvar ev = gantt.xml._xmlNodeToJSON(xml[i], true);\n\t\t\t\tev.id = \"project-\" + ev.id;\n\t\t\t\tevs.push(ev);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < evs.length; i++) {\n\t\t\t\tvar ev = evs[i];\n\t\t\t\tev.start_date = ev.startdate || ev.est;\n\t\t\t\tev.end_date = ev.enddate;\n\t\t\t\tev.text = ev.name;\n\t\t\t\tev.duration = ev.duration / 8;\n\t\t\t\tev.open = 1;\n\t\t\t\tif (!ev.duration && !ev.end_date) ev.duration = 1;\n\t\t\t\tif (ev.predecessortasks)\n\t\t\t\t\tdata.collections.links.push({\n\t\t\t\t\t\ttarget: ev.id,\n\t\t\t\t\t\tsource: ev.predecessortasks,\n\t\t\t\t\t\ttype: gantt.config.links.finish_to_start\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\tserialize: function () {\n\t\t\tgantt.message(\"Serialization to 'old XML' is not implemented\");\n\t\t}\n\t};\n\n\tgantt.serverList = function (name, array) {\n\t\tif (array) {\n\t\t\tthis.serverList[name] = array.slice(0);\n\t\t} else if (!this.serverList[name]) {\n\t\t\tthis.serverList[name] = [];\n\t\t}\n\t\treturn this.serverList[name];\n\t};\n\n};","module.exports = function(gantt) {\n\tgantt.isReadonly = function (item) {\n\t\tif (item && item[this.config.editable_property]) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn (item && item[this.config.readonly_property]) || this.config.readonly;\n\t\t}\n\t};\n};","module.exports = function(gantt){\n\t// TODO: why eslint fails on regexp?\n\t// eslint-disable-next-line no-control-regex\n\tvar htmlTags = new RegExp(\"<(?:.|\\n)*?>\", \"gm\");\n\tvar extraSpaces = new RegExp(\" +\", \"gm\");\n\n\tfunction stripHTMLLite(htmlText){\n\t\treturn (htmlText + \"\")\n\t\t\t.replace(htmlTags, \" \").\n\t\t\treplace(extraSpaces, \" \");\n\t}\n\n\tvar singleQuotes = new RegExp(\"'\", \"gm\");\n\tfunction escapeQuotes(text){\n\t\treturn (text + \"\").replace(singleQuotes, \"&#39;\");\n\t}\n\n\tgantt._waiAria = {\n\t\tgetAttributeString: function(attr){\n\t\t\tvar attributes = [\" \"];\n\t\t\tfor(var i in attr){\n\t\t\t\tvar text = escapeQuotes(stripHTMLLite(attr[i]));\n\t\t\t\tattributes.push(i + \"='\" + text + \"'\");\n\t\t\t}\n\t\t\tattributes.push(\" \");\n\t\t\treturn attributes.join(\" \");\n\n\t\t},\n\n\t\tgetTimelineCellAttr:function(dateString){\n\n\t\t\treturn gantt._waiAria.getAttributeString({\"aria-label\": dateString});\n\t\t},\n\n\n\t\t_taskCommonAttr: function(task, div){\n\n\t\t\tif(!(task.start_date && task.end_date))\n\t\t\t\treturn;\n\n\t\t\tdiv.setAttribute(\"aria-label\", stripHTMLLite(gantt.templates.tooltip_text(task.start_date, task.end_date, task)));\n\n\t\t\tif(gantt.isReadonly(task)){\n\t\t\t\tdiv.setAttribute(\"aria-readonly\", true);\n\n\n\t\t\t}\n\n\t\t\tif(task.$dataprocessor_class){\n\t\t\t\tdiv.setAttribute(\"aria-busy\", true);\n\t\t\t}\n\n\n\t\t\tdiv.setAttribute(\"aria-selected\",\n\t\t\t\t(gantt.getState().selected_task == task.id || (gantt.isSelectedTask && gantt.isSelectedTask(task.id))) ? \"true\" : \"false\");\n\t\t},\n\n\t\tsetTaskBarAttr: function(task, div){\n\t\t\tthis._taskCommonAttr(task, div);\n\n\t\t\tif(!gantt.isReadonly(task) && gantt.config.drag_move){\n\t\t\t\tif(task.id != gantt.getState().drag_id){\n\t\t\t\t\tdiv.setAttribute(\"aria-grabbed\", false);\n\t\t\t\t}else{\n\t\t\t\t\tdiv.setAttribute(\"aria-grabbed\", true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttaskRowAttr: function(task, div){\n\n\t\t\tthis._taskCommonAttr(task, div);\n\n\t\t\tif(!gantt.isReadonly(task) && gantt.config.order_branch){\n\t\t\t\tdiv.setAttribute(\"aria-grabbed\", false);\n\t\t\t}\n\n\t\t\tdiv.setAttribute(\"role\", \"row\");\n\n\t\t\tdiv.setAttribute(\"aria-level\", task.$level);\n\n\t\t\tif(gantt.hasChild(task.id)){\n\t\t\t\tdiv.setAttribute(\"aria-expanded\", task.$open ? \"true\" : \"false\");\n\t\t\t}\n\t\t},\n\n\t\tlinkAttr: function(link, div){\n\n\t\t\tvar linkTypes = gantt.config.links;\n\n\t\t\tvar toStart = link.type == linkTypes.finish_to_start || link.type == linkTypes.start_to_start;\n\t\t\tvar fromStart = link.type == linkTypes.start_to_start || link.type == linkTypes.start_to_finish;\n\n\t\t\tvar content = gantt.locale.labels.link + \" \" +  gantt.templates.drag_link(link.source, fromStart, link.target, toStart);\n\n\t\t\tdiv.setAttribute(\"aria-label\", stripHTMLLite(content));\n\t\t\tif(gantt.isReadonly(link)){\n\t\t\t\tdiv.setAttribute(\"aria-readonly\", true);\n\t\t\t}\n\t\t},\n\n\t\tgridSeparatorAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"separator\");\n\t\t},\n\n\t\tlightboxHiddenAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"true\");\n\t\t},\n\n\t\tlightboxVisibleAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"false\");\n\t\t},\n\n\t\tlightboxAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"dialog\");\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"true\");\n\t\t\tdiv.firstChild.setAttribute(\"role\", \"heading\");\n\t\t},\n\n\t\tlightboxButtonAttrString:function(buttonName){\n\t\t\treturn this.getAttributeString({\"role\":\"button\", \"aria-label\":gantt.locale.labels[buttonName], \"tabindex\":\"0\"});\n\t\t},\n\n\t\tlightboxHeader: function(div, headerText){\n\t\t\tdiv.setAttribute(\"aria-label\", headerText);\n\t\t},\n\n\t\tlightboxSelectAttrString: function(time_option){\n\t\t\tvar label = \"\";\n\n\t\t\tswitch (time_option) {\n\t\t\t\tcase \"%Y\":\n\t\t\t\t\tlabel = gantt.locale.labels.years;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%m\":\n\t\t\t\t\tlabel = gantt.locale.labels.months;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%d\":\n\t\t\t\t\tlabel = gantt.locale.labels.days;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%H:%i\":\n\t\t\t\t\tlabel = gantt.locale.labels.hours + gantt.locale.labels.minutes;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn gantt._waiAria.getAttributeString({\"aria-label\": label});\n\t\t},\n\n\t\tlightboxDurationInputAttrString: function(section){\n\t\t\treturn this.getAttributeString({\"aria-label\": gantt.locale.labels.column_duration, \"aria-valuemin\": \"0\"});\n\t\t},\n\n\t\tgridAttrString: function(){\n\t\t\treturn [\" role='treegrid'\", gantt.config.multiselect ? \"aria-multiselectable='true'\" : \"aria-multiselectable='false'\", \" \"].join(\" \");\n\t\t},\n\n\n\t\tgridScaleRowAttrString: function(){\n\t\t\treturn \"role='row'\";\n\t\t},\n\n\t\tgridScaleCellAttrString: function(column, label){\n\t\t\tvar attrs = \"\";\n\t\t\tif(column.name == \"add\"){\n\t\t\t\tattrs = this.getAttributeString({\"role\":\"button\", \"aria-label\": gantt.locale.labels.new_task});\n\t\t\t}else{\n\n\t\t\t\tvar attributes = {\n\t\t\t\t\t\"role\":\"columnheader\",\n\t\t\t\t\t\"aria-label\": label\n\t\t\t\t};\n\n\t\t\t\tif(gantt._sort && gantt._sort.name == column.name){\n\t\t\t\t\tif(gantt._sort.direction == \"asc\"){\n\t\t\t\t\t\tattributes[\"aria-sort\"] = \"ascending\";\n\t\t\t\t\t}else{\n\t\t\t\t\t\tattributes[\"aria-sort\"] = \"descending\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tattrs = this.getAttributeString(attributes);\n\t\t\t}\n\t\t\treturn attrs;\n\t\t},\n\n\t\tgridDataAttrString: function(){\n\t\t\treturn \"role='rowgroup'\";\n\t\t},\n\n\t\tgridCellAttrString: function(column, textValue){\n\t\t\treturn this.getAttributeString({\"role\":\"gridcell\", \"aria-label\": textValue});\n\t\t},\n\n\t\tgridAddButtonAttrString: function(column){\n\t\t\treturn this.getAttributeString({\"role\":\"button\", \"aria-label\": gantt.locale.labels.new_task});\n\t\t},\n\n\t\tmessageButtonAttrString: function(buttonLabel){\n\t\t\treturn \"tabindex='0' role='button' aria-label='\"+buttonLabel+\"'\";\n\t\t},\n\n\t\tmessageInfoAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"alert\");\n\t\t\t//div.setAttribute(\"tabindex\", \"-1\");\n\t\t},\n\n\t\tmessageModalAttr: function(div, uid){\n\t\t\tdiv.setAttribute(\"role\", \"dialog\");\n\t\t\tif(uid){\n\t\t\t\tdiv.setAttribute(\"aria-labelledby\", uid);\n\t\t\t}\n\n\t\t//\tdiv.setAttribute(\"tabindex\", \"-1\");\n\t\t},\n\n\t\tquickInfoAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"dialog\");\n\t\t},\n\n\t\tquickInfoHeaderAttrString: function(){\n\t\t\treturn \" role='heading' \";\n\t\t},\n\n\t\tquickInfoHeader: function(div, header){\n\t\t\tdiv.setAttribute(\"aria-label\", header);\n\t\t},\n\n\t\tquickInfoButtonAttrString: function(label){\n\t\t\treturn gantt._waiAria.getAttributeString({\"role\":\"button\", \"aria-label\":label, \"tabindex\":\"0\"});\n\t\t},\n\n\t\ttooltipAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"tooltip\");\n\t\t},\n\n\t\ttooltipVisibleAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"false\");\n\t\t},\n\n\t\ttooltipHiddenAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"true\");\n\t\t}\n\t};\n\n\tfunction isDisabled(){\n\t\treturn !gantt.config.wai_aria_attributes;\n\t}\n\n\tfor(var i in gantt._waiAria){\n\t\tgantt._waiAria[i] = (function(payload){\n\t\t\treturn function(){\n\t\t\t\tif(isDisabled()){\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\treturn payload.apply(this, arguments);\n\t\t\t};\n\t\t})(gantt._waiAria[i]);\n\t}\n\n\n};","module.exports = function(gantt) {\n\tgantt.getGridColumn = function(name) {\n\t\tvar columns = gantt.config.columns;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tif (columns[i].name == name)\n\t\t\t\treturn columns[i];\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tgantt.getGridColumns = function() {\n\t\treturn gantt.config.columns.slice();\n\t};\n};","module.exports = function(gantt) {\n};","module.exports = function(gantt) {\n\tfunction isEnabled() {\n\t\treturn gantt.config.auto_types && // if enabled\n\t\t\t(gantt.getTaskType(gantt.config.types.project) == gantt.config.types.project);// and supported\n\t}\n\n\tfunction callIfEnabled(callback) {\n\t\treturn function() {\n\t\t\tif (!isEnabled()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn callback.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction updateParents(childId) {\n\t\tgantt.batchUpdate(function() {\n\t\t\tcheckParent(childId);\n\t\t});\n\t}\n\n\tvar delTaskParent;\n\n\tfunction checkParent(id) {\n\t\tsetTaskType(id);\n\t\tvar parent = gantt.getParent(id);\n\n\t\tif (parent != gantt.config.root_id) {\n\t\t\tcheckParent(parent);\n\t\t}\n\t}\n\n\tfunction setTaskType(id) {\n\t\tid = id.id || id;\n\t\tvar task = gantt.getTask(id);\n\t\tvar targetType = getTaskTypeToUpdate(task);\n\n\t\tif (targetType !== false) {\n\t\t\tupdateTaskType(task, targetType);\n\t\t}\n\t}\n\n\tfunction updateTaskType(task, targetType) {\n\t\ttask.type = targetType;\n\t\tgantt.updateTask(task.id);\n\t}\n\n\tfunction getTaskTypeToUpdate(task) {\n\t\tvar allTypes = gantt.config.types;\n\t\tvar hasChildren = gantt.hasChild(task.id);\n\t\tvar taskType = gantt.getTaskType(task.type);\n\n\t\tif (hasChildren && taskType === allTypes.task) {\n\t\t\treturn allTypes.project;\n\t\t}\n\n\t\tif (!hasChildren && taskType === allTypes.project) {\n\t\t\treturn allTypes.task;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tvar isParsingDone = true;\n\n\tgantt.attachEvent(\"onParse\", callIfEnabled(function() {\n\t\tisParsingDone = false;\n\n\t\tgantt.batchUpdate(function() {\n\t\t\tgantt.eachTask(function(task) {\n\t\t\t\tvar targetType = getTaskTypeToUpdate(task);\n\t\t\t\tif (targetType !== false) {\n\t\t\t\t\tupdateTaskType(task, targetType);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tisParsingDone = true;\n\t}));\n\n\tgantt.attachEvent(\"onAfterTaskAdd\",  function() {\n\t\tif (isParsingDone)\n\t\t\tcallIfEnabled(updateParents);\n\t});\n\n\tgantt.attachEvent(\"onAfterTaskUpdate\", function() {\n\t\tif (isParsingDone)\n\t\t\tcallIfEnabled(updateParents);\n\t});\n\n\n\tfunction updateAfterRemoveChild(id){\n\t\tif (id != gantt.config.root_id && gantt.isTaskExists(id)) {\n\t\t\tupdateParents(id);\n\t\t}\n\t}\n\n\tgantt.attachEvent(\"onBeforeTaskDelete\",  callIfEnabled(function(id, task) {\n\t\tdelTaskParent = gantt.getParent(id);\n\t\treturn true;\n\t}));\n\n\tgantt.attachEvent(\"onAfterTaskDelete\", callIfEnabled(function(id, task) {\n\t\tupdateAfterRemoveChild(delTaskParent);\n\t}));\n\n\n\tvar originalRowDndParent;\n\n\tgantt.attachEvent(\"onRowDragStart\", callIfEnabled(function(id, target, e) {\n\t\toriginalRowDndParent = gantt.getParent(id);\n\t\treturn true;\n\t}));\n\n\tgantt.attachEvent(\"onRowDragEnd\", callIfEnabled(function(id, target) {\n\t\tupdateAfterRemoveChild(originalRowDndParent);\n\t\tupdateParents(id);\n\t}));\n\n\tvar originalMoveTaskParent;\n\n\tgantt.attachEvent(\"onBeforeTaskMove\", callIfEnabled(function(sid, parent, tindex) {\n\t\toriginalMoveTaskParent = gantt.getParent(sid);\n\t\treturn true;\n\t}));\n\n\tgantt.attachEvent(\"onAfterTaskMove\", callIfEnabled(function(id, parent, tindex) {\n\t\tif (document.querySelector(\".gantt_drag_marker\")) {\n\t\t\t// vertical dnd in progress\n\t\t\treturn;\n\t\t}\n\t\tupdateAfterRemoveChild(originalMoveTaskParent);\n\t\tupdateParents(id);\n\t}));\n};","module.exports = function addPlaceholder(gantt){\n\tfunction isEnabled(){\n\t\treturn gantt.config.placeholder_task;\n\t}\n\n\tfunction callIfEnabled(callback){\n\t\treturn function(){\n\t\t\tif(!isEnabled()){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn callback.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction silenceDataProcessor(dataProcessor){\n\t\tif(dataProcessor && !dataProcessor._silencedPlaceholder){\n\t\t\tdataProcessor._silencedPlaceholder = true;\n\t\t\tdataProcessor.attachEvent(\"onBeforeUpdate\", callIfEnabled(function(id, state, data){\n\t\t\t\tif(data.type == gantt.config.types.placeholder){\n\t\t\t\t\tdataProcessor.setUpdated(id, false);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}));\n\t\t}\n\t}\n\n\tfunction insertPlaceholder(){\n\t\tvar placeholders = gantt.getTaskBy(\"type\", gantt.config.types.placeholder);\n\t\tif(!placeholders.length || !gantt.isTaskExists(placeholders[0].id)){\n\t\t\tvar placeholder = {\n\t\t\t\tunscheduled: true,\n\t\t\t\ttype: gantt.config.types.placeholder,\n\t\t\t\tduration:0,\n\t\t\t\ttext: gantt.locale.labels.new_task\n\t\t\t};\n\t\t\tif(gantt.callEvent(\"onTaskCreated\", [placeholder]) === false){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgantt.addTask(placeholder);\n\t\t\t\n\t\t}\n\t}\n\n\tfunction afterEdit(id){\n\t\tvar item = gantt.getTask(id);\n\t\tif(item.type == gantt.config.types.placeholder) {\n\t\t\tif(item.start_date && item.end_date && item.unscheduled){\n\t\t\t\titem.unscheduled = false;\n\t\t\t}\n\n\t\t\tgantt.batchUpdate(function(){\n\t\t\t\tvar newTask = gantt.copy(item);\n\t\t\t\tgantt.silent(function(){\n\t\t\t\t\tgantt.deleteTask(item.id);\n\t\t\t\t});\n\n\t\t\t\tdelete newTask[\"!nativeeditor_status\"];\n\t\t\t\tnewTask.type = gantt.config.types.task;\n\t\t\t\tnewTask.id = gantt.uid();\n\t\t\t\tgantt.addTask(newTask);\n\n\t\t\t\t//insertPlaceholder();\n\t\t\t});\n\n\t\t}\n\t}\n\n\tgantt.config.types.placeholder = \"placeholder\";\n\tgantt.attachEvent(\"onDataProcessorReady\", callIfEnabled(silenceDataProcessor));\n\n\tvar ready = false;\n\tgantt.attachEvent(\"onGanttReady\", function(){\n\t\tif(ready){\n\t\t\treturn;\n\t\t}\n\t\tready = true;\n\t\tgantt.attachEvent(\"onAfterTaskUpdate\", callIfEnabled(afterEdit));\n\t\tgantt.attachEvent(\"onAfterTaskAdd\", callIfEnabled(function(id, task){\n\t\t\tif(task.type != gantt.config.types.placeholder){\n\t\t\t\tvar placeholders = gantt.getTaskBy(\"type\", gantt.config.types.placeholder);\n\t\t\t\tplaceholders.forEach(function(p){\n\t\t\t\t\tgantt.silent(function(){\n\t\t\t\t\t\tif(gantt.isTaskExists(p.id))\n\t\t\t\t\t\t\tgantt.deleteTask(p.id);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tinsertPlaceholder();\n\t\t\t}\n\t\t}));\n\t\tgantt.attachEvent(\"onParse\", callIfEnabled(insertPlaceholder));\n\t});\n\n\tgantt.attachEvent(\"onBeforeUndoStack\", function(action){\n\t\tfor(var i = 0; i < action.commands.length; i++){\n\t\t\tvar command = action.commands[i];\n\t\t\tif(command.entity === \"task\" && command.value.type === gantt.config.types.placeholder){\n\t\t\t\taction.commands.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t});\n\n};","var helpers = require(\"../../utils/helpers\");\n\nfunction createResourceMethods(gantt){\n\n\tvar resourceTaskCache = {};\n\n\tgantt.$data.tasksStore.attachEvent(\"onStoreUpdated\", function(){\n\t\tresourceTaskCache = {};\n\t});\n\n\tfunction getTaskBy(propertyName, propertyValue) {\n\t\tif (typeof propertyName == \"function\") {\n\t\t\treturn filterResourceTasks(propertyName);\n\t\t} else {\n\t\t\tif (helpers.isArray(propertyValue)) {\n\t\t\t\treturn getResourceTasks(propertyName, propertyValue);\n\t\t\t} else {\n\t\t\t\treturn getResourceTasks(propertyName, [propertyValue]);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction filterResourceTasks(filter) {\n\t\tvar res = [];\n\t\tgantt.eachTask(function (task) {\n\t\t\tif (filter(task)) {\n\t\t\t\tres.push(task);\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t}\n\n\tfunction getResourceTasks(property, resourceIds) {\n\t\tvar res;\n\n\t\tvar cacheKey = resourceIds.join(\"_\") + \"_\" + property;\n\n\t\tvar resourceHash = {};\n\t\tfor (var i = 0; i < resourceIds.length; i++) {\n\t\t\tresourceHash[resourceIds[i]] = true;\n\t\t}\n\n\t\tif (!resourceTaskCache[cacheKey]) {\n\t\t\tres = resourceTaskCache[cacheKey] = [];\n\t\t\tgantt.eachTask(function (task) {\n\t\t\t\tif (task.type == gantt.config.types.project)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar resourceValue;\n\t\t\t\tif (!helpers.isArray(task[property])) {\n\t\t\t\t\tresourceValue = [task[property]];\n\t\t\t\t} else {\n\t\t\t\t\tresourceValue = task[property];\n\t\t\t\t}\n\n\t\t\t\thelpers.forEach(resourceValue, function(value) {\n\t\t\t\t\tif(value && (resourceHash[value]  || resourceHash[value.resource_id])) {\n\t\t\t\t\t\tres.push(task);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tres = resourceTaskCache[cacheKey];\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tfunction getResourceLoad(resource, resourceProperty, scale, timeline){\n\t\tvar cacheKey = resource.id + \"_\" + resourceProperty  + \"_\" + scale.unit + \"_\" + scale.step;\n\t\tvar res;\n\t\tif (!resourceTaskCache[cacheKey]) {\n\t\t\tres = resourceTaskCache[cacheKey] = calculateResourceLoad(resource, resourceProperty, scale, timeline);\n\n\t\t} else {\n\t\t\tres = resourceTaskCache[cacheKey];\n\t\t}\n\t\treturn res;\n\t}\n\n\tfunction calculateResourceLoad(resource, resourceProperty, scale, timeline) {\n\n\t\tvar tasks;\n\t\tif(resource.$role == \"task\"){\n\t\t\ttasks = [];\n\t\t}else{\n\t\t\ttasks = getTaskBy(resourceProperty, resource.id);\n\t\t}\n\t\tvar step = scale.unit;\n\t\tvar timegrid = {};\n\n\t\tfor (var i = 0; i < tasks.length; i++) {\n\t\t\tvar task = tasks[i];\n\n\t\t\tvar currDate = gantt.date[step + \"_start\"](new Date(task.start_date));\n\n\t\t\twhile (currDate < task.end_date) {\n\n\t\t\t\tvar date = currDate;\n\t\t\t\tcurrDate = gantt.date.add(currDate, 1, step);\n\n\t\t\t\tif (!gantt.isWorkTime({date: date, task: task, unit: step})) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar timestamp = date.valueOf();\n\t\t\t\tif (!timegrid[timestamp]){\n\t\t\t\t\ttimegrid[timestamp] = [];\n\t\t\t\t}\n\n\t\t\t\ttimegrid[timestamp].push(task);\n\t\t\t}\n\t\t}\n\n\t\tvar timetable = [];\n\t\tvar start, end, tasks;\n\t\tvar config = timeline.$getConfig();\n\n\t\tfor(var i = 0; i < scale.trace_x.length; i++){\n\t\t\tstart = new Date(scale.trace_x[i]);\n\t\t\tend = gantt.date.add(start, 1, step);\n\t\t\ttasks = timegrid[start.valueOf()] || [];\n\t\t\tif(tasks.length || config.resource_render_empty_cells){\n\t\t\t\ttimetable.push({\n\t\t\t\t\tstart_date: start,\n\t\t\t\t\tend_date: end,\n\t\t\t\t\ttasks: tasks\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t\treturn timetable;\n\t}\n\n\tfunction renderResourceLine(resource, timeline) {\n\t\tvar config = timeline.$getConfig(),\n\t\t\ttemplates = timeline.$getTemplates();\n\t\tvar timetable = getResourceLoad(resource, config.resource_property, timeline.getScale(), timeline);\n\n\t\tvar cells = [];\n\t\tfor (var i = 0; i < timetable.length; i++) {\n\n\t\t\tvar day = timetable[i];\n\n\t\t\tvar css = templates.resource_cell_class(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar content = templates.resource_cell_value(day.start_date, day.end_date, resource, day.tasks);\n\n\t\t\tif (css || content){\n\t\t\t\tvar sizes = timeline.getItemPosition(resource, day.start_date, day.end_date);\n\t\t\t\tvar el = document.createElement('div');\n\t\t\t\tel.className = [\"gantt_resource_marker\", css].join(\" \");\n\n\t\t\t\tel.style.cssText = [\n\t\t\t\t\t'left:' + sizes.left + 'px',\n\t\t\t\t\t'width:' + sizes.width + 'px',\n\t\t\t\t\t'height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'line-height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'top:' + sizes.top + 'px'\n\t\t\t\t].join(\";\");\n\n\t\t\t\tif(content)\n\t\t\t\t\tel.innerHTML = content;\n\n\t\t\t\tcells.push(el);\n\t\t\t}\n\n\t\t}\n\n\t\tvar row = null;\n\t\tif(cells.length){\n\t\t\trow = document.createElement(\"div\");\n\t\t\tfor(var i = 0; i < cells.length; i++){\n\t\t\t\trow.appendChild(cells[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn row;\n\t}\n\n\n\tfunction renderBar(level, start, end, timeline){\n\t\tvar top = (1 - (level*1||0))*100;\n\t\tvar left = timeline.posFromDate(start);\n\t\tvar right = timeline.posFromDate(end);\n\t\tvar element = document.createElement(\"div\");\n\t\telement.className = \"gantt_histogram_hor_bar\";\n\t\telement.style.top = top + '%';\n\t\telement.style.left = left + \"px\";\n\t\telement.style.width = (right - left + 1) + \"px\";\n\t\treturn element;\n\t}\n\tfunction renderConnection(prevLevel, nextLevel, left){\n\t\tif(prevLevel === nextLevel){\n\t\t\treturn null;\n\t\t}\n\n\t\tvar top = 1 - Math.max(prevLevel, nextLevel);\n\t\tvar height = Math.abs(prevLevel - nextLevel);\n\t\tvar element = document.createElement(\"div\");\n\t\telement.className = \"gantt_histogram_vert_bar\";\n\t\telement.style.top = top*100 + \"%\";\n\t\telement.style.height = height*100 + \"%\";\n\t\telement.style.left = left + \"px\";\n\n\t\treturn element;\n\t}\n\n\tfunction renderHistogramLine(capacity, timeline, maxCapacity){\n\t\tvar scale = timeline.getScale();\n\n\t\tvar el = document.createElement(\"div\");\n\n\t\tfor(var i = 0; i < scale.trace_x.length; i++){\n\t\t\tvar colStart = scale.trace_x[i];\n\t\t\tvar colEnd = scale.trace_x[i + 1] || gantt.date.add(colStart, scale.step, scale.unit);\n\t\t\tvar col = scale.trace_x[i].valueOf();\n\t\t\tvar level = Math.min(capacity[col]/maxCapacity, 1) || 0;\n\t\t\tif(level < 0){\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar nextLevel = Math.min(capacity[colEnd.valueOf()]/maxCapacity, 1) || 0;\n\n\n\t\t\tvar bar = renderBar(level, colStart, colEnd, timeline);\n\t\t\tif(bar){\n\t\t\t\tel.appendChild(bar);\n\t\t\t}\n\t\t\tvar connection = renderConnection(level, nextLevel, timeline.posFromDate(colEnd));\n\t\t\tif(connection){\n\t\t\t\tel.appendChild(connection);\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn el;\n\t}\n\n\tfunction renderResourceHistogram(resource, timeline) {\n\t\tvar config = timeline.$getConfig(),\n\t\t\ttemplates = timeline.$getTemplates();\n\t\tvar timetable = getResourceLoad(resource, config.resource_property, timeline.getScale(), timeline);\n\n\t\tvar cells = [];\n\t\tvar capacityMatrix = {};\n\t\tvar maxCapacity = resource.capacity || timeline.$config.capacity || 24;\n\t\tfor (var i = 0; i < timetable.length; i++) {\n\n\t\t\tvar day = timetable[i];\n\n\t\t\tvar css = templates.histogram_cell_class(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar content = templates.histogram_cell_label(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar fill = templates.histogram_cell_allocated(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar capacity = templates.histogram_cell_capacity(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tcapacityMatrix[day.start_date.valueOf()] = capacity || 0;\n\t\t\tif(css || content){\n\t\t\t\tvar sizes = timeline.getItemPosition(resource, day.start_date, day.end_date);\n\t\t\t\tvar el = document.createElement('div');\n\t\t\t\tel.className = [\"gantt_histogram_cell\", css].join(\" \");\n\n\t\t\t\tel.style.cssText = [\n\t\t\t\t\t'left:' + sizes.left + 'px',\n\t\t\t\t\t'width:' + sizes.width + 'px',\n\t\t\t\t\t'height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'line-height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'top:' + (sizes.top + 1) + 'px'\n\t\t\t\t].join(\";\");\n\n\n\t\t\t\tif (content) {\n\t\t\t\t\tcontent = \"<div class='gantt_histogram_label'>\" + content +\"</div>\";\n\t\t\t\t}\n\n\t\t\t\tif (fill) {\n\n\t\t\t\t\tcontent = \"<div class='gantt_histogram_fill' style='height:\"+(Math.min(fill/maxCapacity||0, 1)*100)+\"%;'></div>\" + content;\n\t\t\t\t}\n\n\t\t\t\tif (content)\n\t\t\t\t\tel.innerHTML = content;\n\n\t\t\t\tcells.push(el);\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar row = null;\n\t\tif (cells.length) {\n\t\t\trow = document.createElement(\"div\");\n\t\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\t\trow.appendChild(cells[i]);\n\t\t\t}\n\n\t\t\tvar capacityElement = renderHistogramLine(capacityMatrix, timeline, maxCapacity);\n\n\t\t\tif (capacityElement) {\n\t\t\t\tcapacityElement.setAttribute(\"data-resource-id\", resource.id);\n\t\t\t\tcapacityElement.style.position = \"absolute\";\n\t\t\t\tcapacityElement.style.top = (sizes.top + 1) + \"px\";\n\t\t\t\tcapacityElement.style.height = (config.row_height - 1) + \"px\";\n\t\t\t\tcapacityElement.style.left = 0;\n\t\t\t\trow.appendChild(capacityElement);\n\t\t\t}\n\t\t}\n\n\t\treturn row;\n\t}\n\n\tfunction selectAssignments(resourceId, taskId, result){\n\t\tvar property = gantt.config.resource_property;\n\t\tvar owners = [];\n\t\tif (gantt.getDatastore(\"task\").exists(taskId)) {\n\t\t\tvar task = gantt.getTask(taskId);\n\t\t\towners = task[property] || [];\n\t\t}\n\n\t\tif (!Array.isArray(owners)) {\n\t\t\towners = [owners];\n\t\t}\n\t\tfor (var i = 0; i < owners.length; i++) {\n\t\t\tif (owners[i].resource_id == resourceId) {\n\t\t\t\tresult.push({task_id: task.id, resource_id:owners[i].resource_id, value:owners[i].value});\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getResourceAssignments(resourceId, taskId){\n\t\t// resource assignment as an independent module:\n\t\t// {taskId:, resourceId, value}\n\t\t// TODO: probably should add a separate datastore for these\n\t\tvar assignments = [];\n\t\tvar property = gantt.config.resource_property;\n\t\tif(taskId !== undefined){\n\t\t\tselectAssignments(resourceId, taskId, assignments);\n\t\t}else{\n\t\t\tvar tasks = gantt.getTaskBy(property, resourceId);\n\t\t\ttasks.forEach(function(task){\n\t\t\t\tselectAssignments(resourceId, task.id, assignments);\n\t\t\t});\n\t\t}\n\t\treturn assignments;\n\t}\n\n\treturn {\n\t\trenderLine: renderResourceLine,\n\t\trenderHistogram: renderResourceHistogram,\n\t\tfilterTasks: getTaskBy,\n\t\tgetResourceAssignments: getResourceAssignments\n\t};\n}\n\nmodule.exports = function(gantt){\n\tvar methods = createResourceMethods(gantt);\n\n\tgantt.getTaskBy = methods.filterTasks;\n\tgantt.getResourceAssignments = methods.getResourceAssignments;\n\tgantt.$ui.layers.resourceRow = methods.renderLine;\n\tgantt.$ui.layers.resourceHistogram = methods.renderHistogram;\n\tgantt.config.resource_property = \"owner_id\";\n\tgantt.config.resource_store = \"resource\";\n\tgantt.config.resource_render_empty_cells = false;\n\n\t/**\n\t * these are placeholder functions that should be redefined by the user\n\t*/\n\tgantt.templates.histogram_cell_class = function(start_date, end_date, resource, tasks) {};\n\tgantt.templates.histogram_cell_label = function(start_date, end_date, resource, tasks) {\n\t\treturn tasks.length + \"/3\";\n\t};\n\tgantt.templates.histogram_cell_allocated = function(start_date, end_date, resource, tasks) {\n\t\treturn tasks.length / 3;\n\t};\n\tgantt.templates.histogram_cell_capacity = function(start_date, end_date, resource, tasks) {\n\t\treturn 0;\n\t};\n\n\n\n\tgantt.templates.resource_cell_class = function(start, end, resource, tasks) {\n\t\tvar css = \"\";\n\t\tif (tasks.length <= 1) {\n\t\t\tcss = \"gantt_resource_marker_ok\";\n\t\t} else {\n\t\t\tcss = \"gantt_resource_marker_overtime\";\n\t\t}\n\t\treturn css;\n\t};\n\n\tgantt.templates.resource_cell_value = function(start, end, resource, tasks) {\n\t\treturn tasks.length * 8;\n\t};\n};\n\n\n","if (window.dhtmlx){\n\n\tif (!window.dhtmlx.attaches)\n\twindow.dhtmlx.attaches = {};\n\n\twindow.dhtmlx.attaches.attachGantt=function(start, end, gantt){\n\t\tvar obj = document.createElement(\"DIV\");\n\n\t\tgantt = gantt || window.gantt;\n\n\t\tobj.id = \"gantt_\"+ gantt.uid();\n\t\tobj.style.width = \"100%\";\n\t\tobj.style.height = \"100%\";\n\t\tobj.cmp = \"grid\";\n\n\t\tdocument.body.appendChild(obj);\n\t\tthis.attachObject(obj.id);\n\t\tthis.dataType = \"gantt\";\n\t\tthis.dataObj = gantt;\n\n\t\tvar that = this.vs[this.av];\n\t\tthat.grid = gantt;\n\n\t\tgantt.init(obj.id, start, end);\n\t\tobj.firstChild.style.border = \"none\";\n\n\t\tthat.gridId = obj.id;\n\t\tthat.gridObj = obj;\n\n\t\tvar method_name=\"_viewRestore\";\n\t\treturn this.vs[this[method_name]()].grid;\n\t};\n\n}\nif (typeof(window.dhtmlXCellObject) != \"undefined\") {\n\n\twindow.dhtmlXCellObject.prototype.attachGantt=function(start, end, gantt){\n\t\tgantt = gantt || window.gantt;\n\n\t\tvar obj = document.createElement(\"DIV\");\n\t\tobj.id = \"gantt_\"+gantt.uid();\n\t\tobj.style.width = \"100%\";\n\t\tobj.style.height = \"100%\";\n\t\tobj.cmp = \"grid\";\n\n\t\tdocument.body.appendChild(obj);\n\t\tthis.attachObject(obj.id);\n\n\t\tthis.dataType = \"gantt\";\n\t\tthis.dataObj = gantt;\n\n\t\tgantt.init(obj.id, start, end);\n\t\tobj.firstChild.style.border = \"none\";\n\n\t\tobj = null;\n\t\tthis.callEvent(\"_onContentAttach\",[]);\n\n\t\treturn this.dataObj;\n\t};\n}\n\nmodule.exports = null;","if (window.jQuery){\n\n\t(function( $ ){\n\n\t\tvar methods = [];\n\t\t$.fn.dhx_gantt = function(config){\n\t\t\tconfig = config || {};\n\t\t\tif (typeof(config) === 'string') {\n\t\t\t\tif (methods[config] ) {\n\t\t\t\t\treturn methods[config].apply(this, []);\n\t\t\t\t}else {\n\t\t\t\t\t$.error('Method ' +  config + ' does not exist on jQuery.dhx_gantt');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar views = [];\n\t\t\t\tthis.each(function() {\n\t\t\t\t\tif (this && this.getAttribute){\n\t\t\t\t\t\tif (!this.gantt && !(window.gantt.$root == this)){\n\n\t\t\t\t\t\t\tvar newgantt = (window.gantt.$container && window.Gantt) ? window.Gantt.getGanttInstance():window.gantt;\n\t\t\t\t\t\t\tfor (var key in config)\n\t\t\t\t\t\t\t\tif (key!=\"data\")\n\t\t\t\t\t\t\t\t\tnewgantt.config[key] = config[key];\n\n\t\t\t\t\t\t\tnewgantt.init(this);\n\t\t\t\t\t\t\tif (config.data)\n\t\t\t\t\t\t\t\tnewgantt.parse(config.data);\n\n\t\t\t\t\t\t\tviews.push(newgantt);\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tviews.push(typeof this.gantt == \"object\" ? this.gantt : window.gantt);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\n\t\t\t\tif (views.length === 1) return views[0];\n\t\t\t\treturn views;\n\t\t\t}\n\t\t};\n\n\t})(window.jQuery);\n\n}\n\n\nmodule.exports = null;","var createWbs = (function(gantt){\n\treturn {\n\t_needRecalc: true,\n\treset: function(){\n\t\tthis._needRecalc = true;\n\t},\n\t_isRecalcNeeded: function(){\n\t\treturn (!this._isGroupSort() && this._needRecalc);\n\t},\n\t_isGroupSort: function() {\n\t\treturn !!(gantt._groups && gantt._groups.is_active());\n\t},\n\t_getWBSCode: function(task) {\n\t\tif(!task) return \"\";\n\n\t\tif(this._isRecalcNeeded()){\n\t\t\tthis._calcWBS();\n\t\t}\n\n\t\tif(task.$virtual) return \"\";\n\t\tif(this._isGroupSort()) return task.$wbs || \"\";\n\n\t\tif(!task.$wbs) {\n\t\t\tthis.reset();\n\t\t\tthis._calcWBS();\n\t\t}\n\t\treturn task.$wbs;\n\t},\n\t_setWBSCode: function(task, value) {\n\t\ttask.$wbs = value;\n\t},\n\tgetWBSCode: function(task) {\n\t\treturn this._getWBSCode(task);\n\t},\n\tgetByWBSCode: function(code){\n\t\tvar parts = code.split(\".\");\n\t\tvar currentNode = gantt.config.root_id;\n\t\tfor(var i = 0; i < parts.length; i++){\n\t\t\tvar children = gantt.getChildren(currentNode);\n\t\t\tvar index = parts[i]*1 - 1;\n\t\t\tif(gantt.isTaskExists(children[index])){\n\t\t\t\tcurrentNode = children[index];\n\t\t\t}else{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tif(gantt.isTaskExists(currentNode)){\n\t\t\treturn gantt.getTask(currentNode);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t},\n\t_calcWBS: function() {\n\t\tif(!this._isRecalcNeeded()) return;\n\n\t\tvar _isFirst = true;\n\t\tgantt.eachTask(function(ch) {\n\t\t\tif(_isFirst) {\n\t\t\t\t_isFirst = false;\n\t\t\t\tthis._setWBSCode(ch, \"1\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar _prevSibling = gantt.getPrevSibling(ch.id);\n\t\t\tif (_prevSibling !== null) {\n\t\t\t\tvar _wbs = gantt.getTask(_prevSibling).$wbs;\n\t\t\t\tif(_wbs) {\n\t\t\t\t\t_wbs = _wbs.split(\".\");\n\t\t\t\t\t_wbs[_wbs.length-1]++;\n\t\t\t\t\tthis._setWBSCode(ch, _wbs.join(\".\"));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _parent = gantt.getParent(ch.id);\n\t\t\t\tthis._setWBSCode(ch, gantt.getTask(_parent).$wbs + \".1\");\n\t\t\t}\n\t\t}, gantt.config.root_id, this);\n\n\t\tthis._needRecalc = false;\n\t}\n};\n});\n\nmodule.exports = function(gantt){\n\tvar wbs = createWbs(gantt);\n\tgantt.getWBSCode = function getWBSCode(task) {\n\t\treturn wbs.getWBSCode(task);\n\t};\n\n\tgantt.getTaskByWBSCode = function(code) {\n\t\treturn wbs.getByWBSCode(code);\n\t};\n\n\tfunction resetCache(){\n\t\twbs.reset();\n\t\treturn true;\n\t}\n\n\tgantt.attachEvent(\"onAfterTaskMove\", resetCache);\n\tgantt.attachEvent(\"onBeforeParse\", resetCache);\n\tgantt.attachEvent(\"onAfterTaskDelete\", resetCache);\n\tgantt.attachEvent(\"onAfterTaskAdd\", resetCache);\n\tgantt.attachEvent(\"onAfterSort\", resetCache);\n\n};\n","function createMethod(gantt){\n\tvar methods = {};\n\tvar isActive = false;\n\tfunction disableMethod(methodName, dummyMethod){\n\t\tdummyMethod = typeof dummyMethod == \"function\" ? dummyMethod : function(){};\n\n\t\tif(!methods[methodName]){\n\t\t\tmethods[methodName] = this[methodName];\n\t\t\tthis[methodName] = dummyMethod;\n\t\t}\n\t}\n\tfunction restoreMethod(methodName){\n\t\tif(methods[methodName]){\n\t\t\tthis[methodName] = methods[methodName];\n\t\t\tmethods[methodName] = null;\n\t\t}\n\t}\n\tfunction disableMethods(methodsHash){\n\t\tfor(var i in methodsHash){\n\t\t\tdisableMethod.call(this, i, methodsHash[i]);\n\t\t}\n\t}\n\tfunction restoreMethods(){\n\t\tfor(var i in methods){\n\t\t\trestoreMethod.call(this, i);\n\t\t}\n\t}\n\n\tfunction batchUpdatePayload(callback){\n\t\ttry{\n\t\t\tcallback();\n\t\t}catch(e){\n\t\t\twindow.console.error(e);\n\t\t}\n\t}\n\n\tvar state = gantt.$services.getService(\"state\");\n\tstate.registerProvider(\"batchUpdate\", function(){\n\t\treturn {\n\t\t\tbatch_update: isActive\n\t\t};\n\t}, true);\n\n\treturn function batchUpdate(callback, noRedraw) {\n\t\tif(isActive){\n\t\t\t// batch mode is already active\n\t\t\tbatchUpdatePayload(callback);\n\t\t\treturn;\n\t\t}\n\n\t\tvar call_dp = (this._dp && this._dp.updateMode != \"off\");\n\t\tvar dp_mode;\n\t\tif (call_dp){\n\t\t\tdp_mode = this._dp.updateMode;\n\t\t\tthis._dp.setUpdateMode(\"off\");\n\t\t}\n\n\t\t// temporary disable some methods while updating multiple tasks\n\t\tvar resetProjects = {};\n\t\tvar methods = {\n\t\t\t\"render\":true,\n\t\t\t\"refreshData\":true,\n\t\t\t\"refreshTask\":true,\n\t\t\t\"refreshLink\":true,\n\t\t\t\"resetProjectDates\":function(task){\n\t\t\t\tresetProjects[task.id] = task;\n\t\t\t}\n\t\t};\n\n\t\tdisableMethods.call(this, methods);\n\n\t\tisActive = true;\n\t\tthis.callEvent(\"onBeforeBatchUpdate\", []);\n\n\t\tbatchUpdatePayload(callback);\n\n\t\tthis.callEvent(\"onAfterBatchUpdate\", []);\n\n\t\trestoreMethods.call(this);\n\n\t\t// do required updates after changes applied\n\t\tfor(var i in resetProjects){\n\t\t\tthis.resetProjectDates(resetProjects[i]);\n\t\t}\n\n\t\tisActive = false;\n\n\t\tif(!noRedraw){\n\t\t\tthis.render();\n\t\t}\n\n\t\tif (call_dp) {\n\t\t\tthis._dp.setUpdateMode(dp_mode);\n\t\t\tthis._dp.setGanttMode(\"tasks\");\n\t\t\tthis._dp.sendData();\n\t\t\tthis._dp.setGanttMode(\"links\");\n\t\t\tthis._dp.sendData();\n\t\t}\n\t};\n\n\n\n}\n\nmodule.exports = function(gantt){\n\tgantt.batchUpdate = createMethod(gantt);\n};","var domHelpers = require(\"../../utils/dom_helpers\");\n\nmodule.exports = function(gantt){\n\n\tvar scrollRange = 50,\n\t\tscrollStep = 30,\n\t\tscrollDelay = 10,\n\t\tscrollSpeed = 50;\n\n\tvar interval = null,\n\t\tisMove = false,\n\t\tdelayTimeout = null,\n\t\tstartPos = {\n\t\t\tstarted: false\n\t\t},\n\t\teventPos = {};\n\n\tfunction getAutoscrollContainer(){\n\t\treturn gantt.$task || gantt.$grid || gantt.$root;\n\t}\n\n\tfunction isScrollState() {\n\t\tvar dragMarker = !!document.querySelector(\".gantt_drag_marker\");\n\t\tvar isResize = !!document.querySelector(\".gantt_drag_marker.gantt_grid_resize_area\");\n\t\tvar isLink = !!document.querySelector(\".gantt_link_direction\");\n\t\tisMove = dragMarker && !isResize && !isLink;\n\t\treturn !((!gantt.getState().drag_mode && !dragMarker) || isResize);\n\t}\n\n\tfunction defineDelayTimeout(state) {\n\t\tif (delayTimeout) {\n\t\t\tclearTimeout(delayTimeout);\n\t\t\tdelayTimeout = null;\n\t\t}\n\t\tif (state) {\n\t\t\tvar speed = gantt.config.autoscroll_speed;\n\t\t\tif (speed && speed < 10) // limit speed value to 10 \n\t\t\t\tspeed = 10;\n\n\t\t\tdelayTimeout = setTimeout(function() {\n\t\t\t\tinterval = setInterval(tick, speed || scrollSpeed);\n\t\t\t}, gantt.config.autoscroll_delay || scrollDelay);\n\t\t}\n\t}\n\n\tfunction defineScrollInterval(state) {\n\t\tif (state) {\n\t\t\tdefineDelayTimeout(true);\n\t\t\tif (!startPos.started) {\n\t\t\t\tstartPos.x = eventPos.x;\n\t\t\t\tstartPos.y = eventPos.y;\n\t\t\t\tstartPos.started = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (interval) {\n\t\t\t\tclearInterval(interval);\n\t\t\t\tinterval = null;\n\t\t\t}\n\t\t\tdefineDelayTimeout(false);\n\t\t\tstartPos.started = false;\n\t\t}\n\t}\n\n\tfunction autoscrollInterval(event) {\n\n\t\tvar isScroll = isScrollState();\n\n\t\tif ((interval || delayTimeout) && !isScroll) { \n\t\t\tdefineScrollInterval(false);\n\t\t}\n\n\t\tif (!gantt.config.autoscroll || !isScroll) {\n\t\t\treturn false;\n\t\t}\n\n\t\teventPos = {\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY\n\t\t};\n\n\t\tif (!interval && isScroll) {\n\t\t\tdefineScrollInterval(true);\n\t\t}\n\t}\n\n\tfunction tick() {\n\n\t\tif (!isScrollState()) {\n\t\t\tdefineScrollInterval(false);\n\t\t\treturn false;\n\t\t}\n\n\t\tvar box = domHelpers.getNodePosition(getAutoscrollContainer());\n\t\tvar posX = eventPos.x - box.x; \n\t\tvar posY = eventPos.y - box.y;\n\n\t\tvar scrollLeft = isMove ? 0 : need_scroll(posX, box.width, startPos.x - box.x);\n\t\tvar scrollTop = need_scroll(posY, box.height, startPos.y - box.y);\n\n\t\tvar scrollState = gantt.getScrollState();\n\n\t\tvar currentScrollTop = scrollState.y,\n\t\t\tscrollOuterHeight = scrollState.inner_height,\n\t\t\tscrollInnerHeight = scrollState.height,\n\t\t\tcurrentScrollLeft = scrollState.x,\n\t\t\tscrollOuterWidth = scrollState.inner_width,\n\t\t\tscrollInnerWidth = scrollState.width;\n\n\t\t// do scrolling only if we have scrollable area to do so\n\t\tif (scrollTop && !scrollOuterHeight) {\n\t\t\tscrollTop = 0;\n\t\t} else if (scrollTop < 0 && !currentScrollTop) {\n\t\t\tscrollTop = 0;\n\t\t} else if (scrollTop > 0 && currentScrollTop + scrollOuterHeight >= scrollInnerHeight + 2) {\n\t\t\tscrollTop = 0;\n\t\t}\n\n\t\tif (scrollLeft && !scrollOuterWidth) {\n\t\t\tscrollLeft = 0;\n\t\t} else if (scrollLeft < 0 && !currentScrollLeft) {\n\t\t\tscrollLeft = 0;\n\t\t} else if (scrollLeft > 0 && currentScrollLeft + scrollOuterWidth >= scrollInnerWidth) {\n\t\t\tscrollLeft = 0;\n\t\t}\n\n\t\tvar step = gantt.config.autoscroll_step;\n\n\t\tif (step && step < 2) // limit step value to 2\n\t\t\tstep = 2;\n\n\t\tscrollLeft = scrollLeft * (step || scrollStep);\n\t\tscrollTop = scrollTop * (step || scrollStep);\n\n\t\tif (scrollLeft || scrollTop) {\n\t\t\tscroll(scrollLeft, scrollTop);\n\t\t} \n\n\t}\n\n\tfunction need_scroll(pos, boxSize, startCoord) {\n\t\tif ((pos - scrollRange < 0) && (pos < startCoord))\n\t\t\treturn -1;\n\t\telse if ((pos > boxSize - scrollRange) && (pos > startCoord))\n\t\t\treturn 1;\n\t\treturn 0;\n\t}\n\n\tfunction scroll(left, top) {\n\t\tvar scrollState = gantt.getScrollState();\n\n\t\tvar scrollLeft = null,\n\t\t\tscrollTop = null;\n\n\t\tif (left) {\n\t\t\tscrollLeft = scrollState.x + left;\n\t\t\tscrollLeft = Math.min(scrollState.width, scrollLeft);\n\t\t\tscrollLeft = Math.max(0, scrollLeft);\n\t\t}\n\n\t\tif (top) {\n\t\t\tscrollTop = scrollState.y + top;\n\t\t\tscrollTop = Math.min(scrollState.height, scrollTop);\n\t\t\tscrollTop = Math.max(0, scrollTop);\n\t\t}\n\n\t\tgantt.scrollTo(scrollLeft, scrollTop);\n\t}\n\n\tgantt.attachEvent(\"onGanttReady\", function() {\n\t\tgantt.eventRemove(document.body, \"mousemove\", autoscrollInterval);\n\t\tgantt.event(document.body, \"mousemove\", autoscrollInterval);\n\t});\n\n};","module.exports = function(gantt){\n\tvar modules = [\n\t\trequire(\"./autoscroll\"),\n\t\trequire(\"./batch_update\"),\n\t\trequire(\"./wbs\"),\n\t\trequire(\"./jquery_hooks\"),\n\t\trequire(\"./dhtmlx_hooks\"),\n\t\trequire(\"./resources\"),\n\t\trequire(\"./new_task_placeholder\"),\n\t\trequire(\"./auto_task_types\")\n\t];\n\n\tfor(var i = 0; i < modules.length; i++){\n\t\tif(modules[i])\n\t\t\tmodules[i](gantt);\n\t}\n};","var utils = require(\"../../utils/utils\");\nvar eventable = require(\"../../utils/eventable\");\n\n/**\n\t* \t@desc: constructor, data processor object \n\t*\t@param: serverProcessorURL - url used for update\n\t*\t@type: public\n\t*/\nvar dataProcessor = function (serverProcessorURL) {\n\tthis.serverProcessor = serverProcessorURL;\n\tthis.action_param = \"!nativeeditor_status\";\n\n\tthis.object = null;\n\tthis.updatedRows = []; //ids of updated rows\n\n\tthis.autoUpdate = true;\n\tthis.updateMode = \"cell\";\n\tthis._tMode = \"GET\";\n\tthis._headers = null;\n\tthis._payload = null;\n\tthis.post_delim = \"_\";\n\n\tthis._waitMode = 0;\n\tthis._in_progress = {};//?\n\tthis._invalid = {};\n\tthis.mandatoryFields = [];\n\tthis.messages = [];\n\n\tthis.styles = {\n\t\tupdated: \"font-weight:bold;\",\n\t\tinserted: \"font-weight:bold;\",\n\t\tdeleted: \"text-decoration : line-through;\",\n\t\tinvalid: \"background-color:FFE0E0;\",\n\t\tinvalid_cell: \"border-bottom:2px solid red;\",\n\t\terror: \"color:red;\",\n\t\tclear: \"font-weight:normal;text-decoration:none;\"\n\t};\n\n\tthis.enableUTFencoding(true);\n\teventable(this);\n\n\treturn this;\n};\n\ndataProcessor.prototype = {\n\tsetTransactionMode: function (mode, total) {\n\t\tif (typeof mode == \"object\") {\n\t\t\tthis._tMode = mode.mode || this._tMode;\n\n\t\t\tif (utils.defined(mode.headers)) {\n\t\t\t\tthis._headers = mode.headers;\n\t\t\t}\n\n\t\t\tif (utils.defined(mode.payload)) {\n\t\t\t\tthis._payload = mode.payload;\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis._tMode = mode;\n\t\t\tthis._tSend = total;\n\t\t}\n\n\t\tif (this._tMode == \"REST\") {\n\t\t\tthis._tSend = false;\n\t\t\tthis._endnm = true;\n\t\t}\n\n\t\tif (this._tMode == \"JSON\" || this._tMode == \"REST-JSON\") {\n\t\t\tthis._tSend = false;\n\t\t\tthis._endnm = true;\n\t\t\tthis._serialize_as_json = true;\n\t\t\tthis._headers = this._headers || {};\n\t\t\tthis._headers[\"Content-type\"] = \"application/json\";\n\t\t}\n\t},\n\tescape: function (data) {\n\t\tif (this._utf)\n\t\t\treturn encodeURIComponent(data);\n\t\telse\n\t\t\treturn escape(data);\n\t},\n    /**\n\t* \t@desc: allows to set escaping mode\n\t*\t@param: true - utf based escaping, simple - use current page encoding\n\t*\t@type: public\n\t*/\n\tenableUTFencoding: function (mode) {\n\t\tthis._utf = !!mode;\n\t},\n    /**\n\t* \t@desc: allows to define, which column may trigger update\n\t*\t@param: val - array or list of true/false values\n\t*\t@type: public\n\t*/\n\tsetDataColumns: function (val) {\n\t\tthis._columns = (typeof val == \"string\") ? val.split(\",\") : val;\n\t},\n    /**\n\t* \t@desc: get state of updating\n\t*\t@returns:   true - all in sync with server, false - some items not updated yet.\n\t*\t@type: public\n\t*/\n\tgetSyncState: function () {\n\t\treturn !this.updatedRows.length;\n\t},\n\t/**\n\t* \t@desc: enable/disable named field for data syncing, will use column ids for grid\n\t*\t@param:   mode - true/false\n\t*\t@type: public\n\t*/\n\tenableDataNames: function (mode) {\n\t\tthis._endnm = !!mode;\n\t},\n\t/**\n\t* \t@desc: enable/disable mode , when only changed fields and row id send to the server side, instead of all fields in default mode\n\t*\t@param:   mode - true/false\n\t*\t@type: public\n\t*/\n\tenablePartialDataSend: function (mode) {\n\t\tthis._changed = !!mode;\n\t},\n\t/**\n\t* \t@desc: set if rows should be send to server automaticaly\n\t*\t@param: mode - \"row\" - based on row selection changed, \"cell\" - based on cell editing finished, \"off\" - manual data sending\n\t*\t@type: public\n\t*/\n\tsetUpdateMode: function (mode, dnd) {\n\t\tthis.autoUpdate = (mode == \"cell\");\n\t\tthis.updateMode = mode;\n\t\tthis.dnd = dnd;\n\t},\n\tignore: function (code, master) {\n\t\tthis._silent_mode = true;\n\t\tcode.call(master || window);\n\t\tthis._silent_mode = false;\n\t},\n\t/**\n\t* \t@desc: mark row as updated/normal. check mandatory fields,initiate autoupdate (if turned on)\n\t*\t@param: rowId - id of row to set update-status for\n\t*\t@param: state - true for \"updated\", false for \"not updated\"\n\t*\t@param: mode - update mode name\n\t*\t@type: public\n\t*/\n\tsetUpdated: function (rowId, state, mode) {\n\t\tif (this._silent_mode) return;\n\t\tvar ind = this.findRow(rowId);\n\n\t\tmode = mode || \"updated\";\n\t\tvar existing = this.obj.getUserData(rowId, this.action_param);\n\t\tif (existing && mode == \"updated\") mode = existing;\n\t\tif (state) {\n\t\t\tthis.set_invalid(rowId, false); //clear previous error flag\n\t\t\tthis.updatedRows[ind] = rowId;\n\t\t\tthis.obj.setUserData(rowId, this.action_param, mode);\n\t\t\tif (this._in_progress[rowId])\n\t\t\t\tthis._in_progress[rowId] = \"wait\";\n\t\t} else {\n\t\t\tif (!this.is_invalid(rowId)) {\n\t\t\t\tthis.updatedRows.splice(ind, 1);\n\t\t\t\tthis.obj.setUserData(rowId, this.action_param, \"\");\n\t\t\t}\n\t\t}\n\n\t\t//clear changed flag\n\t\tif (!state)\n\t\t\tthis._clearUpdateFlag(rowId);\n\n\t\tthis.markRow(rowId, state, mode);\n\t\tif (state && this.autoUpdate) this.sendData(rowId);\n\t},\n\t_clearUpdateFlag: function (id) { },\n\tmarkRow: function (id, state, mode) {\n\t\tvar str = \"\";\n\t\tvar invalid = this.is_invalid(id);\n\t\tif (invalid) {\n\t\t\tstr = this.styles[invalid];\n\t\t\tstate = true;\n\t\t}\n\t\tif (this.callEvent(\"onRowMark\", [id, state, mode, invalid])) {\n\t\t\t//default logic\n\t\t\tstr = this.styles[state ? mode : \"clear\"] + str;\n\n\t\t\tthis.obj[this._methods[0]](id, str);\n\n\t\t\tif (invalid && invalid.details) {\n\t\t\t\tstr += this.styles[invalid + \"_cell\"];\n\t\t\t\tfor (var i = 0; i < invalid.details.length; i++)\n\t\t\t\t\tif (invalid.details[i])\n\t\t\t\t\t\tthis.obj[this._methods[1]](id, i, str);\n\t\t\t}\n\t\t}\n\t},\n\tgetState: function (id) {\n\t\treturn this.obj.getUserData(id, this.action_param);\n\t},\n\tis_invalid: function (id) {\n\t\treturn this._invalid[id];\n\t},\n\tset_invalid: function (id, mode, details) {\n\t\tif (details) mode = {\n\t\t\tvalue: mode,\n\t\t\tdetails: details,\n\t\t\ttoString: function () {\n\t\t\t\treturn this.value.toString();\n\t\t\t}\n\t\t};\n\t\tthis._invalid[id] = mode;\n\t},\n\t/**\n\t* \t@desc: check mandatory fields and varify values of cells, initiate update (if specified)\n\t*\t@param: rowId - id of row to set update-status for\n\t*\t@type: public\n\t*/\n\tcheckBeforeUpdate: function (rowId) {\n\t\treturn true;\n\t},\n\t/**\n\t* \t@desc: send row(s) values to server\n\t*\t@param: rowId - id of row which data to send. If not specified, then all \"updated\" rows will be send\n\t*\t@type: public\n\t*/\n\tsendData: function (rowId) {\n\t\tif (this._waitMode && (this.obj.mytype == \"tree\" || this.obj._h2)) return;\n\t\tif (this.obj.editStop) this.obj.editStop();\n\n\n\t\tif (typeof rowId == \"undefined\" || this._tSend) return this.sendAllData();\n\t\tif (this._in_progress[rowId]) return false;\n\n\t\tthis.messages = [];\n\t\tif (!this.checkBeforeUpdate(rowId) && this.callEvent(\"onValidationError\", [rowId, this.messages])) return false;\n\t\tthis._beforeSendData(this._getRowData(rowId), rowId);\n\t},\n\t_beforeSendData: function (data, rowId) {\n\t\tif (!this.callEvent(\"onBeforeUpdate\", [rowId, this.getState(rowId), data])) return false;\n\t\tthis._sendData(data, rowId);\n\t},\n\tserialize: function (data, id) {\n\t\tif (this._serialize_as_json) {\n\t\t\treturn  this._serializeAsJSON(data);\n\t\t}\n\n\t\tif (typeof data == \"string\")\n\t\t\treturn data;\n\t\tif (typeof id != \"undefined\")\n\t\t\treturn this.serialize_one(data, \"\");\n\t\telse {\n\t\t\tvar stack = [];\n\t\t\tvar keys = [];\n\t\t\tfor (var key in data)\n\t\t\t\tif (data.hasOwnProperty(key)) {\n\t\t\t\t\tstack.push(this.serialize_one(data[key], key + this.post_delim));\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\tstack.push(\"ids=\" + this.escape(keys.join(\",\")));\n\t\t\tif (this.$gantt.security_key)\n\t\t\t\tstack.push(\"dhx_security=\" + this.$gantt.security_key);\n\t\t\treturn stack.join(\"&\");\n\t\t}\n\t},\n\n\t_serializeAsJSON: function (data) {\n\t\tif (typeof data == \"string\")\n\t\t\treturn data;\n\n\t\tvar copy = utils.copy(data);\n\t\tif(this._tMode == \"REST-JSON\"){\n\t\t\tdelete copy.id;\n\t\t\tdelete copy[this.action_param];\n\t\t}\n\n\t\treturn JSON.stringify(copy);\n\t},\n\n\tserialize_one: function (data, pref) {\n\t\tif (typeof data == \"string\")\n\t\t\treturn data;\n\t\tvar stack = [];\n\t\tvar serialized = \"\";\n\t\tfor (var key in data)\n\t\t\tif (data.hasOwnProperty(key)) {\n\t\t\t\tif ((key == \"id\" || key == this.action_param) && this._tMode == \"REST\") continue;\n\t\t\t\tif (typeof data[key] === \"string\" || typeof data[key] === \"number\") {\n\t\t\t\t\tserialized = data[key];\n\t\t\t\t} else {\n\t\t\t\t\tserialized = JSON.stringify(data[key]);\n\t\t\t\t}\n\t\t\t\tstack.push(this.escape((pref || \"\") + key) + \"=\" + this.escape(serialized));\n\t\t\t}\n\t\treturn stack.join(\"&\");\n\t},\n\t_applyPayload: function (url) {\n\t\tvar ajax = this.$gantt.ajax;\n\t\tif (this._payload)\n\t\t\tfor (var key in this._payload)\n\t\t\t\turl = url + ajax.urlSeparator(url) + this.escape(key) + \"=\" + this.escape(this._payload[key]);\n\t\treturn url;\n\t},\n\t_sendData: function (a1, rowId) {\n\t\tif (!a1) return; //nothing to send\n\t\tif (!this.callEvent(\"onBeforeDataSending\", rowId ? [rowId, this.getState(rowId), a1] : [null, null, a1])) return false;\n\n\t\tif (rowId)\n\t\t\tthis._in_progress[rowId] = (new Date()).valueOf();\n\n\t\tvar _this = this;\n\n\t\tvar ajax = this.$gantt.ajax;\n\n\t\tvar queryParams = {\n\t\t\tcallback: function (xml) {\n\t\t\t\tvar ids = [];\n\t\t\t\tvar key;\n\n\t\t\t\tif (rowId)\n\t\t\t\t\tids.push(rowId);\n\t\t\t\telse if (a1)\n\t\t\t\t\tfor (key in a1)\n\t\t\t\t\t\tids.push(key);\n\n\t\t\t\treturn _this.afterUpdate(_this, xml, ids);\n\t\t\t},\n\t\t\theaders: this._headers\n\t\t};\n\n\t\tvar a3 = this.serverProcessor + (this._user ? (ajax.urlSeparator(this.serverProcessor) + [\"dhx_user=\" + this._user, \"dhx_version=\" + this.obj.getUserData(0, \"version\")].join(\"&\")) : \"\");\n\t\tvar a4 = this._applyPayload(a3);\n\n\t\tswitch (this._tMode) {\n\t\t\tcase \"GET\":\n\t\t\t\tqueryParams.url = a4 + ajax.urlSeparator(a4) + this.serialize(a1, rowId);\n\t\t\t\tqueryParams.method = \"GET\";\n\t\t\t\tbreak;\n\t\t\tcase \"POST\":\n\t\t\t\tqueryParams.url = a4;\n\t\t\t\tqueryParams.method = \"POST\";\n\t\t\t\tqueryParams.data = this.serialize(a1, rowId);\n\t\t\t\tbreak;\n\t\t\tcase \"JSON\":\n\t\t\t\tvar data = {};\n\t\t\t\tfor (var key in a1) {\n\t\t\t\t\tif (key === this.action_param || key === \"id\" || key === \"gr_id\") continue;\n\t\t\t\t\tdata[key] = a1[key];\n\t\t\t\t}\n\n\t\t\t\tqueryParams.url = a4;\n\t\t\t\tqueryParams.method = \"POST\";\n\t\t\t\tqueryParams.data = JSON.stringify({\n\t\t\t\t\tid: rowId,\n\t\t\t\t\taction: a1[this.action_param],\n\t\t\t\t\tdata: data\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"REST\":\n\t\t\tcase \"REST-JSON\":\n\t\t\t\tvar url = a3.replace(/(&|\\?)editing=true/, \"\");\n\t\t\t\tdata = \"\";\n\n\t\t\t\tswitch (this.getState(rowId)) {\n\t\t\t\t\tcase \"inserted\":\n\t\t\t\t\t\tqueryParams.method = \"POST\";\n\t\t\t\t\t\tqueryParams.data = this.serialize(a1, rowId);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"deleted\":\n\t\t\t\t\t\tqueryParams.method = \"DELETE\";\n\t\t\t\t\t\turl = url + (url.slice(-1) == \"/\" ? \"\" : \"/\") + rowId;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tqueryParams.method = \"PUT\";\n\t\t\t\t\t\tqueryParams.data = this.serialize(a1, rowId);\n\t\t\t\t\t\turl = url + (url.slice(-1) == \"/\" ? \"\" : \"/\") + rowId;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tqueryParams.url = this._applyPayload(url);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tajax.query(queryParams);\n\t\tthis._waitMode++;\n\t},\n\n\t_forEachUpdatedRow: function (code) {\n\t\tvar updatedRows = this.updatedRows.slice();\n\t\tfor (var i = 0; i < updatedRows.length; i++) {\n\t\t\tvar rowId = updatedRows[i];\n\t\t\tif (this.obj.getUserData(rowId, this.action_param)) {\n\t\t\t\tcode.call(this, rowId);\n\t\t\t}\n\t\t}\n\t},\n\n\tsendAllData: function () {\n\t\tif (!this.updatedRows.length) return;\n\n\t\tthis.messages = [];\n\t\tvar valid = true;\n\n\t\tthis._forEachUpdatedRow(function (rowId) {\n\t\t\tvalid &= this.checkBeforeUpdate(rowId);\n\t\t});\n\n\t\tif (!valid && !this.callEvent(\"onValidationError\", [\"\", this.messages])) return false;\n\n\t\tif (this._tSend) {\n\t\t\tthis._sendData(this._getAllData());\n\t\t} else {\n\t\t\tvar stop = false;\n\n\t\t\t// this.updatedRows can be spliced from onBeforeUpdate via dp.setUpdated false\n\t\t\t// use an iterator instead of for(var i = 0; i < this.updatedRows; i++) then\n\t\t\tthis._forEachUpdatedRow(function (rowId) {\n\t\t\t\tif (stop) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this._in_progress[rowId]) {\n\t\t\t\t\tif (this.is_invalid(rowId)) return;\n\t\t\t\t\tthis._beforeSendData(this._getRowData(rowId), rowId);\n\t\t\t\t\tif (this._waitMode && (this.obj.mytype == \"tree\" || this.obj._h2)) {\n\t\t\t\t\t\tstop = true; //block send all for tree\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_getAllData: function (rowId) {\n\t\tvar out = {};\n\t\tvar has_one = false;\n\n\t\tthis._forEachUpdatedRow(function (id) {\n\t\t\tif (this._in_progress[id] || this.is_invalid(id)) return;\n\t\t\tvar row = this._getRowData(id);\n\t\t\tif (!this.callEvent(\"onBeforeUpdate\", [id, this.getState(id), row])) return;\n\t\t\tout[id] = row;\n\t\t\thas_one = true;\n\t\t\tthis._in_progress[id] = (new Date()).valueOf();\n\t\t});\n\n\t\treturn has_one ? out : null;\n\t},\n\n\n\t/**\n\t* \t@desc: specify column which value should be varified before sending to server\n\t*\t@param: ind - column index (0 based)\n\t*\t@param: verifFunction - function (object) which should verify cell value (if not specified, then value will be compared to empty string). Two arguments will be passed into it: value and column name\n\t*\t@type: public\n\t*/\n\tsetVerificator: function (ind, verifFunction) {\n\t\tthis.mandatoryFields[ind] = verifFunction || (function (value) { return (value !== \"\"); });\n\t},\n\t/**\n\t* \t@desc: remove column from list of those which should be verified\n\t*\t@param: ind - column Index (0 based)\n\t*\t@type: public\n\t*/\n\tclearVerificator: function (ind) {\n\t\tthis.mandatoryFields[ind] = false;\n\t},\n\n\n\n\n\n\tfindRow: function (pattern) {\n\t\tvar i = 0;\n\t\tfor (i = 0; i < this.updatedRows.length; i++)\n\t\t\tif (pattern == this.updatedRows[i]) break;\n\t\treturn i;\n\t},\n\n\t/**\n\t* \t@desc: define custom actions\n\t*\t@param: name - name of action, same as value of action attribute\n\t*\t@param: handler - custom function, which receives a XMl response content for action\n\t*\t@type: private\n\t*/\n\tdefineAction: function (name, handler) {\n\t\tif (!this._uActions) this._uActions = [];\n\t\tthis._uActions[name] = handler;\n\t},\n\n\t/**\n*     @desc: used in combination with setOnBeforeUpdateHandler to create custom client-server transport system\n*     @param: sid - id of item before update\n*     @param: tid - id of item after up0ate\n*     @param: action - action name\n*     @type: public\n*     @topic: 0\n*/\n\tafterUpdateCallback: function (sid, tid, action, btag) {\n\t\tvar marker = sid;\n\t\tvar correct = (action != \"error\" && action != \"invalid\");\n\t\tif (!correct) this.set_invalid(sid, action);\n\t\tif ((this._uActions) && (this._uActions[action]) && (!this._uActions[action](btag)))\n\t\t\treturn (delete this._in_progress[marker]);\n\n\t\tif (this._in_progress[marker] != \"wait\")\n\t\t\tthis.setUpdated(sid, false);\n\n\t\tvar soid = sid;\n\n\t\tswitch (action) {\n\t\t\tcase \"inserted\":\n\t\t\tcase \"insert\":\n\t\t\t\tif (tid != sid) {\n\t\t\t\t\tthis.setUpdated(sid, false);\n\t\t\t\t\tthis.obj[this._methods[2]](sid, tid);\n\t\t\t\t\tsid = tid;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"delete\":\n\t\t\tcase \"deleted\":\n\t\t\t\tthis.obj.setUserData(sid, this.action_param, \"true_deleted\");\n\t\t\t\tthis.obj[this._methods[3]](sid);\n\t\t\t\tdelete this._in_progress[marker];\n\t\t\t\treturn this.callEvent(\"onAfterUpdate\", [sid, action, tid, btag]);\n\t\t}\n\n\t\tif (this._in_progress[marker] != \"wait\") {\n\t\t\tif (correct) this.obj.setUserData(sid, this.action_param, '');\n\t\t\tdelete this._in_progress[marker];\n\t\t} else {\n\t\t\tdelete this._in_progress[marker];\n\t\t\tthis.setUpdated(tid, true, this.obj.getUserData(sid, this.action_param));\n\t\t}\n\n\t\tthis.callEvent(\"onAfterUpdate\", [soid, action, tid, btag]);\n\t},\n\n\t/**\n\t* \t@desc: response from server\n\t*\t@param: xml - XMLLoader object with response XML\n\t*\t@type: private\n\t*/\n\tafterUpdate: function (that, xml, id) {\n\t\tvar ajax = this.$gantt.ajax;\n\t\t//try to use json first\n\t\tif (window.JSON) {\n\t\t\tvar tag;\n\n\t\t\ttry {\n\t\t\t\ttag = JSON.parse(xml.xmlDoc.responseText);\n\t\t\t} catch (e) {\n\n\t\t\t\t// empty response also can be processed by json handler\n\t\t\t\tif (!xml.xmlDoc.responseText.length) {\n\t\t\t\t\ttag = {};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tag) {\n\t\t\t\tvar action = tag.action || this.getState(id) || \"updated\";\n\t\t\t\tvar sid = tag.sid || id[0];\n\t\t\t\tvar tid = tag.tid || id[0];\n\t\t\t\tthat.afterUpdateCallback(sid, tid, action, tag);\n\t\t\t\tthat.finalizeUpdate();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t//xml response\n\t\tvar top = ajax.xmltop(\"data\", xml.xmlDoc); //fix incorrect content type in IE\n\t\tif (!top) return this.cleanUpdate(id);\n\t\tvar atag = ajax.xpath(\"//data/action\", top);\n\t\tif (!atag.length) return this.cleanUpdate(id);\n\n\t\tfor (var i = 0; i < atag.length; i++) {\n\t\t\tvar btag = atag[i];\n\t\t\tvar action = btag.getAttribute(\"type\");\n\t\t\tvar sid = btag.getAttribute(\"sid\");\n\t\t\tvar tid = btag.getAttribute(\"tid\");\n\n\t\t\tthat.afterUpdateCallback(sid, tid, action, btag);\n\t\t}\n\t\tthat.finalizeUpdate();\n\t},\n\tcleanUpdate: function (id) {\n\t\tif (id)\n\t\t\tfor (var i = 0; i < id.length; i++)\n\t\t\t\tdelete this._in_progress[id[i]];\n\t},\n\tfinalizeUpdate: function () {\n\t\tif (this._waitMode) this._waitMode--;\n\n\t\tif ((this.obj.mytype == \"tree\" || this.obj._h2) && this.updatedRows.length)\n\t\t\tthis.sendData();\n\t\tthis.callEvent(\"onAfterUpdateFinish\", []);\n\t\tif (!this.updatedRows.length)\n\t\t\tthis.callEvent(\"onFullSync\", []);\n\t},\n\n\n\n\n\n\t/**\n\t* \t@desc: initializes data-processor\n\t*\t@param: anObj - dhtmlxGrid object to attach this data-processor to\n\t*\t@type: public\n\t*/\n\tinit: function (anObj) {\n\t\tthis.obj = anObj;\n\t\tif (this.obj._dp_init)\n\t\t\tthis.obj._dp_init(this);\n\t},\n\n\n\tsetOnAfterUpdate: function (ev) {\n\t\tthis.attachEvent(\"onAfterUpdate\", ev);\n\t},\n\tenableDebug: function (mode) {\n\t},\n\tsetOnBeforeUpdateHandler: function (func) {\n\t\tthis.attachEvent(\"onBeforeDataSending\", func);\n\t},\n\n\n\n\t/* starts autoupdate mode\n\t\t@param interval\n\t\t\ttime interval for sending update requests\n\t*/\n\tsetAutoUpdate: function (interval, user) {\n\t\tinterval = interval || 2000;\n\n\t\tthis._user = user || (new Date()).valueOf();\n\t\tthis._need_update = false;\n\t\t//this._loader = null;\n\t\tthis._update_busy = false;\n\n\t\tthis.attachEvent(\"onAfterUpdate\", function (sid, action, tid, xml_node) {\n\t\t\tthis.afterAutoUpdate(sid, action, tid, xml_node);\n\t\t});\n\t\tthis.attachEvent(\"onFullSync\", function () {\n\t\t\tthis.fullSync();\n\t\t});\n\n\t\tvar self = this;\n\t\twindow.setInterval(function () {\n\t\t\tself.loadUpdate();\n\t\t}, interval);\n\t},\n\n\n\t/* process updating request answer\n\t\tif status == collision version is depricated\n\t\tset flag for autoupdating immidiatly\n\t*/\n\tafterAutoUpdate: function (sid, action, tid, xml_node) {\n\t\tif (action == 'collision') {\n\t\t\tthis._need_update = true;\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t},\n\n\n\t/* callback function for onFillSync event\n\t\tcall update function if it's need\n\t*/\n\tfullSync: function () {\n\t\tif (this._need_update) {\n\t\t\tthis._need_update = false;\n\t\t\tthis.loadUpdate();\n\t\t}\n\t\treturn true;\n\t},\n\n\n\t/* sends query to the server and call callback function\n\t*/\n\tgetUpdates: function (url, callback) {\n\t\tvar ajax = this.$gantt.ajax;\n\t\tif (this._update_busy)\n\t\t\treturn false;\n\t\telse\n\t\t\tthis._update_busy = true;\n\n\t\t//this._loader = this._loader || new dtmlXMLLoaderObject(true);\n\n\t\t//this._loader.async=true;\n\t\t//this._loader.waitCall=callback;\n\t\t//this._loader.loadXML(url);\n\t\tajax.get(url, callback);\n\n\t},\n\n\n\t/* returns xml node value\n\t\t@param node\n\t\t\txml node\n\t*/\n\t_v: function (node) {\n\t\tif (node.firstChild) return node.firstChild.nodeValue;\n\t\treturn \"\";\n\t},\n\n\n\t/* returns values array of xml nodes array\n\t\t@param arr\n\t\t\tarray of xml nodes\n\t*/\n\t_a: function (arr) {\n\t\tvar res = [];\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tres[i] = this._v(arr[i]);\n\t\t}\n\t\treturn res;\n\t},\n\n\n\t/* loads updates and processes them\n\t*/\n\tloadUpdate: function () {\n\t\tvar ajax = this.$gantt.ajax;\n\t\tvar self = this;\n\t\tvar version = this.obj.getUserData(0, \"version\");\n\t\tvar url = this.serverProcessor + ajax.urlSeparator(this.serverProcessor) + [\"dhx_user=\" + this._user, \"dhx_version=\" + version].join(\"&\");\n\t\turl = url.replace(\"editing=true&\", \"\");\n\t\tthis.getUpdates(url, function (xml) {\n\t\t\tvar vers = ajax.xpath(\"//userdata\", xml);\n\t\t\tself.obj.setUserData(0, \"version\", self._v(vers[0]));\n\n\t\t\tvar upds = ajax.xpath(\"//update\", xml);\n\t\t\tif (upds.length) {\n\t\t\t\tself._silent_mode = true;\n\n\t\t\t\tfor (var i = 0; i < upds.length; i++) {\n\t\t\t\t\tvar status = upds[i].getAttribute('status');\n\t\t\t\t\tvar id = upds[i].getAttribute('id');\n\t\t\t\t\tvar parent = upds[i].getAttribute('parent');\n\t\t\t\t\tswitch (status) {\n\t\t\t\t\t\tcase 'inserted':\n\t\t\t\t\t\t\tself.callEvent(\"insertCallback\", [upds[i], id, parent]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'updated':\n\t\t\t\t\t\t\tself.callEvent(\"updateCallback\", [upds[i], id, parent]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'deleted':\n\t\t\t\t\t\t\tself.callEvent(\"deleteCallback\", [upds[i], id, parent]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tself._silent_mode = false;\n\t\t\t}\n\n\t\t\tself._update_busy = false;\n\t\t\tself = null;\n\t\t});\n\t},\n\n\tdestructor: function () {\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\n\t\tthis.updatedRows = [];\n\t\tthis._in_progress = {};//?\n\t\tthis._invalid = {};\n\t\tthis._headers = null;\n\t\tthis._payload = null;\n\t\tthis.obj = null;\n\t}\n};\n\nmodule.exports = dataProcessor;","var utils = require (\"../../utils/utils\");\n\nfunction updateCallback(upd, id) {\n\tvar data = upd.data || this.xml._xmlNodeToJSON(upd.firstChild);\n\tif(!this.isTaskExists(id))\n\t\treturn;\n\tvar objData = this.getTask(id);\n\tfor(var key in data) {\n\t\tvar property = data[key];\n\t\tswitch(key) {\n\t\t\tcase \"id\":\n\t\t\t\tcontinue;\n\t\t\tcase \"start_date\":\n\t\t\tcase \"end_date\":\n\t\t\t\tproperty = this.templates.xml_date(property);\n\t\t\t\tbreak;\n\t\t\tcase \"duration\":\n\t\t\t\tobjData.end_date = this.calculateEndDate({start_date: objData.start_date, duration: property, task:objData});\n\t\t\t\tbreak;\n\t\t}\n\t\tobjData[key] = property;\n\t}\n\tthis.updateTask(id);\n\tthis.refreshData();\n}\n\nfunction insertCallback(upd, id, parent, mode) {\n\tvar data = upd.data || this.xml._xmlNodeToJSON(upd.firstChild),\n\t\tmethods = {\n\t\t\tadd: this.addTask,\n\t\t\tisExist: this.isTaskExists\n\t\t};\n\tif(mode == \"links\") {\n\t\tmethods.add = this.addLink;\n\t\tmethods.isExist = this.isLinkExists;\n\t}\n\tif(methods.isExist.call(this, id))\n\t\treturn;\n\tdata.id = id;\n\tmethods.add.call(this, data);\n}\n\nfunction deleteCallback(upd, id, parent, mode) {\n\tvar methods = {\n\t\t\"delete\": this.deleteTask,\n\t\t\"isExist\": this.isTaskExists\n\t};\n\tif(mode == \"links\") {\n\t\tmethods[\"delete\"] = this.deleteLink;\n\t\tmethods.isExist = this.isLinkExists;\n\t}\n\tif(methods.isExist.call(this, id))\n\t\tmethods[\"delete\"].call(this, id);\n}\n\nfunction patchDataProcessor(gantt, dataprocessor){\n\tdataprocessor.attachEvent(\"insertCallback\", utils.bind(insertCallback, gantt));\n\tdataprocessor.attachEvent(\"updateCallback\",  utils.bind(updateCallback, gantt));\n\tdataprocessor.attachEvent(\"deleteCallback\",  utils.bind(deleteCallback, gantt));\n}\n\nmodule.exports = patchDataProcessor;","var liveUpdateHooks = require(\"./live_update_hooks\");\nvar helpers = require(\"../../utils/helpers\");\n\nfunction addDataProcessorHooks(gantt) {\n\n\tgantt.dataProcessor = require(\"./dataprocessor\");\n\n\tfunction detachDataProcessor(gantt, dp){\n\t\tdelete dp.$gantt;\n\t\tdelete dp.setGanttMode;\n\t\tdelete dp._getRowData;\n\t\tdp.afterUpdate = oldAfterUpdate;\n\n\t\tdelete gantt._dp;\n\t\tdelete gantt._change_id;\n\t\tdelete gantt._row_style;\n\t\tdelete gantt._delete_task;\n\t\tdelete gantt._sendTaskOrder;\n\n\t\thelpers.forEach(dataProcessorHandlers, function(e){\n\t\t\tgantt.detachEvent(e);\n\t\t});\n\t\tdataProcessorHandlers = [];\n\t}\n\n\tvar oldAfterUpdate;\n\tfunction extendDataProcessor(gantt, dp){\n\t\tdp.setGanttMode = function(mode){\n\t\t\tvar modes = dp.modes || {};\n\t\t\tif(dp._ganttMode){\n\t\t\t\tmodes[dp._ganttMode] = {\n\t\t\t\t\t_in_progress : dp._in_progress,\n\t\t\t\t\t_invalid : dp._invalid,\n\t\t\t\t\tupdatedRows : dp.updatedRows\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar newState = modes[mode];\n\t\t\tif(!newState){\n\t\t\t\tnewState = modes[mode] = {\n\t\t\t\t\t_in_progress : {},\n\t\t\t\t\t_invalid : {},\n\t\t\t\t\tupdatedRows : []\n\t\t\t\t};\n\t\t\t}\n\t\t\tdp._in_progress = newState._in_progress;\n\t\t\tdp._invalid = newState._invalid;\n\t\t\tdp.updatedRows = newState.updatedRows;\n\t\t\tdp.modes = modes;\n\t\t\tdp._ganttMode = mode;\n\t\t};\n\n\t\toldAfterUpdate = dp.afterUpdate;\n\t\tdp.afterUpdate = function(){\n\t\t\tvar xml;\n\t\t\tif(arguments.length == 3){\n\t\t\t\txml = arguments[1];\n\t\t\t}else{\n\t\t\t\t// old dataprocessor\n\t\t\t\txml = arguments[4];\n\t\t\t}\n\t\t\tvar mode = dp._ganttMode;\n\t\t\tvar reqUrl = xml.filePath;\n\n\t\t\tif(this._tMode != \"REST\" && this._tMode != \"REST-JSON\"){\n\t\t\t\tif (reqUrl.indexOf(\"gantt_mode=links\") != -1) {\n\t\t\t\t\tmode = \"links\";\n\t\t\t\t}else{\n\t\t\t\t\tmode = \"tasks\";\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(reqUrl.indexOf(\"/link\") > reqUrl.indexOf(\"/task\")){\n\t\t\t\t\tmode = \"links\";\n\t\t\t\t}else{\n\t\t\t\t\tmode = \"tasks\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp.setGanttMode(mode);\n\n\t\t\tvar res = oldAfterUpdate.apply(dp, arguments);\n\t\t\tdp.setGanttMode(mode);\n\t\t\treturn res;\n\t\t};\n\n\t\tdp._getRowData=gantt.bind(function(id, pref) {\n\t\t\tvar task;\n\t\t\tif (dp._ganttMode == \"tasks\")\n\t\t\t\ttask = this.isTaskExists(id) ? this.getTask(id) : { id: id };\n\t\t\telse\n\t\t\t\ttask = this.isLinkExists(id) ? this.getLink(id) : { id: id };\n\n\t\t\ttask = gantt.copy(task);\n\n\t\t\tvar data = {};\n\t\t\tfor (var key in task) {\n\t\t\t\tif (key.substr(0, 1) == \"$\") continue;\n\t\t\t\tvar value = task[key];\n\t\t\t\tif (helpers.isDate(value))\n\t\t\t\t\tdata[key] = this.templates.xml_format(value);\n\t\t\t\telse if(value === null)\n\t\t\t\t\tdata[key] = \"\";\n\t\t\t\telse\n\t\t\t\t\tdata[key] = value;\n\t\t\t}\n\n\t\t\tvar taskTiming = this._get_task_timing_mode(task);\n\t\t\tif(taskTiming.$no_start){\n\t\t\t\ttask.start_date = \"\";\n\t\t\t\ttask.duration = \"\";\n\t\t\t}\n\t\t\tif(taskTiming.$no_end){\n\t\t\t\ttask.end_date = \"\";\n\t\t\t\ttask.duration = \"\";\n\t\t\t}\n\t\t\tdata[dp.action_param] = this.getUserData(id, dp.action_param);\n\t\t\treturn data;\n\t\t}, gantt);\n\t}\n\n\tfunction extendGantt(gantt, dp){\n\t\tgantt._change_id = gantt.bind(function(oldid, newid) {\n\t\t\tif (dp._ganttMode != \"tasks\")\n\t\t\t\tthis.changeLinkId(oldid, newid);\n\t\t\telse\n\t\t\t\tthis.changeTaskId(oldid, newid);\n\t\t}, this);\n\n\t\tgantt._row_style = function(row_id, classname){\n\t\t\tif (dp._ganttMode != \"tasks\") return;\n\t\t\tif(!gantt.isTaskExists(row_id))\n\t\t\t\treturn;\n\n\t\t\tvar task = gantt.getTask(row_id);\n\t\t\ttask.$dataprocessor_class = classname;\n\t\t\tgantt.refreshTask(row_id);\n\t\t};\n\n\t\t// fake method for dataprocessor\n\t\tgantt._delete_task = function(row_id, node){};\n\n\t\tgantt._sendTaskOrder = function(id, item){\n\t\t\tif(item.$drop_target){\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\t\t\t\tthis.getTask(id).target = item.$drop_target;\n\t\t\t\tdp.setUpdated(id, true,\"order\");\n\t\t\t\tdelete this.getTask(id).$drop_target;\n\t\t\t}\n\t\t};\n\n\t\tthis._dp = dp;\n\t}\n\n\tfunction attachDataProcessorEvents(gantt, dp){\n\t\tfunction clientSideDelete(id){\n\t\t\tvar updated = dp.updatedRows.slice();\n\t\t\tvar clientOnly = false;\n\n\t\t\tfor(var i = 0; i < updated.length && !dp._in_progress[id]; i++){\n\t\t\t\tif(updated[i] == id ){\n\t\t\t\t\tif(gantt.getUserData(id, \"!nativeeditor_status\") == \"inserted\"){\n\t\t\t\t\t\tclientOnly = true;\n\t\t\t\t\t}\n\t\t\t\t\tdp.setUpdated(id,false);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn clientOnly;\n\t\t}\n\n\t\tfunction getTaskLinks(task){\n\t\t\tvar links = [];\n\n\t\t\tif (task.$source) {\n\t\t\t\tlinks = links.concat(task.$source);\n\t\t\t}\n\t\t\tif (task.$target) {\n\t\t\t\tlinks = links.concat(task.$target);\n\t\t\t}\n\n\t\t\treturn links;\n\t\t}\n\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterTaskAdd\", function(id, item) {\n\t\t\tif(gantt.isTaskExists(id)){\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\t\t\t\tdp.setUpdated(id,true,\"inserted\");\n\t\t\t}\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterTaskUpdate\", function(id, item) {\n\t\t\tif(gantt.isTaskExists(id)){\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\t\t\t\tdp.setUpdated(id,true);\n\n\t\t\t\tgantt._sendTaskOrder(id, item);\n\t\t\t}\n\t\t}));\n\n\t\tvar treeHelper = require(\"../../utils/task_tree_helpers\");\n\t\tvar cascadeDelete = {};\n\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onBeforeTaskDelete\", function(id, item){\n\t\t\tif(!gantt.config.cascade_delete){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcascadeDelete[id] = {\n\t\t\t\ttasks: treeHelper.getSubtreeTasks(gantt, id),\n\t\t\t\tlinks: treeHelper.getSubtreeLinks(gantt, id)\n\t\t\t};\n\t\t\treturn true;\n\t\t}));\n\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterTaskDelete\", function(id, item) {\n\t\t\tdp.setGanttMode(\"tasks\");\n\n\t\t\t// not send delete request if item is not inserted into the db - just remove it from the client\n\t\t\tvar needDbDelete = !clientSideDelete(id);\n\t\t\tif(!needDbDelete)\n\t\t\t\treturn;\n\t\t\t\n\t\t\tif(gantt.config.cascade_delete && cascadeDelete[id]){\n\t\t\t\tvar dpMode = dp.updateMode;\n\t\t\t\tdp.setUpdateMode(\"off\");\n\n\t\t\t\tvar cascade = cascadeDelete[id];\n\t\t\t\tfor(var i in cascade.tasks){\n\t\t\t\t\tif(!clientSideDelete(i)){\n\t\t\t\t\t\tdp.setUpdated(i, true, \"deleted\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdp.setGanttMode(\"links\");\n\t\t\t\tfor(var i in cascade.links){\n\t\t\t\t\tif(!clientSideDelete(i)){\n\t\t\t\t\t\tdp.setUpdated(i, true, \"deleted\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcascadeDelete[id] = null;\n\n\t\t\t\tif(dpMode != \"off\"){\n\t\t\t\t\tdp.sendAllData();\n\t\t\t\t}\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\n\t\t\t\tdp.setUpdateMode(dpMode);\n\n\t\t\t}\n\n\t\t\tdp.setUpdated(id,true,\"deleted\");\n\n\t\t\tif(dp.updateMode != 'off' && !dp._tSend){\n\t\t\t\tdp.sendAllData();\n\t\t\t}\n\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterLinkUpdate\", function(id, item) {\n\t\t\tif(gantt.isLinkExists(id)){\n\t\t\t\tdp.setGanttMode(\"links\");\n\t\t\t\tdp.setUpdated(id, true);\n\t\t\t}\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterLinkAdd\", function(id, item) {\n\t\t\tif(gantt.isLinkExists(id)){\n\t\t\t\tdp.setGanttMode(\"links\");\n\t\t\t\tdp.setUpdated(id, true,\"inserted\");\n\t\t\t}\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterLinkDelete\", function(id, item) {\n\t\t\tdp.setGanttMode(\"links\");\n\n\t\t\tvar needDbDelete = !clientSideDelete(id);\n\t\t\tif(!needDbDelete)\n\t\t\t\treturn;\n\n\t\t\tdp.setUpdated(id, true,\"deleted\");\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onRowDragEnd\", function(id, target) {\n\t\t\tgantt._sendTaskOrder(id, gantt.getTask(id));\n\t\t}));\n\n\t\tvar tasks = null,\n\t\t\tlinks = null;\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onTaskIdChange\",function(oldId, newId){\n\t\t\tif(!dp._waitMode) return;\n\n\t\t\tvar children = gantt.getChildren(newId);\n\t\t\tif(children.length) {\n\t\t\t\ttasks = tasks || {};\n\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tvar ch = this.getTask(children[i]);\n\t\t\t\t\ttasks[ch.id] = ch;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar item = this.getTask(newId),\n\t\t\t\titemLinks = getTaskLinks(item);\n\n\t\t\tif(itemLinks.length) {\n\t\t\t\tlinks = links || {};\n\n\t\t\t\tfor (var i = 0; i < itemLinks.length; i++) {\n\t\t\t\t\tvar link = this.getLink(itemLinks[i]);\n\t\t\t\t\tlinks[link.id] = link;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tdp.attachEvent(\"onAfterUpdateFinish\", function(){\n\t\t\tif(tasks || links){\n\t\t\t\tgantt.batchUpdate(function(){\n\t\t\t\t\tfor(var id in tasks){\n\t\t\t\t\t\tgantt.updateTask(tasks[id].id);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var id in links){\n\t\t\t\t\t\tgantt.updateLink(links[id].id);\n\t\t\t\t\t}\n\t\t\t\t\ttasks = null;\n\t\t\t\t\tlinks = null;\n\t\t\t\t});\n\t\t\t\tif(tasks) {\n\t\t\t\t\tgantt._dp.setGanttMode(\"tasks\");\n\t\t\t\t}else{\n\t\t\t\t\tgantt._dp.setGanttMode(\"links\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tdp.attachEvent(\"onBeforeDataSending\", function() {\n\t\t\tvar url = this._serverProcessor;\n\t\t\tif(this._tMode == \"REST-JSON\" || this._tMode == \"REST\"){\n\t\t\t\tvar mode = this._ganttMode.substr(0, this._ganttMode.length - 1);// links, tasks -> /link/id, /task/id\n\n\t\t\t\turl = url.substring(0, url.indexOf(\"?\") > -1 ? url.indexOf(\"?\") : url.length);\n\t\t\t\t//editing=true&\n\t\t\t\tthis.serverProcessor = url + (url.slice(-1) == \"/\" ? \"\" : \"/\") + mode;\n\t\t\t}else{\n\t\t\t\tthis.serverProcessor = url + gantt.ajax.urlSeparator(url) + \"gantt_mode=\" + this._ganttMode;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tvar dataProcessorHandlers = [];\n\n\tgantt._dp_init = function(dp) {\n\t\tgantt.assert(!this._dp, \"The dataProcessor is already attached to this gantt instance\");\n\n\t\tdp.setTransactionMode(\"POST\", true);\n\t\tdp.serverProcessor += (dp.serverProcessor.indexOf(\"?\") != -1 ? \"&\" : \"?\") + \"editing=true\";\n\t\tdp._serverProcessor = dp.serverProcessor;\n\t\tdp.$gantt = this;\n\t\tdp.styles = {\n\t\t\tupdated:\"gantt_updated\",\n\t\t\torder:\"gantt_updated\",\n\t\t\tinserted:\"gantt_inserted\",\n\t\t\tdeleted:\"gantt_deleted\",\n\t\t\tinvalid:\"gantt_invalid\",\n\t\t\terror:\"gantt_error\",\n\t\t\tclear:\"\"\n\t\t};\n\n\t\tdp._methods=[\"_row_style\",\"setCellTextStyle\",\"_change_id\",\"_delete_task\"];\n\n\t\textendDataProcessor.call(this, gantt, dp);\n\t\textendGantt.call(this, gantt, dp);\n\t\tattachDataProcessorEvents.call(this, gantt, dp);\n\n\t\tdp.attachEvent(\"onDestroy\", function(){\n\t\t\tdetachDataProcessor(gantt, dp);\n\t\t});\n\t\tliveUpdateHooks(gantt, dp);\n\n\t\tgantt.callEvent(\"onDataProcessorReady\", [dp]);\n\t};\n\n\tgantt.getUserData = function(id, name) {\n\t\tif (!this.userdata) this.userdata = {};\n\t\tif (this.userdata[id] && this.userdata[id][name]) return this.userdata[id][name];\n\t\treturn \"\";\n\t};\n\tgantt.setUserData = function(id, name, value) {\n\t\tif (!this.userdata) this.userdata = {};\n\t\tif (!this.userdata[id]) this.userdata[id] = {};\n\t\tthis.userdata[id][name] = value;\n\t};\n}\n\nmodule.exports = addDataProcessorHooks;\n","var storeRenderCreator = function(name, gantt){\n\tvar store = gantt.getDatastore(name);\n\n\tvar itemRepainter = {\n\t\trenderItem: function(id, renderer){\n\n\t\t\tvar renders = renderer.getLayers();\n\n\t\t\tvar item = store.getItem(id);\n\t\t\tif(item && store.isVisible(id)) {\n\t\t\t\tfor (var i = 0; i < renders.length; i++)\n\t\t\t\t\trenders[i].render_item(item);\n\t\t\t}\n\t\t},\n\t\trenderItems: function(renderer){\n\t\t\tvar renderers = renderer.getLayers();\n\t\t\tfor (var i = 0; i < renderers.length; i++) {\n\t\t\t\trenderers[i].clear();\n\t\t\t}\n\n\t\t\tvar data = store.getVisibleItems();\n\n\t\t\tfor (var i = 0; i < renderers.length; i++) {\n\t\t\t\trenderers[i].render_items(data);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction skipRepaint(gantt){\n\t\tvar state = gantt.$services.getService(\"state\");\n\t\tif(state.getState(\"batchUpdate\").batch_update){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstore.attachEvent(\"onStoreUpdated\", function(id, item, action){\n\t\tif(skipRepaint(gantt)){\n\t\t\treturn;\n\t\t}\n\n\t\tvar renderer = gantt.$services.getService(\"layers\").getDataRender(name);\n\n\t\tif(renderer){\n\t\t\tif(!id || action == \"move\" || action == \"delete\"){\n\t\t\t\tstore.callEvent(\"onBeforeRefreshAll\", []);\n\t\t\t\titemRepainter.renderItems(renderer);\n\t\t\t\tstore.callEvent(\"onAfterRefreshAll\", []);\n\t\t\t}else{\n\t\t\t\tstore.callEvent(\"onBeforeRefreshItem\", [item.id]);\n\t\t\t\titemRepainter.renderItem(item.id, renderer);\n\t\t\t\tstore.callEvent(\"onAfterRefreshItem\", [item.id]);\n\t\t\t}\n\t\t}\n\n\t});\n\n\t// TODO: probably can be done more in a more efficient way\n\tstore.attachEvent(\"onItemOpen\", function(){\n\t\tgantt.render();\n\t});\n\n\tstore.attachEvent(\"onItemClose\", function(){\n\t\tgantt.render();\n\t});\n\n\tfunction refreshId(renders, oldId, newId, item) {\n\t\tfor (var i = 0; i < renders.length; i++) {\n\t\t\trenders[i].change_id(oldId, newId);\n\t\t}\n\t}\n\n\tstore.attachEvent(\"onIdChange\", function(oldId, newId){\n\n\t\t// in case of linked datastores (tasks <-> links), id change should recalculate something in linked datastore before any repaint\n\t\t// use onBeforeIdChange for this hook.\n\t\t// TODO: use something more reasonable instead\n\t\tstore.callEvent(\"onBeforeIdChange\", [oldId, newId]);\n\n\t\tif(skipRepaint(gantt)){\n\t\t\treturn;\n\t\t}\n\t\tvar renderer = gantt.$services.getService(\"layers\").getDataRender(name);\n\t\trefreshId(renderer.getLayers(), oldId, newId, store.getItem(newId));\n\t\titemRepainter.renderItem(newId, renderer);\n\t});\n\n};\n\nmodule.exports = {\n\tbindDataStore: storeRenderCreator\n};","function createDataStoreSelectMixin(store){\n\tvar selectedId = null;\n\n\tvar deleteItem = store._removeItemInner;\n\t\n\tfunction unselect(id){\n\t\tselectedId = null;\n\t\tthis.callEvent(\"onAfterUnselect\", [id]);\n\t}\n\n\tstore._removeItemInner = function(id){\n\t\tif(selectedId == id){\n\t\t\tunselect.call(this, id);\n\t\t}\n\n\t\tif(selectedId && this.eachItem){\n\t\t\tthis.eachItem(function(subItem){\n\t\t\t\tif(subItem.id == selectedId){\n\t\t\t\t\tunselect.call(this, subItem.id);\n\t\t\t\t}\n\t\t\t}, id);\n\t\t}\n\n\t\treturn deleteItem.apply(this, arguments);\n\t};\n\n\tstore.attachEvent(\"onIdChange\", function(oldId, newId) {\n\t\tif (store.getSelectedId() == oldId) {\n\t\t\tstore.silent(function () {\n\t\t\t\tstore.unselect(oldId);\n\t\t\t\tstore.select(newId);\n\t\t\t});\n\t\t}\n\t});\n\n\treturn {\n\t\tselect: function(id){\n\t\t\tif (id){\n\n\t\t\t\tif(selectedId == id)\n\t\t\t\t\treturn selectedId;\n\n\t\t\t\tif(!this._skip_refresh) {\n\t\t\t\t\tif (!this.callEvent(\"onBeforeSelect\", [id])) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.unselect();\n\n\t\t\t\tselectedId = id;\n\n\t\t\t\tif(!this._skip_refresh) {\n\t\t\t\t\tthis.refresh(id);\n\t\t\t\t\tthis.callEvent(\"onAfterSelect\", [id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn selectedId;\n\t\t},\n\t\tgetSelectedId: function(){\n\t\t\treturn selectedId;\n\t\t},\n\t\tunselect: function(id){\n\t\t\tvar id = id || selectedId;\n\t\t\tif(!id)\n\t\t\t\treturn;\n\t\t\tselectedId = null;\n\t\t\tif(!this._skip_refresh){\n\t\t\t\tthis.refresh(id);\n\t\t\t\tunselect.call(this, id);\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = createDataStoreSelectMixin;","var powerArray = require(\"./power_array\");\nvar utils = require(\"../../utils/utils\");\nvar DataStore = require(\"./datastore\");\n\nvar TreeDataStore = function(config){\n\tDataStore.apply(this, [config]);\n\tthis._branches = {};\n\n\tthis.pull = {};\n\tthis.$initItem = config.initItem;\n\tthis.$parentProperty = config.parentProperty || \"parent\";\n\n\tif(typeof config.rootId !== \"function\"){\n\t\tthis.$getRootId = (function(val){\n\t\t\treturn function(){return val;};\n\t\t})(config.rootId || 0);\n\t}else{\n\t\tthis.$getRootId = config.rootId;\n\t}\n\n\t// TODO: replace with live reference to gantt config\n\tthis.$openInitially = config.openInitially;\n\n\tthis.visibleOrder = powerArray.$create();\n\tthis.fullOrder = powerArray.$create();\n\tthis._searchVisibleOrder = {};\n\tthis._skip_refresh = false;\n\n\tthis.attachEvent(\"onFilterItem\", function(id, item){\n\t\tvar open = true;\n\t\tthis.eachParent(function(parent){\n\t\t\topen = open && parent.$open && !(this._isSplitItem(parent));\n\t\t}, item);\n\t\treturn !!open;\n\t});\n\n\treturn this;\n};\n\nTreeDataStore.prototype = utils.mixin({\n\n\t\t_buildTree: function(data){\n\t\t\tvar item = null;\n\t\t\tvar rootId = this.$getRootId();\n\t\t\tfor (var i = 0, len = data.length; i < len; i++){\n\t\t\t\titem = data[i];\n\t\t\t\tthis.setParent(item, this.getParent(item) || rootId);\n\t\t\t}\n\n\t\t\t// calculating $level for each item\n\t\t\tfor (var i = 0, len = data.length; i < len; i++){\n\t\t\t\titem = data[i];\n\t\t\t\tthis._add_branch(item);\n\t\t\t\titem.$level = this.calculateItemLevel(item);\n\n\t\t\t\tif (!utils.defined(item.$open)) {\n\t\t\t\t\titem.$open = utils.defined(item.open) ? item.open : this.$openInitially();\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._updateOrder();\n\t\t},\n\t\t_isSplitItem: function(item){\n\t\t\treturn (item.render == \"split\" && this.hasChild(item.id));\n\t\t},\n\t\tparse: function(data){\n\t\t\tthis.callEvent(\"onBeforeParse\", [data]);\n\t\t\tvar loaded = this._parseInner(data);\n\t\t\tthis._buildTree(loaded);\n\t\t\tthis.filter();\n\t\t\tthis.callEvent(\"onParse\", [loaded]);\n\t\t},\n\n\t\t_addItemInner: function(item, index){\n\n\t\t\tvar parent = this.getParent(item);\n\n\t\t\tif(!utils.defined(parent)){\n\t\t\t\tparent = this.$getRootId();\n\t\t\t\tthis.setParent(item, parent);\n\t\t\t}\n\n\t\t\tvar parentIndex = this.getIndexById(parent);\n\t\t\tvar targetIndex = parentIndex + Math.min(Math.max(index, 0), this.visibleOrder.length);\n\n\t\t\tif(targetIndex*1 !== targetIndex){\n\t\t\t\ttargetIndex = undefined;\n\t\t\t}\n\t\t\tDataStore.prototype._addItemInner.call(this, item, targetIndex);\n\t\t\tthis.setParent(item, parent);\n\n\t\t\tif(item.hasOwnProperty(\"$rendered_parent\")){\n\t\t\t\tthis._move_branch(item, item.$rendered_parent);\n\t\t\t}\n\t\t\tthis._add_branch(item, index);\n\t\t},\n\t\t_changeIdInner: function(oldId, newId){\n\t\t\tvar children = this.getChildren(oldId);\n\t\t\tvar visibleOrder = this._searchVisibleOrder[oldId];\n\n\t\t\tDataStore.prototype._changeIdInner.call(this, oldId, newId);\n\n\t\t\tvar parent = this.getParent(newId);\n\n\t\t\tthis._replace_branch_child(parent, oldId, newId);\n\t\t\tfor(var i = 0; i < children.length; i++){\n\t\t\t\tthis.setParent(this.getItem(children[i]), newId);\n\t\t\t}\n\n\t\t\tthis._searchVisibleOrder[newId] = visibleOrder;\n\t\t\tdelete this._branches[oldId];\n\t\t},\n\n\t\t_traverseBranches: function(code, parent){\n\t\t\tparent = parent || this.$getRootId();\n\t\t\tvar branch = this._branches[parent];\n\t\t\tif (branch) {\n\t\t\t\tfor (var i = 0; i < branch.length; i++) {\n\t\t\t\t\tvar itemId = branch[i];\n\t\t\t\t\tcode.call(this, itemId);\n\t\t\t\t\tif (this._branches[itemId])\n\t\t\t\t\t\tthis._traverseBranches(code, itemId);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_updateOrder: function(code){\n\n\t\t\tthis.fullOrder = powerArray.$create();\n\t\t\tthis._traverseBranches(function(taskId){\n\t\t\t\tthis.fullOrder.push(taskId);\n\t\t\t});\n\n\t\t\tif(code)\n\t\t\t\tDataStore.prototype._updateOrder.call(this, code);\n\t\t},\n\n\t\t_removeItemInner: function(id){\n\n\t\t\tvar items = [];\n\t\t\tthis.eachItem(function(child){\n\t\t\t\titems.push(child);\n\t\t\t}, id);\n\n\t\t\titems.push(this.getItem(id));\n\n\t\t\tfor(var i = 0; i < items.length; i++){\n\n\t\t\t\tthis._move_branch(items[i], this.getParent(items[i]), null);\n\t\t\t\tDataStore.prototype._removeItemInner.call(this, items[i].id);\n\t\t\t\tthis._move_branch(items[i], this.getParent(items[i]), null);\n\t\t\t}\n\t\t},\n\n\t\tmove: function(sid, tindex, parent){\n\t\t\t//target id as 4th parameter\n\t\t\tvar id = arguments[3];\n\t\t\tif (id) {\n\t\t\t\tif (id === sid) return;\n\n\t\t\t\tparent = this.getParent(id);\n\t\t\t\ttindex = this.getBranchIndex(id);\n\t\t\t}\n\t\t\tif(sid == parent){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tparent = parent || this.$getRootId();\n\t\t\tvar source = this.getItem(sid);\n\t\t\tvar source_pid = this.getParent(source.id);\n\n\t\t\tvar tbranch = this.getChildren(parent);\n\n\t\t\tif (tindex == -1)\n\t\t\t\ttindex = tbranch.length + 1;\n\t\t\tif (source_pid == parent) {\n\t\t\t\tvar sindex = this.getBranchIndex(sid);\n\t\t\t\tif (sindex == tindex) return;\n\t\t\t}\n\n\t\t\tif(this.callEvent(\"onBeforeItemMove\", [sid, parent, tindex]) === false)\n\t\t\t\treturn;\n\n\t\t\tthis._replace_branch_child(source_pid, sid);\n\t\t\ttbranch = this.getChildren(parent);\n\n\t\t\tvar tid = tbranch[tindex];\n\t\t\tif (!tid) //adding as last element\n\t\t\t\ttbranch.push(sid);\n\t\t\telse\n\t\t\t\ttbranch = tbranch.slice(0, tindex).concat([ sid ]).concat(tbranch.slice(tindex));\n\n\t\t\tthis.setParent(source, parent);\n\t\t\tthis._branches[parent] = tbranch;\n\n\t\t\tvar diff = this.calculateItemLevel(source) - source.$level;\n\t\t\tsource.$level += diff;\n\t\t\tthis.eachItem(function(item){\n\t\t\t\titem.$level += diff;\n\t\t\t}, source.id, this);\n\n\n\t\t\tthis._moveInner(this.getIndexById(sid), this.getIndexById(parent) + tindex);\n\n\t\t\tthis.callEvent(\"onAfterItemMove\", [sid, parent, tindex]);\n\t\t\tthis.refresh();\n\t\t},\n\n\t\tgetBranchIndex: function(id){\n\t\t\tvar branch = this.getChildren(this.getParent(id));\n\t\t\tfor (var i = 0; i < branch.length; i++)\n\t\t\t\tif (branch[i] == id)\n\t\t\t\t\treturn i;\n\n\t\t\treturn -1;\n\t\t},\n\t\thasChild: function(id){\n\t\t\treturn (utils.defined(this._branches[id]) && this._branches[id].length);\n\t\t},\n\t\tgetChildren: function(id){\n\t\t\treturn utils.defined(this._branches[id]) ? this._branches[id] : powerArray.$create();\n\t\t},\n\n\t\tisChildOf: function(childId, parentId){\n\t\t\tif (!this.exists(childId))\n\t\t\t\treturn false;\n\t\t\tif (parentId === this.$getRootId())\n\t\t\t\treturn true;\n\n\t\t\tif (!this.hasChild(parentId))\n\t\t\t\treturn false;\n\n\t\t\tvar item = this.getItem(childId);\n\t\t\tvar pid = this.getParent(childId);\n\n\t\t\tvar parent = this.getItem(parentId);\n\t\t\tif(parent.$level >= item.$level){\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\twhile (item && this.exists(pid)) {\n\t\t\t\titem = this.getItem(pid);\n\n\t\t\t\tif (item && item.id == parentId)\n\t\t\t\t\treturn true;\n\t\t\t\tpid = this.getParent(item);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tgetSiblings: function(id){\n\t\t\tif(!this.exists(id)){\n\t\t\t\treturn powerArray.$create();\n\t\t\t}\n\t\t\tvar parent = this.getParent(id);\n\t\t\treturn this.getChildren(parent);\n\n\t\t},\n\t\tgetNextSibling: function(id){\n\t\t\tvar siblings = this.getSiblings(id);\n\t\t\tfor(var i= 0, len = siblings.length; i < len; i++){\n\t\t\t\tif(siblings[i] == id)\n\t\t\t\t\treturn siblings[i+1] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tgetPrevSibling: function(id){\n\t\t\tvar siblings = this.getSiblings(id);\n\t\t\tfor(var i= 0, len = siblings.length; i < len; i++){\n\t\t\t\tif(siblings[i] == id)\n\t\t\t\t\treturn siblings[i-1] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tgetParent: function(id){\n\t\t\tvar item = null;\n\t\t\tif(id.id !== undefined){\n\t\t\t\titem = id;\n\t\t\t}else{\n\t\t\t\titem = this.getItem(id);\n\t\t\t}\n\n\t\t\tvar parent;\n\t\t\tif(item){\n\t\t\t\tparent = item[this.$parentProperty];\n\t\t\t}else{\n\t\t\t\tparent = this.$getRootId();\n\t\t\t}\n\t\t\treturn parent;\n\n\t\t},\n\n\t\tclearAll: function(){\n\t\t\tthis._branches = {};\n\t\t\tDataStore.prototype.clearAll.call(this);\n\t\t},\n\n\t\tcalculateItemLevel: function(item){\n\t\t\tvar level = 0;\n\t\t\tthis.eachParent(function(){\n\t\t\t\tlevel++;\n\t\t\t}, item);\n\t\t\treturn level;\n\t\t},\n\n\t\t_setParentInner: function(item, new_pid, silent){\n\t\t\tif(!silent){\n\t\t\t\tif(item.hasOwnProperty(\"$rendered_parent\")){\n\t\t\t\t\tthis._move_branch(item, item.$rendered_parent, new_pid);\n\t\t\t\t}else{\n\t\t\t\t\tthis._move_branch(item, item[this.$parentProperty], new_pid);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetParent: function(item, new_pid, silent){\n\t\t\tthis._setParentInner(item, new_pid, silent);\n\n\t\t\titem[this.$parentProperty] = new_pid;\n\t\t},\n\t\teachItem: function(code, parent){\n\t\t\tparent = parent || this.$getRootId();\n\n\n\t\t\tvar branch = this.getChildren(parent);\n\t\t\tif (branch)\n\t\t\t\tfor (var i=0; i<branch.length; i++){\n\t\t\t\t\tvar item = this.pull[branch[i]];\n\t\t\t\t\tcode.call(this, item);\n\t\t\t\t\tif (this.hasChild(item.id))\n\t\t\t\t\t\tthis.eachItem(code, item.id);\n\t\t\t\t}\n\t\t},\n\t\teachParent: function(code, startItem) {\n\t\t\tvar parentsHash = {};\n\t\t\tvar item = startItem;\n\t\t\tvar parent = this.getParent(item);\n\n\t\t\twhile (this.exists(parent)) {\n\t\t\t\tif (parentsHash[parent]) {\n\t\t\t\t\tthrow new Error(\"Invalid tasks tree. Cyclic reference has been detected on task \" + parent);\n\t\t\t\t}\n\t\t\t\tparentsHash[parent] = true;\n\t\t\t\titem = this.getItem(parent);\n\t\t\t\tcode.call(this, item);\n\t\t\t\tparent = this.getParent(item);\n\t\t\t}\n\t\t},\n\t\t_add_branch: function(item, index, parent){\n\t\t\tvar pid = parent === undefined ? this.getParent(item) : parent;\n\t\t\tif (!this.hasChild(pid))\n\t\t\t\tthis._branches[pid] = powerArray.$create();\n\t\t\tvar branch = this.getChildren(pid);\n\t\t\tvar added_already = false;\n\t\t\tfor(var i = 0, length = branch.length; i < length; i++){\n\t\t\t\tif(branch[i] == item.id){\n\t\t\t\t\tadded_already = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!added_already){\n\t\t\t\tif(index*1 == index){\n\n\t\t\t\t\tbranch.splice(index, 0, item.id);\n\t\t\t\t}else{\n\t\t\t\t\tbranch.push(item.id);\n\t\t\t\t}\n\n\t\t\t\titem.$rendered_parent = pid;\n\t\t\t}\n\t\t},\n\t\t_move_branch: function(item, old_parent, new_parent){\n\t\t\t//this.setParent(item, new_parent);\n\t\t\t//this._sync_parent(task);\n\t\t\tthis._replace_branch_child(old_parent, item.id);\n\t\t\tif(this.exists(new_parent) || new_parent == this.$getRootId()){\n\n\t\t\t\tthis._add_branch(item, undefined, new_parent);\n\t\t\t}else{\n\t\t\t\tdelete this._branches[item.id];\n\t\t\t}\n\t\t\titem.$level =  this.calculateItemLevel(item);\n\t\t\tthis.eachItem(function(child){\n\t\t\t\tchild.$level = this.calculateItemLevel(child);\n\t\t\t}, item.id);\n\t\t},\n\n\t\t_replace_branch_child: function(node, old_id, new_id){\n\t\t\tvar branch = this.getChildren(node);\n\t\t\tif (branch && node !== undefined){\n\t\t\t\tvar newbranch = powerArray.$create();\n\t\t\t\tfor (var i=0; i<branch.length; i++){\n\t\t\t\t\tif (branch[i] != old_id)\n\t\t\t\t\t\tnewbranch.push(branch[i]);\n\t\t\t\t\telse if (new_id)\n\t\t\t\t\t\tnewbranch.push(new_id);\n\t\t\t\t}\n\t\t\t\tthis._branches[node] = newbranch;\n\t\t\t}\n\n\t\t},\n\n\t\tsort: function(field, desc, parent){\n\t\t\tif (!this.exists(parent)) {\n\t\t\t\tparent = this.$getRootId();\n\t\t\t}\n\n\t\t\tif (!field) field = \"order\";\n\t\t\tvar criteria = (typeof(field) == \"string\") ? (function(a, b) {\n\t\t\t\tif(a[field] == b[field]){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar result = a[field] > b[field];\n\t\t\t\treturn result ? 1 : -1;\n\t\t\t}) : field;\n\n\t\t\tif (desc) {\n\t\t\t\tvar original_criteria = criteria;\n\t\t\t\tcriteria = function (a, b) {\n\t\t\t\t\treturn original_criteria(b, a);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar els = this.getChildren(parent);\n\n\t\t\tif (els){\n\t\t\t\tvar temp = [];\n\t\t\t\tfor (var i = els.length - 1; i >= 0; i--)\n\t\t\t\t\ttemp[i] = this.getItem(els[i]);\n\n\t\t\t\ttemp.sort(criteria);\n\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\n\t\t\t\t\tels[i] = temp[i].id;\n\t\t\t\t\tthis.sort(field, desc, els[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tfilter: function(rule){\n\t\t\tfor(var i  in this.pull){\n\t\t\t\tif(this.pull[i].$rendered_parent !== this.getParent(this.pull[i])){\n\t\t\t\t\tthis._move_branch(this.pull[i], this.pull[i].$rendered_parent, this.getParent(this.pull[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn DataStore.prototype.filter.apply(this, arguments);\n\t\t},\n\n\t\topen: function(id){\n\t\t\tif(this.exists(id)){\n\t\t\t\tthis.getItem(id).$open = true;\n\t\t\t\tthis.callEvent(\"onItemOpen\", [id]);\n\t\t\t}\n\t\t},\n\n\t\tclose: function(id){\n\t\t\tif(this.exists(id)){\n\t\t\t\tthis.getItem(id).$open = false;\n\t\t\t\tthis.callEvent(\"onItemClose\", [id]);\n\t\t\t}\n\t\t},\n\n\t\tdestructor: function(){\n\t\t\tDataStore.prototype.destructor.call(this);\n\t\t\tthis._branches = null;\n\t\t}\n\t},\n\tDataStore.prototype\n);\n\nmodule.exports = TreeDataStore;","var utils = require(\"../../utils/utils\");\n\n\nvar createLinksStoreFacade = function(){\n\treturn {\n\tgetLinkCount: function () {\n\t\treturn this.$data.linksStore.count();\n\t},\n\n\tgetLink : function (id) {\n\t\treturn this.$data.linksStore.getItem(id);\n\t},\n\n\tgetLinks : function () {\n\t\treturn this.$data.linksStore.getItems();\n\t},\n\n\tisLinkExists : function (id) {\n\t\treturn this.$data.linksStore.exists(id);\n\t},\n\n\taddLink : function (link) {\n\t\treturn this.$data.linksStore.addItem(link);\n\t},\n\n\tupdateLink : function (id, data) {\n\t\tif (!utils.defined(data))\n\t\t\tdata = this.getLink(id);\n\t\tthis.$data.linksStore.updateItem(id, data);\n\t},\n\n\tdeleteLink : function (id) {\n\t\treturn this.$data.linksStore.removeItem(id);\n\t},\n\n\tchangeLinkId : function (oldid, newid) {\n\t\treturn this.$data.linksStore.changeId(oldid, newid);\n\t}\n};\n};\n\nmodule.exports = createLinksStoreFacade;","var utils = require(\"../../utils/utils\");\n\nvar createTasksDatastoreFacade = function(){\n\treturn {\n\tgetTask: function (id) {\n\t\tthis.assert(id, \"Invalid argument for gantt.getTask\");\n\t\tvar task = this.$data.tasksStore.getItem(id);\n\t\tthis.assert(task, \"Task not found id=\" + id);\n\t\treturn task;\n\t},\n\tgetTaskByTime: function (from, to) {\n\t\tvar p = this.$data.tasksStore.getItems();\n\n\t\tvar res = [];\n\n\t\tif (!(from || to)) {\n\t\t\tres = p;\n\t\t} else {\n\t\t\tfrom = +from || -Infinity;\n\t\t\tto = +to || Infinity;\n\t\t\tfor (var t = 0; t < p.length; t++){\n\t\t\t\tvar task = p[t];\n\t\t\t\tif (+task.start_date < to && +task.end_date > from)\n\t\t\t\t\tres.push(task);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\tisTaskExists: function (id) {\n\t\treturn this.$data.tasksStore.exists(id);\n\t},\n\tupdateTask: function (id, item) {\n\t\tif (!utils.defined(item)) item = this.getTask(id);\n\t\tthis.$data.tasksStore.updateItem(id, item);\n\t\tif(this.isTaskExists(id))\n\t\t\tthis.refreshTask(id);\n\t},\n\taddTask: function (item, parent, index) {\n\t\tif (!utils.defined(item.id))\n\t\t\titem.id = utils.uid();\n\n\t\tif (!utils.defined(parent)) parent = this.getParent(item) || 0;\n\t\tif (!this.isTaskExists(parent)) parent = 0;\n\t\tthis.setParent(item, parent);\n\n\t\treturn this.$data.tasksStore.addItem(item, index, parent);\n\t},\n\tdeleteTask: function (id) {\n\t\treturn this.$data.tasksStore.removeItem(id);\n\t},\n\tgetTaskCount: function () {\n\t\treturn this.$data.tasksStore.count();\n\t},\n\tgetVisibleTaskCount: function () {\n\t\treturn this.$data.tasksStore.countVisible();\n\t},\n\tgetTaskIndex: function (id) {\n\t\treturn this.$data.tasksStore.getBranchIndex(id);\n\t},\n\tgetGlobalTaskIndex: function (id) {\n\t\tthis.assert(id, \"Invalid argument\");\n\t\treturn this.$data.tasksStore.getIndexById(id);\n\t},\n\teachTask: function (code, parent, master) {\n\t\treturn this.$data.tasksStore.eachItem(utils.bind(code, master||this), parent);\n\t},\n\teachParent: function (callback, startTask, master) {\n\t\treturn this.$data.tasksStore.eachParent(utils.bind(callback, master || this), startTask);\n\t},\n\tchangeTaskId: function (oldid, newid) {\n\t\tthis.$data.tasksStore.changeId(oldid, newid);\n\t\tvar task = this.$data.tasksStore.getItem(newid);\n\n\t\tvar links = [];\n\n\t\tif (task.$source) {\n\t\t\tlinks = links.concat(task.$source);\n\t\t}\n\t\tif (task.$target) {\n\t\t\tlinks = links.concat(task.$target);\n\t\t}\n\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tvar link = this.getLink(links[i]);\n\t\t\tif (link.source == oldid) {\n\t\t\t\tlink.source = newid;\n\t\t\t}\n\t\t\tif (link.target == oldid) {\n\t\t\t\tlink.target = newid;\n\t\t\t}\n\t\t}\n\t},\n\tcalculateTaskLevel: function (item) {\n\t\treturn this.$data.tasksStore.calculateItemLevel(item);\n\t},\n\tgetNext: function (id) {\n\t\treturn this.$data.tasksStore.getNext(id);\n\t},\n\tgetPrev: function (id) {\n\t\treturn this.$data.tasksStore.getPrev(id);\n\t},\n\tgetParent: function (id) {\n\t\treturn this.$data.tasksStore.getParent(id);\n\t},\n\tsetParent: function (task, new_pid, silent) {\n\t\treturn this.$data.tasksStore.setParent(task, new_pid, silent);\n\t},\n\tgetSiblings: function (id) {\n\t\treturn this.$data.tasksStore.getSiblings(id).slice();\n\t},\n\tgetNextSibling: function (id) {\n\t\treturn this.$data.tasksStore.getNextSibling(id);\n\t},\n\tgetPrevSibling: function (id) {\n\t\treturn this.$data.tasksStore.getPrevSibling(id);\n\t},\n\tgetTaskByIndex: function(index){\n\t\tvar id = this.$data.tasksStore.getIdByIndex(index);\n\t\tif(this.isTaskExists(id)){\n\t\t\treturn this.getTask(id);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t},\n\tgetChildren: function (id) {\n\t\tif(!this.hasChild(id)){\n\t\t\treturn [];\n\t\t}else{\n\t\t\treturn this.$data.tasksStore.getChildren(id).slice();\n\t\t}\n\t},\n\thasChild: function (id) {\n\t\treturn this.$data.tasksStore.hasChild(id);\n\t},\n\topen: function (id) {\n\t\tthis.$data.tasksStore.open(id);\n\t},\n\tclose: function (id) {\n\t\tthis.$data.tasksStore.close(id);\n\t},\n\tmoveTask: function (sid, tindex, parent) {\n\t\tthis.$data.tasksStore.move.apply(this.$data.tasksStore, arguments);\n\t},\n\tsort: function(field, desc, parent, silent) {\n\t\tvar render = !silent;//4th argument to cancel redraw after sorting\n\n\t\tthis.$data.tasksStore.sort(field, desc, parent);\n\t\tif (render) {\n\t\t\tthis.render();\n\t\t}\n\t\tthis.callEvent(\"onAfterSort\", [field, desc, parent]);\n\t}\n};\n};\n\nmodule.exports = createTasksDatastoreFacade;\n\n\n","var utils = require(\"../../utils/utils\");\nvar createTasksFacade = require(\"./datastore_tasks\"),\n\tcreateLinksFacade = require(\"./datastore_links\"),\n\tDataStore = require(\"../datastore/datastore\"),\n\tTreeDataStore = require(\"../datastore/treedatastore\"),\n\tcreateDatastoreSelect = require(\"../datastore/select\");\nvar datastoreRender = require(\"../datastore/datastore_render\");\n\nfunction getDatastores(){\n\tvar storeNames = this.$services.getService(\"datastores\");\n\tvar res = [];\n\tfor(var i = 0; i < storeNames.length; i++){\n\t\tres.push(this.getDatastore(storeNames[i]));\n\t}\n\treturn res;\n}\n\nvar createDatastoreFacade = function(){\n\treturn {\n\tcreateDatastore: function(config){\n\n\t\tvar $StoreType = (config.type || \"\").toLowerCase() == \"treedatastore\" ? TreeDataStore : DataStore;\n\n\t\tif(config){\n\t\t\tvar self = this;\n\t\t\tconfig.openInitially = function(){ return self.config.open_tree_initially; };\n\t\t}\n\n\t\tvar store = new $StoreType(config);\n\t\tthis.mixin(store, createDatastoreSelect(store));\n\n\t\tif(config.name){\n\n\t\t\tthis.$services.setService(\"datastore:\" + config.name, function(){return store;});\n\t\t\tvar storeList = this.$services.getService(\"datastores\");\n\t\t\tif(!storeList){\n\t\t\t\tstoreList = [];\n\t\t\t\tthis.$services.setService(\"datastores\", function(){return storeList;});\n\t\t\t}\n\t\t\tstoreList.push(config.name);\n\n\t\t\tdatastoreRender.bindDataStore(config.name, this);\n\t\t}\n\n\t\treturn store;\n\t},\n\tgetDatastore: function(name){\n\t\treturn this.$services.getService(\"datastore:\" + name);\n\t},\n\n\trefreshData: function () {\n\t\tvar scrollState = this.getScrollState();\n\t\tthis.callEvent(\"onBeforeDataRender\", []);\n\n\t\tvar stores = getDatastores.call(this);\n\t\tfor(var i = 0; i < stores.length; i++){\n\t\t\tstores[i].refresh();\n\t\t}\n\n\t\tif(scrollState.x || scrollState.y){\n\t\t\tthis.scrollTo(scrollState.x, scrollState.y);\n\t\t}\n\t\tthis.callEvent(\"onDataRender\", []);\n\t},\n\n\tisChildOf: function(childId, parentId){\n\t\treturn this.$data.tasksStore.isChildOf(childId, parentId);\n\t},\n\n\trefreshTask: function (taskId, refresh_links) {\n\t\tvar task = this.getTask(taskId);\n\t\tif (task && this.isTaskVisible(taskId)) {\n\n\t\t\tthis.$data.tasksStore.refresh(taskId, !!this.getState().drag_id);// do quick refresh during drag and drop\n\n\t\t\tif (refresh_links !== undefined && !refresh_links)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0; i < task.$source.length; i++) {\n\t\t\t\tthis.refreshLink(task.$source[i]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < task.$target.length; i++) {\n\t\t\t\tthis.refreshLink(task.$target[i]);\n\t\t\t}\n\t\t}else if(this.isTaskExists(taskId) && this.isTaskExists(this.getParent(taskId))){\n\t\t\tthis.refreshTask(this.getParent(taskId));\n\t\t}\n\n\t},\n\trefreshLink: function (linkId) {\n\t\tthis.$data.linksStore.refresh(linkId, !!this.getState().drag_id);// do quick refresh during drag and drop\n\t},\n\n\tsilent: function(code){\n\t\tvar gantt = this;\n\t\tgantt.$data.tasksStore.silent(function(){\n\t\t\tgantt.$data.linksStore.silent(function(){\n\t\t\t\tcode();\n\t\t\t});\n\t\t});\n\t},\n\n\tclearAll: function () {\n\t\tvar stores = getDatastores.call(this);\n\t\tfor(var i = 0; i < stores.length; i++){\n\t\t\tstores[i].clearAll();\n\t\t}\n\n\t\tthis._update_flags();\n\t\tthis.userdata = {};\n\t\tthis.callEvent(\"onClear\", []);\n\t\tthis.render();\n\t},\n\t_clear_data: function () {\n\t\tthis.$data.tasksStore.clearAll();\n\t\tthis.$data.linksStore.clearAll();\n\t\tthis._update_flags();\n\t\tthis.userdata = {};\n\t},\n\n\tselectTask: function(id){\n\t\tvar store = this.$data.tasksStore;\n\t\tif(!this.config.select_task)\n\t\t\treturn false;\n\t\tif (id){\n\n\t\t\tstore.select(id);\n\t\t}\n\t\treturn store.getSelectedId();\n\t},\n\tunselectTask: function(id){\n\t\tvar store = this.$data.tasksStore;\n\t\tstore.unselect(id);\n\t},\n\tgetSelectedId: function() {\n\t\treturn this.$data.tasksStore.getSelectedId();\n\t}\n};\n};\n\nfunction createFacade(){\n\tvar res = utils.mixin({}, createDatastoreFacade());\n\tutils.mixin(res, createTasksFacade());\n\tutils.mixin(res, createLinksFacade());\n\treturn res;\n}\n\n\n\n\nmodule.exports = {create: createFacade};","var utils = require(\"../../utils/utils\");\nvar facadeFactory = require(\"./../facades/datastore\");\nvar calculateScaleRange = require(\"../gantt_data_range\");\nfunction initDataStores(gantt){\n\n\tvar facade = facadeFactory.create();\n\tutils.mixin(gantt, facade);\n\tvar tasksStore = gantt.createDatastore({\n\t\tname: \"task\",\n\t\ttype: \"treeDatastore\",\n\t\trootId: function(){return gantt.config.root_id;},\n\t\tinitItem: utils.bind(_init_task, gantt)\n\t});\n\n\tvar linksStore = gantt.createDatastore({\n\t\tname: \"link\",\n\t\tinitItem: utils.bind(_init_link, gantt)\n\t});\n\n\ttasksStore.attachEvent(\"onBeforeRefreshAll\", function(){\n\n\t\tvar order = tasksStore.getVisibleItems();\n\n\t\tfor(var i=0; i < order.length; i++){\n\t\t\tvar item = order[i];\n\t\t\titem.$index = i;\n\t\t\tgantt.resetProjectDates(item);\n\t\t}\n\n\t});\n\n\ttasksStore.attachEvent(\"onFilterItem\", function(id, task){\n\t\tvar min = null, max = null;\n\t\tif (gantt.config.start_date && gantt.config.end_date) {\n\t\t\tif (gantt._isAllowedUnscheduledTask(task)) return true;\n\t\t\tmin = gantt.config.start_date.valueOf();\n\t\t\tmax = gantt.config.end_date.valueOf();\n\n\t\t\tif (+task.start_date > max || +task.end_date < +min)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t});\n\n\ttasksStore.attachEvent(\"onIdChange\", function(oldId, newId){\n\t\tgantt._update_flags(oldId, newId);\n\t});\n\n\ttasksStore.attachEvent(\"onAfterUpdate\", function(id){\n\t\tgantt._update_parents(id);\n\t\tif(gantt.getState(\"batchUpdate\").batch_update){\n\t\t\treturn true;\n\t\t}\n\n\t\tvar task = tasksStore.getItem(id);\n\t\tfor (var i = 0; i < task.$source.length; i++) {\n\t\t\tlinksStore.refresh(task.$source[i]);\n\t\t}\n\t\tfor (var i = 0; i < task.$target.length; i++) {\n\t\t\tlinksStore.refresh(task.$target[i]);\n\t\t}\n\t});\n\n\ttasksStore.attachEvent(\"onAfterItemMove\", function(sid, parent, tindex){\n\t\tvar source = gantt.getTask(sid);\n\n\t\tif(this.getNextSibling(sid) !== null){\n\t\t\tsource.$drop_target = this.getNextSibling(sid);\n\t\t} else if(this.getPrevSibling(sid) !== null){\n\t\t\tsource.$drop_target = \"next:\" + this.getPrevSibling(sid);\n\t\t}else{\n\t\t\tsource.$drop_target = \"next:null\";\n\t\t}\n\n\t});\n\n\ttasksStore.attachEvent(\"onStoreUpdated\", function(id, item, action){\n\t\tif(action == \"delete\"){\n\t\t\tgantt._update_flags(id, null);\n\t\t}\n\n\t\tvar state = gantt.$services.getService(\"state\");\n\t\tif(state.getState(\"batchUpdate\").batch_update){\n\t\t\treturn;\n\t\t}\n\n\t\tif(gantt.config.fit_tasks && action !== \"paint\"){\n\t\t\tvar oldState = gantt.getState();\n\t\t\tcalculateScaleRange(gantt);\n\t\t\tvar newState = gantt.getState();\n\n\t\t\t//this._init_tasks_range();\n\t\t\tif (+oldState.min_date != +newState.min_date || +oldState.max_date != +newState.max_date) {\n\t\t\t\tgantt.render();\n\n\t\t\t\tgantt.callEvent(\"onScaleAdjusted\", []);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t}\n\n\t\tif(action == \"add\" || action == \"move\" || action == \"delete\"){\n\t\t\tgantt.$layout.resize();\n\t\t}else if(!id){\n\t\t\tlinksStore.refresh();\n\t\t}\n\n\t});\n\n\tlinksStore.attachEvent(\"onAfterAdd\", function(id, link){\n\t\tsync_link(link);\n\t});\n\tlinksStore.attachEvent(\"onAfterUpdate\", function(id, link){\n\t\tsync_links();\n\t});\n\tlinksStore.attachEvent(\"onAfterDelete\", function(id, link){\n\t\tsync_link_delete(link);\n\t});\n\tlinksStore.attachEvent(\"onBeforeIdChange\", function(oldId, newId){\n\t\tsync_link_delete(gantt.mixin({id:oldId}, gantt.$data.linksStore.getItem(newId)));\n\t\tsync_link(gantt.$data.linksStore.getItem(newId));\n\t});\n\n\tfunction checkLinkedTaskVisibility(taskId){\n\t\tvar isVisible = gantt.isTaskVisible(taskId);\n\t\tif(!isVisible && gantt.isTaskExists(taskId)){\n\t\t\tvar parent = gantt.getParent(taskId);\n\t\t\tif(gantt.isTaskExists(parent) && gantt.isTaskVisible(parent)){\n\t\t\t\tparent = gantt.getTask(parent);\n\t\t\t\tif(gantt.isSplitTask(parent)){\n\t\t\t\t\tisVisible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isVisible;\n\t}\n\n\tlinksStore.attachEvent(\"onFilterItem\", function(id, link){\n\t\tif (!gantt.config.show_links) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar sourceVisible = checkLinkedTaskVisibility(link.source);\n\t\tvar targetVisible = checkLinkedTaskVisibility(link.target);\n\n\t\tif (!(sourceVisible && targetVisible) ||\n\t\t\tgantt._isAllowedUnscheduledTask(gantt.getTask(link.source)) || gantt._isAllowedUnscheduledTask(gantt.getTask(link.target)))\n\t\t\treturn false;\n\n\t\treturn gantt.callEvent(\"onBeforeLinkDisplay\", [id, link]);\n\t});\n\n\n\t(function(){\n\t\t// delete all connected links after task is deleted\n\t\tvar treeHelper = require(\"../../utils/task_tree_helpers\");\n\t\tvar deletedLinks = {};\n\n\t\tgantt.attachEvent(\"onBeforeTaskDelete\", function(id, item){\n\t\t\tdeletedLinks[id] = treeHelper.getSubtreeLinks(gantt, id);\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onAfterTaskDelete\", function(id, item) {\n\t\t\tif(deletedLinks[id]){\n\t\t\t\tgantt.$data.linksStore.silent(function(){\n\t\t\t\t\tfor(var i in deletedLinks[id]){\n\t\t\t\t\t\tgantt.$data.linksStore.removeItem(i);\n\t\t\t\t\t\tsync_link_delete(deletedLinks[id][i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tdeletedLinks[id] = null;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t})();\n\n\tgantt.attachEvent(\"onAfterLinkDelete\", function(id, link) {\n\t\tgantt.refreshTask(link.source);\n\t\tgantt.refreshTask(link.target);\n\t});\n\n\tgantt.attachEvent(\"onParse\", sync_links);\n\n\tmapEvents({\n\t\tsource: linksStore,\n\t\ttarget: gantt,\n\t\tevents:{\n\t\t\t\"onItemLoading\":\"onLinkLoading\",\n\t\t\t\"onBeforeAdd\":\"onBeforeLinkAdd\",\n\t\t\t\"onAfterAdd\":\"onAfterLinkAdd\",\n\t\t\t\"onBeforeUpdate\":\"onBeforeLinkUpdate\",\n\t\t\t\"onAfterUpdate\":\"onAfterLinkUpdate\",\n\t\t\t\"onBeforeDelete\":\"onBeforeLinkDelete\",\n\t\t\t\"onAfterDelete\":\"onAfterLinkDelete\",\n\t\t\t\"onIdChange\":\"onLinkIdChange\"\n\t\t}\n\t});\n\n\tmapEvents({\n\t\tsource: tasksStore,\n\t\ttarget: gantt,\n\t\tevents:{\n\t\t\t\"onItemLoading\":\"onTaskLoading\",\n\t\t\t\"onBeforeAdd\":\"onBeforeTaskAdd\",\n\t\t\t\"onAfterAdd\":\"onAfterTaskAdd\",\n\t\t\t\"onBeforeUpdate\":\"onBeforeTaskUpdate\",\n\t\t\t\"onAfterUpdate\":\"onAfterTaskUpdate\",\n\t\t\t\"onBeforeDelete\":\"onBeforeTaskDelete\",\n\t\t\t\"onAfterDelete\":\"onAfterTaskDelete\",\n\t\t\t\"onIdChange\":\"onTaskIdChange\",\n\t\t\t\"onBeforeItemMove\":\"onBeforeTaskMove\",\n\t\t\t\"onAfterItemMove\":\"onAfterTaskMove\",\n\t\t\t\"onFilterItem\":\"onBeforeTaskDisplay\",\n\t\t\t\"onItemOpen\":\"onTaskOpened\",\n\t\t\t\"onItemClose\":\"onTaskClosed\",\n\t\t\t\"onBeforeSelect\":\"onBeforeTaskSelected\",\n\t\t\t\"onAfterSelect\":\"onTaskSelected\",\n\t\t\t\"onAfterUnselect\":\"onTaskUnselected\"\n\t\t}\n\t});\n\n\tgantt.$data = {\n\t\ttasksStore: tasksStore,\n\t\tlinksStore: linksStore\n\t};\n\n\tfunction sync_link(link){\n\t\tif(gantt.isTaskExists(link.source)){\n\t\t\tvar sourceTask = gantt.getTask(link.source);\n\t\t\tsourceTask.$source = sourceTask.$source || [];\n\t\t\tsourceTask.$source.push(link.id);\n\t\t}\n\t\tif(gantt.isTaskExists(link.target)){\n\t\t\tvar targetTask = gantt.getTask(link.target);\n\t\t\ttargetTask.$target = targetTask.$target || [];\n\t\t\ttargetTask.$target.push(link.id);\n\t\t}\n\t}\n\n\tfunction sync_link_delete(link){\n\t\tif(gantt.isTaskExists(link.source)){\n\t\t\tvar sourceTask = gantt.getTask(link.source);\n\t\t\tfor(var i = 0; i < sourceTask.$source.length; i++){\n\t\t\t\tif(sourceTask.$source[i] == link.id){\n\t\t\t\t\tsourceTask.$source.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(gantt.isTaskExists(link.target)){\n\t\t\tvar targetTask = gantt.getTask(link.target);\n\t\t\tfor(var i = 0; i < targetTask.$target.length; i++){\n\t\t\t\tif(targetTask.$target[i] == link.id){\n\t\t\t\t\ttargetTask.$target.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction sync_links() {\n\t\tvar task = null;\n\t\tvar tasks = gantt.$data.tasksStore.getItems();\n\n\t\tfor(var i = 0, len = tasks.length; i < len; i++){\n\t\t\ttask = tasks[i];\n\t\t\ttask.$source = [];\n\t\t\ttask.$target = [];\n\t\t}\n\n\t\tvar links = gantt.$data.linksStore.getItems();\n\t\tfor (var i = 0, len = links.length; i < len; i++) {\n\n\t\t\tvar link = links[i];\n\t\t\tsync_link(link);\n\t\t}\n\t}\n\n\tfunction mapEvents(conf){\n\t\tvar mapFrom = conf.source;\n\t\tvar mapTo = conf.target;\n\t\tfor(var i in conf.events){\n\t\t\t(function(sourceEvent, targetEvent){\n\t\t\t\tmapFrom.attachEvent(sourceEvent, function(){\n\t\t\t\t\treturn mapTo.callEvent(targetEvent, Array.prototype.slice.call(arguments));\n\t\t\t\t}, targetEvent);\n\t\t\t})(i, conf.events[i]);\n\t\t}\n\t}\n\n\tfunction _init_task(task) {\n\t\tif (!this.defined(task.id))\n\t\t\ttask.id = this.uid();\n\n\t\tif (task.start_date)\n\t\t\ttask.start_date = gantt.date.parseDate(task.start_date, \"xml_date\");\n\t\tif (task.end_date)\n\t\t\ttask.end_date = gantt.date.parseDate(task.end_date, \"xml_date\");\n\n\n\t\tvar duration = null;\n\t\tif (task.duration || task.duration === 0) {\n\t\t\ttask.duration = duration = task.duration * 1;\n\t\t}\n\n\t\tif (duration) {\n\t\t\tif (task.start_date && !task.end_date) {\n\t\t\t\ttask.end_date = this.calculateEndDate(task);\n\t\t\t} else if (!task.start_date && task.end_date) {\n\t\t\t\ttask.start_date = this.calculateEndDate({\n\t\t\t\t\tstart_date: task.end_date,\n\t\t\t\t\tduration: -task.duration,\n\t\t\t\t\ttask: task\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\tif (this._isAllowedUnscheduledTask(task)) {\n\t\t\tthis._set_default_task_timing(task);\n\t\t}\n\t\tthis._init_task_timing(task);\n\t\tif (task.start_date && task.end_date)\n\t\t\tthis.correctTaskWorkTime(task);\n\n\t\ttask.$source = [];\n\t\ttask.$target = [];\n\t\tif (task.parent === undefined) {\n\t\t\tthis.setParent(task, this.config.root_id);\n\t\t}\n\n\t\treturn task;\n\t}\n\n\tfunction _init_link(link) {\n\t\tif (!this.defined(link.id))\n\t\t\tlink.id = this.uid();\n\t\treturn link;\n\t}\n}\n\n\nmodule.exports = initDataStores;\n","function createLayoutFacade(){\n\n\tfunction getTimeline(gantt){\n\t\treturn gantt.$ui.getView(\"timeline\");\n\t}\n\n\tfunction getGrid(gantt){\n\t\treturn gantt.$ui.getView(\"grid\");\n\t}\n\n\tfunction getVerticalScrollbar(gantt){\n\t\treturn gantt.$ui.getView(\"scrollVer\");\n\t}\n\n\tfunction getHorizontalScrollbar(gantt){\n\t\treturn gantt.$ui.getView(\"scrollHor\");\n\t}\n\n\tvar DEFAULT_VALUE = \"DEFAULT_VALUE\";\n\n\tfunction tryCall(getView, method, args, fallback){\n\t\tvar view = getView(this);\n\t\tif (!(view && view.isVisible())) {\n\t\t\tif(fallback){\n\t\t\t\treturn fallback();\n\t\t\t}else{\n\t\t\t\treturn DEFAULT_VALUE;\n\t\t\t}\n\t\t} else {\n\t\t\treturn view[method].apply(view, args);\n\t\t}\n\t}\n\n\treturn {\n\n\t\tgetColumnIndex: function(name) {\n\t\t\tvar res = tryCall.call(this, getGrid, \"getColumnIndex\", [name]);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tdateFromPos: function(x) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"dateFromPos\", Array.prototype.slice.call(arguments));\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn this.getState().min_date;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tposFromDate: function(date) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"posFromDate\", [date]);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetRowTop: function(index) {\n\t\t\tvar self = this;\n\t\t\tvar res = tryCall.call(self, getTimeline, \"getRowTop\", [index],\n\t\t\t\tfunction(){ return tryCall.call(self, getGrid, \"getRowTop\", [index]);}\n\t\t\t\t);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetTaskTop: function(id) {\n\t\t\tvar self = this;\n\t\t\tvar res = tryCall.call(self, getTimeline, \"getItemTop\", [id],\n\t\t\t\tfunction(){ return tryCall.call(self, getGrid, \"getItemTop\", [id]);}\n\t\t\t);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\n\t\tgetTaskPosition: function(task, start_date, end_date) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"getItemPosition\", [task, start_date, end_date]);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\tvar top = this.getTaskTop(task.id);\n\t\t\t\tvar height = this.getTaskHeight();\n\n\t\t\t\treturn {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: top,\n\t\t\t\t\theight: height,\n\t\t\t\t\twidth: 0\n\t\t\t\t};\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetTaskHeight: function() {\n\t\t\tvar self = this;\n\t\t\tvar res = tryCall.call(self, getTimeline, \"getItemHeight\", [],\n\t\t\t\tfunction(){ return tryCall.call(self, getGrid, \"getItemHeight\", []);}\n\t\t\t);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\n\t\tcolumnIndexByDate: function(date) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"columnIndexByDate\", [date]);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\troundTaskDates: function() {\n\t\t\ttryCall.call(this, getTimeline, \"roundTaskDates\", []);\n\t\t},\n\n\t\tgetScale: function() {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"getScale\", []);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn null;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetTaskNode: function(id) {\n\t\t\tvar timeline = getTimeline(this);\n\t\t\tif (!timeline || !timeline.isVisible()) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn timeline._taskRenderer.rendered[id];\n\t\t\t}\n\t\t},\n\n\n\t\tgetLinkNode: function(id) {\n\t\t\tvar timeline = getTimeline(this);\n\t\t\tif (!timeline.isVisible()) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn timeline._linkRenderer.rendered[id];\n\t\t\t}\n\t\t},\n\n\t\tscrollTo: function(left, top){\n\t\t\tvar vertical = getVerticalScrollbar(this);\n\t\t\tvar horizontal = getHorizontalScrollbar(this);\n\n\t\t\tvar oldH = {position: 0},\n\t\t\t\toldV = {position: 0};\n\n\t\t\tif(vertical){\n\t\t\t\toldV = vertical.getScrollState();\n\t\t\t}\n\t\t\tif(horizontal){\n\t\t\t\toldH = horizontal.getScrollState();\n\t\t\t}\n\n\t\t\tif (horizontal && left*1 == left){\n\t\t\t\thorizontal.scroll(left);\n\t\t\t}\n\t\t\tif(vertical && top*1 == top){\n\t\t\t\tvertical.scroll(top);\n\t\t\t}\n\n\t\t\tvar newV = {position: 0},\n\t\t\t\tnewH = {position: 0};\n\t\t\tif(vertical){\n\t\t\t\tnewV = vertical.getScrollState();\n\t\t\t}\n\t\t\tif(horizontal){\n\t\t\t\tnewH = horizontal.getScrollState();\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onGanttScroll\", [oldH.position, oldV.position, newH.position, newV.position]);\n\t\t},\n\n\t\tshowDate: function(date){\n\t\t\tvar date_x = this.posFromDate(date);\n\t\t\tvar scroll_to = Math.max(date_x - this.config.task_scroll_offset, 0);\n\t\t\tthis.scrollTo(scroll_to);\n\t\t},\n\t\tshowTask: function(id) {\n\t\t\tvar pos = this.getTaskPosition(this.getTask(id));\n\n\t\t\tvar left = Math.max(pos.left - this.config.task_scroll_offset, 0);\n\n\t\t\tvar dataHeight = this._scroll_state().y;\n\t\t\tvar top;\n\t\t\tif(!dataHeight){\n\t\t\t\ttop = pos.top;\n\t\t\t}else{\n\t\t\t\ttop = pos.top - (dataHeight - this.config.row_height)/2;\n\t\t\t}\n\n\t\t\tthis.scrollTo(left, top);\n\t\t},\n\t\t_scroll_state: function(){\n\t\t\tvar result = {\n\t\t\t\tx: false,\n\t\t\t\ty: false,\n\t\t\t\tx_pos: 0,\n\t\t\t\ty_pos: 0,\n\t\t\t\tscroll_size: this.config.scroll_size + 1,//1px for inner content\n\t\t\t\tx_inner: 0,\n\t\t\t\ty_inner: 0\n\t\t\t};\n\n\t\t\tvar scrollVer = getVerticalScrollbar(this),\n\t\t\t\tscrollHor = getHorizontalScrollbar(this);\n\t\t\tif(scrollHor){\n\t\t\t\tvar horState = scrollHor.getScrollState();\n\t\t\t\tif(horState.visible){\n\t\t\t\t\tresult.x = horState.size;\n\t\t\t\t\tresult.x_inner = horState.scrollSize;\n\t\t\t\t}\n\t\t\t\tresult.x_pos = horState.position || 0;\n\t\t\t}\n\n\t\t\tif(scrollVer){\n\t\t\t\tvar verState = scrollVer.getScrollState();\n\t\t\t\tif(verState.visible){\n\t\t\t\t\tresult.y = verState.size;\n\n\t\t\t\t\tresult.y_inner = verState.scrollSize;\n\t\t\t\t}\n\t\t\t\tresult.y_pos = verState.position || 0;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\tgetScrollState: function(){\n\t\t\tvar state = this._scroll_state();\n\t\t\treturn { x:state.x_pos, y:state.y_pos, inner_width:state.x, inner_height:state.y, width: state.x_inner, height: state.y_inner };\n\t\t}\n\n\t};\n\n}\n\nmodule.exports = createLayoutFacade;","module.exports = function(gantt) {\n\tdelete gantt.addTaskLayer;\n\tdelete gantt.addLinkLayer;\n};","var domHelpers = require(\"../../utils/dom_helpers\");\n\nvar initializer = (function() {\n\treturn function (gantt) {\n\t\treturn {\n\n\t\t\tgetVerticalScrollbar: function(){\n\t\t\t\treturn gantt.$ui.getView(\"scrollVer\");\n\t\t\t},\n\t\t\tgetHorizontalScrollbar: function(){\n\t\t\t\treturn gantt.$ui.getView(\"scrollHor\");\n\t\t\t},\n\n\t\t\t_legacyGridResizerClass: function(layout){\n\t\t\t\tvar resizers = layout.getCellsByType(\"resizer\");\n\t\t\t\tfor(var i = 0; i < resizers.length; i++){\n\t\t\t\t\tvar r = resizers[i];\n\t\t\t\t\tvar gridResizer = false;\n\n\t\t\t\t\tvar prev = r.$parent.getPrevSibling(r.$id);\n\t\t\t\t\tif(prev && prev.$config && prev.$config.id === \"grid\"){\n\t\t\t\t\t\tgridResizer= true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar next = r.$parent.getNextSibling(r.$id);\n\t\t\t\t\t\tif(next && next.$config && next.$config.id === \"grid\"){\n\t\t\t\t\t\t\tgridResizer= true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(gridResizer){\n\t\t\t\t\t\tr.$config.css = (r.$config.css ? r.$config.css + \" \" : \"\") + \"gantt_grid_resize_wrap\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCreated: function(layout) {\n\t\t\t\tvar first = true;\n\n\t\t\t\tthis._legacyGridResizerClass(layout);\n\n\t\t\t\tlayout.attachEvent(\"onBeforeResize\", function() {\n\t\t\t\t\tvar mainTimeline = gantt.$ui.getView(\"timeline\");\n\t\t\t\t\tif (mainTimeline)\n\t\t\t\t\t\tmainTimeline.$config.hidden = mainTimeline.$parent.$config.hidden = !gantt.config.show_chart;\n\n\t\t\t\t\tvar mainGrid = gantt.$ui.getView(\"grid\");\n\n\t\t\t\t\tif(!mainGrid)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tvar showGrid = gantt.config.show_grid;\n\t\t\t\t\tif (first) {\n\t\t\t\t\t\tvar colsWidth = mainGrid._getColsTotalWidth();\n\t\t\t\t\t\tif (colsWidth !== false){\n\t\t\t\t\t\t\tgantt.config.grid_width = colsWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tshowGrid = showGrid && !!gantt.config.grid_width;\n\t\t\t\t\t\tgantt.config.show_grid = showGrid;\n\t\t\t\t\t}\n\t\t\t\t\tmainGrid.$config.hidden = mainGrid.$parent.$config.hidden = !showGrid;\n\n\t\t\t\t\tif (!mainGrid.$config.hidden) {\n\t\t\t\t\t\t/* restrict grid width due to min_width, max_width, min_grid_column_width */\n\t\t\t\t\t\tvar grid_limits = mainGrid._getGridWidthLimits();\n\t\t\t\t\t\tif (grid_limits[0] && gantt.config.grid_width < grid_limits[0])\n\t\t\t\t\t\t\tgantt.config.grid_width = grid_limits[0];\n\t\t\t\t\t\tif (grid_limits[1] && gantt.config.grid_width > grid_limits[1])\n\t\t\t\t\t\t\tgantt.config.grid_width = grid_limits[1];\n\t\t\t\t\t\tif (mainTimeline && gantt.config.show_chart){\n\n\t\t\t\t\t\t\tmainGrid.$config.width = gantt.config.grid_width - 1;\n\t\t\t\t\t\t\tif (!first) {\n\t\t\t\t\t\t\t\tif (mainTimeline && !domHelpers.isChildOf(mainTimeline.$task, layout.$view)) {\n\t\t\t\t\t\t\t\t\t// timeline is being displayed after being not visible, reset grid with from full screen\n\t\t\t\t\t\t\t\t\tif (!mainGrid.$config.original_grid_width) {\n\t\t\t\t\t\t\t\t\t\tvar skinSettings = gantt.skins[gantt.skin];\n\t\t\t\t\t\t\t\t\t\tif(skinSettings && skinSettings.config && skinSettings.config.grid_width){\n\t\t\t\t\t\t\t\t\t\t\tmainGrid.$config.original_grid_width =  skinSettings.config.grid_width;\n\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\tmainGrid.$config.original_grid_width = 0;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tgantt.config.grid_width = mainGrid.$config.original_grid_width;\n\t\t\t\t\t\t\t\t\tmainGrid.$parent.$config.width = gantt.config.grid_width;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmainGrid.$parent._setContentSize(mainGrid.$config.width, mainGrid.$config.height);\n\t\t\t\t\t\t\t\t\tgantt.$layout._syncCellSizes(mainGrid.$parent.$config.group, gantt.config.grid_width);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmainGrid.$parent.$config.width = gantt.config.grid_width;\n\t\t\t\t\t\t\t\tif (mainGrid.$parent.$config.group) {\n\t\t\t\t\t\t\t\t\tgantt.$layout._syncCellSizes(mainGrid.$parent.$config.group, mainGrid.$parent.$config.width);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (mainTimeline && domHelpers.isChildOf(mainTimeline.$task, layout.$view)) {\n\t\t\t\t\t\t\t\t// hiding timeline, remember grid with to restore it when timeline is displayed again\n\t\t\t\t\t\t\t\tmainGrid.$config.original_grid_width = gantt.config.grid_width;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!first) {\n\t\t\t\t\t\t\t\tmainGrid.$parent.$config.width = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfirst = false;\n\t\t\t\t});\n\t\t\t\tthis._initScrollStateEvents(layout);\n\t\t\t},\n\n\t\t\t_initScrollStateEvents: function(layout) {\n\t\t\t\tgantt._getVerticalScrollbar = this.getVerticalScrollbar;\n\t\t\t\tgantt._getHorizontalScrollbar = this.getHorizontalScrollbar;\n\n\t\t\t\tvar vertical = this.getVerticalScrollbar();\n\t\t\t\tvar horizontal = this.getHorizontalScrollbar();\n\t\t\t\tif (vertical) {\n\t\t\t\t\tvertical.attachEvent(\"onScroll\", function(oldPos, newPos, dir){\n\t\t\t\t\t\tvar scrollState = gantt.getScrollState();\n\t\t\t\t\t\tgantt.callEvent(\"onGanttScroll\", [scrollState.x, oldPos, scrollState.x, newPos]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (horizontal) {\n\t\t\t\t\thorizontal.attachEvent(\"onScroll\", function(oldPos, newPos, dir){\n\t\t\t\t\t\tvar scrollState = gantt.getScrollState();\n\t\t\t\t\t\tgantt.callEvent(\"onGanttScroll\", [oldPos, scrollState.y, newPos, scrollState.y]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlayout.attachEvent(\"onResize\", function(){\n\t\t\t\t\tif (vertical && !gantt.$scroll_ver){\n\t\t\t\t\t\tgantt.$scroll_ver = vertical.$scroll_ver;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (horizontal && !gantt.$scroll_hor){\n\t\t\t\t\t\tgantt.$scroll_hor = horizontal.$scroll_hor;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t_findGridResizer: function(layout, grid){\n\t\t\t\tvar resizers = layout.getCellsByType(\"resizer\");\n\n\t\t\t\tvar gridFirst = true;\n\t\t\t\tvar gridResizer;\n\t\t\t\tfor(var i = 0; i < resizers.length; i++){\n\t\t\t\t\tvar res = resizers[i];\n\t\t\t\t\tres._getSiblings();\n\t\t\t\t\tvar prev = res._behind;\n\t\t\t\t\tvar next = res._front;\n\t\t\t\t\tif(prev && prev.$content === grid || (prev.isChild && prev.isChild(grid))){\n\t\t\t\t\t\tgridResizer = res;\n\t\t\t\t\t\tgridFirst = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if(next && next.$content === grid || (next.isChild && next.isChild(grid))){\n\t\t\t\t\t\tgridResizer = res;\n\t\t\t\t\t\tgridFirst = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tresizer: gridResizer,\n\t\t\t\t\tgridFirst: gridFirst\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tonInitialized: function (layout) {\n\t\t\t\tvar grid = gantt.$ui.getView(\"grid\");\n\n\t\t\t\tvar resizeInfo = this._findGridResizer(layout, grid);\n\n\t\t\t\t// expose grid resize events\n\t\t\t\tif(resizeInfo.resizer){\n\t\t\t\t\tvar gridFirst = resizeInfo.gridFirst,\n\t\t\t\t\t\tnext = resizeInfo.resizer;\n\t\t\t\t\tvar initialWidth;\n\t\t\t\t\tnext.attachEvent(\"onResizeStart\", function(prevCellWidth, nextCellWidth){\n\n\t\t\t\t\t\tvar grid = gantt.$ui.getView(\"grid\");\n\t\t\t\t\t\tvar viewCell = grid ? grid.$parent : null;\n\t\t\t\t\t\tif(viewCell){\n\t\t\t\t\t\t\tvar limits = grid._getGridWidthLimits();\n\n\t\t\t\t\t\t\t// min grid width is defined by min widths of its columns, unless grid has horizontal scroll\n\t\t\t\t\t\t\tif(!grid.$config.scrollable)\n\t\t\t\t\t\t\t\tviewCell.$config.minWidth = limits[0];\n\n\t\t\t\t\t\t\tviewCell.$config.maxWidth = limits[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinitialWidth = gridFirst ? prevCellWidth : nextCellWidth;\n\t\t\t\t\t\treturn gantt.callEvent(\"onGridResizeStart\", [initialWidth]);\n\t\t\t\t\t});\n\t\t\t\t\tnext.attachEvent(\"onResize\", function(newBehindSize, newFrontSize){\n\t\t\t\t\t\tvar newSize = gridFirst ? newBehindSize : newFrontSize;\n\t\t\t\t\t\treturn gantt.callEvent(\"onGridResize\", [initialWidth, newSize]);\n\t\t\t\t\t});\n\t\t\t\t\tnext.attachEvent(\"onResizeEnd\", function(oldBackSize, oldFrontSize, newBackSize, newFrontSize){\n\n\t\t\t\t\t\tvar oldSize = gridFirst ? oldBackSize : oldFrontSize;\n\t\t\t\t\t\tvar newSize = gridFirst ? newBackSize : newFrontSize;\n\t\t\t\t\t\tvar grid = gantt.$ui.getView(\"grid\");\n\t\t\t\t\t\tvar viewCell = grid ? grid.$parent : null;\n\t\t\t\t\t\tif(viewCell){\n\t\t\t\t\t\t\tviewCell.$config.minWidth = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar res = gantt.callEvent(\"onGridResizeEnd\", [oldSize, newSize]);\n\t\t\t\t\t\tif(res){\n\t\t\t\t\t\t\tgantt.config.grid_width = newSize;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tonDestroyed: function (timeline) {\n\n\t\t\t}\n\t\t};\n\n\t};\n})();\n\nmodule.exports = initializer;","var domHelpers = require(\"../../../utils/dom_helpers\");\n\nvar initLinksDND = function(timeline, gantt) {\n\tvar _link_landing,\n\t\t_link_target_task,\n\t\t_link_target_task_start,\n\t\t_link_source_task,\n\t\t_link_source_task_start;\n\n\n\tfunction getVisibleMilestoneWidth() {\n\t\tvar origWidth = timeline.getItemHeight();//m-s have square shape\n\t\treturn Math.round(Math.sqrt(2 * origWidth * origWidth)) - 2;\n\t}\n\n\tfunction isMilestone(task) {\n\t\treturn gantt.getTaskType(task.type) == gantt.config.types.milestone;\n\t}\n\n\tfunction getDndState(){\n\t\treturn {\n\t\t\tlink_source_id : _link_source_task,\n\t\t\tlink_target_id : _link_target_task,\n\t\t\tlink_from_start : _link_source_task_start,\n\t\t\tlink_to_start : _link_target_task_start,\n\t\t\tlink_landing_area : _link_landing\n\t\t};\n\t}\n\n\tvar services = gantt.$services;\n\n\tvar state = services.getService(\"state\");\n\tvar DnD = services.getService(\"dnd\");\n\n\tstate.registerProvider(\"linksDnD\", getDndState);\n\n\tvar dnd = new DnD(timeline.$task_bars, { sensitivity : 0, updates_per_second : 60 }),\n\t\tstart_marker = \"task_start_date\",\n\t\tend_marker = \"task_end_date\",\n\t\tlink_edge_marker = \"gantt_link_point\",\n\t\tlink_landing_hover_area = \"gantt_link_control\";\n\n\tdnd.attachEvent(\"onBeforeDragStart\", gantt.bind(function(obj,e) {\n\t\tvar target = (e.target||e.srcElement);\n\t\tresetDndState();\n\t\tif(gantt.getState().drag_id)\n\t\t\treturn false;\n\n\t\tif(domHelpers.locateClassName(target, link_edge_marker)){\n\t\t\tif(domHelpers.locateClassName(target, start_marker))\n\t\t\t\t_link_source_task_start = true;\n\n\t\t\tvar sid = gantt.locate(e);\n\t\t\t_link_source_task = sid;\n\n\t\t\tvar t = gantt.getTask(sid);\n\t\t\tif(gantt.isReadonly(t)){\n\t\t\t\tresetDndState();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar shift = 0;\n\n\t\t\tthis._dir_start = getLinePos(t, !!_link_source_task_start, shift, timeline.$getConfig(), true);\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\n\t}, this));\n\n\tdnd.attachEvent(\"onAfterDragStart\", gantt.bind(function(obj,e) {\n\t\tif(gantt.config.touch) {\n\t\t\tgantt.refreshData();\n\t\t}\n\t\tupdateMarkedHtml(dnd.config.marker);\n\t}, this));\n\n\tfunction getLinePos(task, to_start, shift, cfg, isStart){\n\t\tvar taskPos = getMilestonePosition(task, function(task){ return gantt.getTaskPosition(task);}, cfg);\n\n\t\tvar pos = {x: taskPos.x, y: taskPos.y};\n\t\tif(!to_start){\n\t\t\tpos.x = taskPos.xEnd;\n\t\t}\n\n\t\t//var pos = gantt._get_task_pos(task, !!to_start);\n\t\tpos.y += gantt.config.row_height/2;\n\n\t\tvar offset = isMilestone(task) && isStart ? 2 : 0;\n\n\t\tshift = shift || 0;\n\t\tif(cfg.rtl)\n\t\t\tshift = shift * -1;\n\n\t\tpos.x += (to_start ? -1 : 1)*shift  - offset;\n\t\treturn pos;\n\t}\n\n\tfunction getMilestonePosition(task, getTaskPosition, cfg){\n\t\tvar pos = getTaskPosition(task);\n\n\t\tvar res = {\n\t\t\tx: pos.left,\n\t\t\ty: pos.top,\n\t\t\twidth: pos.width,\n\t\t\theight: pos.height\n\t\t};\n\n\t\tif(cfg.rtl){\n\t\t\tres.xEnd = res.x;\n\t\t\tres.x = res.xEnd + res.width;\n\t\t}else{\n\t\t\tres.xEnd = res.x + res.width;\n\t\t}\n\t\tres.yEnd = res.y + res.height;\n\n\t\tif(gantt.getTaskType(task.type) == gantt.config.types.milestone){\n\t\t\tvar milestoneWidth = getVisibleMilestoneWidth();\n\n\t\t\tres.x += (!cfg.rtl ? -1 : 1)*(milestoneWidth / 2);\n\t\t\tres.xEnd += (!cfg.rtl ? 1 : -1)*(milestoneWidth / 2);\n\n\t\t\t//pos.x -= milestoneWidth / 2;\n\t\t\t//pos.xEnd += milestoneWidth / 2;\n\t\t\tres.width = pos.xEnd - pos.x;\n\t\t}\n\n\n\t\treturn res;\n\t}\n\n\tdnd.attachEvent(\"onDragMove\", gantt.bind(function(obj,e) {\n\t\tvar dd = dnd.config;\n\t\tvar pos = dnd.getPosition(e);\n\t\tadvanceMarker(dd.marker, pos);\n\t\tvar landing = !!domHelpers.locateClassName(e, link_landing_hover_area);\n\n\t\tvar prevTarget = _link_target_task;\n\t\tvar prevLanding = _link_landing;\n\t\tvar prevToStart = _link_target_task_start;\n\n\t\tvar targ = gantt.locate(e),\n\t\t\tto_start = true;\n\t\tif(landing){\n\t\t\t//refreshTask\n\t\t\tto_start = !domHelpers.locateClassName(e, end_marker);\n\t\t\tlanding = !!targ;\n\t\t}\n\n\t\t_link_target_task = targ;\n\t\t_link_landing = landing;\n\t\t_link_target_task_start = to_start;\n\n\t\tif(landing){\n\t\t\tvar t = gantt.getTask(targ);\n\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar node = domHelpers.locateClassName(e, link_landing_hover_area);\n\t\t\tvar shift = 0;\n\t\t\tif(node){\n\t\t\t\tshift = Math.floor(node.offsetWidth  / 2);\n\t\t\t}\n\n\t\t\tthis._dir_end = getLinePos(t, !!_link_target_task_start,shift, config);\n\t\t}else{\n\t\t\tthis._dir_end = domHelpers.getRelativeEventPosition(e, timeline.$task_data);\n\t\t}\n\n\t\tvar targetChanged = !(prevLanding == landing && prevTarget == targ && prevToStart == to_start);\n\t\tif(targetChanged){\n\t\t\tif(prevTarget)\n\t\t\t\tgantt.refreshTask(prevTarget, false);\n\t\t\tif(targ)\n\t\t\t\tgantt.refreshTask(targ, false);\n\t\t}\n\n\t\tif(targetChanged){\n\t\t\tupdateMarkedHtml(dd.marker);\n\t\t}\n\n\t\tshowDirectingLine(this._dir_start.x, this._dir_start.y, this._dir_end.x, this._dir_end.y);\n\n\t\treturn true;\n\t}, this));\n\n\n\tdnd.attachEvent(\"onDragEnd\", gantt.bind(function() {\n\t\tvar drag = getDndState();\n\n\t\tif(drag.link_source_id && drag.link_target_id && drag.link_source_id != drag.link_target_id){\n\t\t\tvar type = gantt._get_link_type(drag.link_from_start, drag.link_to_start);\n\n\t\t\tvar link = {source : drag.link_source_id, target: drag.link_target_id, type:type};\n\t\t\tif(link.type && gantt.isLinkAllowed(link))\n\t\t\t\tgantt.addLink(link);\n\t\t}\n\n\t\tresetDndState();\n\n\t\tif(gantt.config.touch) {\n\t\t\tgantt.refreshData();\n\t\t}\n\t\telse {\n\t\t\tif (drag.link_source_id)\n\t\t\t\tgantt.refreshTask(drag.link_source_id, false);\n\t\t\tif (drag.link_target_id)\n\t\t\t\tgantt.refreshTask(drag.link_target_id, false);\n\t\t}\n\t\tremoveDirectionLine();\n\t}, this));\n\n\tfunction updateMarkedHtml(marker){\n\t\tvar link = getDndState();\n\n\t\tvar css = [\"gantt_link_tooltip\"];\n\t\tif(link.link_source_id && link.link_target_id){\n\t\t\tif(gantt.isLinkAllowed(link.link_source_id, link.link_target_id, link.link_from_start, link.link_to_start)){\n\t\t\t\tcss.push(\"gantt_allowed_link\");\n\t\t\t}else{\n\t\t\t\tcss.push(\"gantt_invalid_link\");\n\t\t\t}\n\t\t}\n\n\t\tvar className = gantt.templates.drag_link_class(link.link_source_id, link.link_from_start, link.link_target_id, link.link_to_start);\n\t\tif(className)\n\t\t\tcss.push(className);\n\n\t\tvar html = \"<div class='\"+className+ \"'>\" +\n\t\t\tgantt.templates.drag_link(link.link_source_id, link.link_from_start, link.link_target_id, link.link_to_start) +\n\t\t\t\"</div>\";\n\t\tmarker.innerHTML = html;\n\t}\n\n\tfunction advanceMarker(marker, pos){\n\t\tmarker.style.left = pos.x + 5 + \"px\";\n\t\tmarker.style.top = pos.y + 5 + \"px\";\n\t}\n\n\tfunction resetDndState(){\n\t\t_link_source_task =\n\t\t\t_link_source_task_start =\n\t\t\t\t_link_target_task = null;\n\t\t_link_target_task_start = true;\n\t}\n\tfunction showDirectingLine(s_x, s_y, e_x, e_y){\n\t\tvar div = getDirectionLine();\n\n\t\tvar link = getDndState();\n\n\t\tvar css = [\"gantt_link_direction\"];\n\t\tif(gantt.templates.link_direction_class){\n\t\t\tcss.push(gantt.templates.link_direction_class(link.link_source_id, link.link_from_start, link.link_target_id, link.link_to_start));\n\t\t}\n\n\t\tvar dist =Math.sqrt( (Math.pow(e_x - s_x, 2)) + (Math.pow(e_y - s_y, 2)) );\n\t\tdist = Math.max(0, dist - 3);\n\t\tif(!dist)\n\t\t\treturn;\n\n\t\tdiv.className = css.join(\" \");\n\t\tvar tan = (e_y - s_y)/(e_x - s_x),\n\t\t\tangle = Math.atan(tan);\n\n\t\tif(coordinateCircleQuarter(s_x, e_x, s_y, e_y) == 2){\n\t\t\tangle += Math.PI;\n\t\t}else if(coordinateCircleQuarter(s_x, e_x, s_y, e_y) == 3){\n\t\t\tangle -= Math.PI;\n\t\t}\n\n\n\n\t\tvar sin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\ttop = Math.round(s_y),\n\t\t\tleft = Math.round(s_x);\n\n\n\t\tvar style = [\n\t\t\t\"-webkit-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"-moz-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"-ms-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"-o-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"width:\" + Math.round(dist) + \"px\"\n\t\t];\n\n\t\tif(window.navigator.userAgent.indexOf(\"MSIE 8.0\") != -1){\n\t\t\t//ms-filter breaks styles in ie9, so add it only for 8th\n\t\t\tstyle.push(\"-ms-filter: \\\"\" + ieTransform(sin, cos) + \"\\\"\");\n\n\t\t\tvar shiftLeft = Math.abs(Math.round(s_x - e_x)),\n\t\t\t\tshiftTop = Math.abs(Math.round(e_y - s_y));\n\t\t\t//fix rotation axis\n\t\t\tswitch(coordinateCircleQuarter(s_x, e_x, s_y, e_y)){\n\t\t\t\tcase 1:\n\t\t\t\t\ttop -= shiftTop;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tleft -= shiftLeft;\n\t\t\t\t\ttop -= shiftTop;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tleft -= shiftLeft;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t\tstyle.push(\"top:\" +  top + \"px\");\n\t\tstyle.push(\"left:\" +  left + \"px\");\n\n\t\tdiv.style.cssText = style.join(\";\");\n\t}\n\n\tfunction ieTransform(sin, cos){\n\t\treturn \"progid:DXImageTransform.Microsoft.Matrix(\"+\n\t\t\t\"M11 = \"+cos+\",\"+\n\t\t\t\"M12 = -\"+sin+\",\"+\n\t\t\t\"M21 = \"+sin+\",\"+\n\t\t\t\"M22 = \"+cos+\",\"+\n\t\t\t\"SizingMethod = 'auto expand'\"+\n\t\t\")\";\n\t}\n\tfunction coordinateCircleQuarter(sX, eX, sY, eY){\n\t\tif(eX >= sX){\n\t\t\tif(eY <= sY){\n\t\t\t\treturn 1;\n\t\t\t}else{\n\t\t\t\treturn 4;\n\t\t\t}\n\t\t}else{\n\t\t\tif(eY <= sY){\n\t\t\t\treturn 2;\n\t\t\t}else{\n\t\t\t\treturn 3;\n\t\t\t}\n\t\t}\n\n\t}\n\tfunction getDirectionLine(){\n\t\tif(!dnd._direction){\n\t\t\tdnd._direction = document.createElement(\"div\");\n\t\t\ttimeline.$task_links.appendChild(dnd._direction);\n\t\t}\n\t\treturn dnd._direction;\n\t}\n\tfunction removeDirectionLine(){\n\t\tif(dnd._direction){\n\t\t\tif (dnd._direction.parentNode)\t//the event line can be detached because of data refresh\n\t\t\t\tdnd._direction.parentNode.removeChild(dnd._direction);\n\n\t\t\tdnd._direction = null;\n\t\t}\n\t}\n};\n\nmodule.exports = {\n\tcreateLinkDND: function(){\n\t\treturn {\n\t\t\tinit: initLinksDND\n\t\t};\n\t}\n};","var domHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\");\nvar timeout = require(\"../../../utils/timeout\");\n\nfunction createTaskDND(timeline, gantt){\n\tvar services = gantt.$services;\n\treturn {\n\t\tdrag: null,\n\t\tdragMultiple: {},\n\t\t_events: {\n\t\t\tbefore_start: {},\n\t\t\tbefore_finish: {},\n\t\t\tafter_finish: {}\n\t\t},\n\t\t_handlers: {},\n\t\tinit: function () {\n\t\t\tthis._domEvents = gantt._createDomEventScope();\n\t\t\tthis.clear_drag_state();\n\t\t\tvar drag = gantt.config.drag_mode;\n\t\t\tthis.set_actions();\n\n\t\t\tvar stateService = services.getService(\"state\");\n\t\t\tstateService.registerProvider(\"tasksDnd\", utils.bind(function(){\n\t\t\t\treturn {\n\t\t\t\t\tdrag_id : this.drag ? this.drag.id : undefined,\n\t\t\t\t\tdrag_mode : this.drag ? this.drag.mode : undefined,\n\t\t\t\t\tdrag_from_start : this.drag ? this.drag.left : undefined\n\t\t\t\t};\n\t\t\t}, this));\n\n\t\t\tvar evs = {\n\t\t\t\t\"before_start\": \"onBeforeTaskDrag\",\n\t\t\t\t\"before_finish\": \"onBeforeTaskChanged\",\n\t\t\t\t\"after_finish\": \"onAfterTaskDrag\"\n\t\t\t};\n\t\t\t//for now, all drag operations will trigger the same events\n\t\t\tfor (var stage in this._events) {\n\t\t\t\tfor (var mode in drag) {\n\t\t\t\t\tthis._events[stage][mode] = evs[stage];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._handlers[drag.move] = this._move;\n\t\t\tthis._handlers[drag.resize] = this._resize;\n\t\t\tthis._handlers[drag.progress] = this._resize_progress;\n\t\t},\n\t\tset_actions: function () {\n\t\t\tvar data = timeline.$task_data;\n\t\t\tthis._domEvents.attach(data, \"mousemove\", gantt.bind(function (e) {\n\t\t\t\tthis.on_mouse_move(e || event);\n\t\t\t}, this));\n\t\t\tthis._domEvents.attach(data, \"mousedown\", gantt.bind(function (e) {\n\t\t\t\tthis.on_mouse_down(e || event);\n\t\t\t}, this));\n\t\t\tthis._domEvents.attach(data, \"mouseup\", gantt.bind(function (e) {\n\t\t\t\tthis.on_mouse_up(e || event);\n\t\t\t}, this));\n\t\t},\n\n\t\tclear_drag_state: function () {\n\t\t\tthis.drag = {\n\t\t\t\tid: null,\n\t\t\t\tmode: null,\n\t\t\t\tpos: null,\n\t\t\t\tstart_x: null,\n\t\t\t\tstart_y: null,\n\t\t\t\tobj: null,\n\t\t\t\tleft: null\n\t\t\t};\n\t\t\tthis.dragMultiple = {};\n\t\t},\n\t\t_resize: function (ev, shift, drag) {\n\t\t\tvar cfg = timeline.$getConfig();\n\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\t\t\tif (drag.left) {\n\t\t\t\tev.start_date = gantt.dateFromPos(coords_x.start + shift);\n\t\t\t\tif (!ev.start_date) {\n\t\t\t\t\tev.start_date = new Date(gantt.getState().min_date);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tev.end_date = gantt.dateFromPos(coords_x.end + shift);\n\t\t\t\tif (!ev.end_date) {\n\t\t\t\t\tev.end_date = new Date(gantt.getState().max_date);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (ev.end_date - ev.start_date < cfg.min_duration) {\n\t\t\t\tif (drag.left)\n\t\t\t\t\tev.start_date = gantt.calculateEndDate({start_date: ev.end_date, duration: -1, task: ev});\n\t\t\t\telse\n\t\t\t\t\tev.end_date = gantt.calculateEndDate({start_date: ev.start_date, duration: 1, task: ev});\n\t\t\t}\n\t\t\tgantt._init_task_timing(ev);\n\t\t},\n\t\t_resize_progress: function (ev, shift, drag) {\n\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar diffValue = !config.rtl ? (drag.pos.x - coords_x.start) : (coords_x.start - drag.pos.x);\n\n\t\t\tvar diff = Math.max(0, diffValue);\n\t\t\tev.progress = Math.min(1, diff / Math.abs(coords_x.end - coords_x.start));\n\t\t},\n\n\t\t_find_max_shift: function(dragItems, shift){\n\t\t\tvar correctShift;\n\t\t\tfor(var i in dragItems){\n\t\t\t\tvar drag = dragItems[i];\n\t\t\t\tvar ev = gantt.getTask(drag.id);\n\n\t\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\t\t\t\tvar minX = gantt.posFromDate( new Date(gantt.getState().min_date)),\n\t\t\t\t\tmaxX = gantt.posFromDate( new Date(gantt.getState().max_date));\n\n\t\t\t\tif(coords_x.end + shift > maxX){\n\t\t\t\t\tvar maxShift = maxX - coords_x.end;\n\t\t\t\t\tif(maxShift < correctShift || correctShift === undefined){\n\t\t\t\t\t\tcorrectShift = maxShift;\n\t\t\t\t\t}\n\t\t\t\t}else if(coords_x.start + shift < minX){\n\t\t\t\t\tvar minShift = minX - coords_x.start;\n\t\t\t\t\tif(minShift < correctShift || correctShift === undefined){\n\t\t\t\t\t\tcorrectShift = minShift;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn correctShift;\n\t\t},\n\t\t_move: function (ev, shift, drag) {\n\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\t\t\tvar new_start = gantt.dateFromPos(coords_x.start + shift),\n\t\t\t\tnew_end = gantt.dateFromPos(coords_x.end + shift);\n\t\t\tif (!new_start) {\n\t\t\t\tev.start_date = new Date(gantt.getState().min_date);\n\t\t\t\tev.end_date = gantt.dateFromPos(gantt.posFromDate(ev.start_date) + (coords_x.end - coords_x.start));\n\t\t\t} else if (!new_end) {\n\t\t\t\tev.end_date = new Date(gantt.getState().max_date);\n\t\t\t\tev.start_date = gantt.dateFromPos(gantt.posFromDate(ev.end_date) - (coords_x.end - coords_x.start));\n\t\t\t} else {\n\t\t\t\tev.start_date = new_start;\n\t\t\t\tev.end_date = new_end;\n\t\t\t}\n\t\t},\n\t\t_drag_task_coords: function (t, drag) {\n\t\t\tvar start = drag.obj_s_x = drag.obj_s_x || gantt.posFromDate(t.start_date);\n\t\t\tvar end = drag.obj_e_x = drag.obj_e_x || gantt.posFromDate(t.end_date);\n\t\t\treturn {\n\t\t\t\tstart: start,\n\t\t\t\tend: end\n\t\t\t};\n\t\t},\n\t\t_mouse_position_change: function (oldPos, newPos) {\n\t\t\tvar dx = oldPos.x - newPos.x,\n\t\t\t\tdy = oldPos.y - newPos.y;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t},\n\t\t_is_number: function (n) {\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\n\t\ton_mouse_move: function (e) {\n\t\t\tif (this.drag.start_drag) {\n\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, gantt.$task_data);\n\n\t\t\t\tvar sX = this.drag.start_drag.start_x,\n\t\t\t\t\tsY = this.drag.start_drag.start_y;\n\n\t\t\t\tif ((Date.now() - this.drag.timestamp > 50) ||\n\t\t\t\t\t(this._is_number(sX) && this._is_number(sY) && this._mouse_position_change({\n\t\t\t\t\t\tx: sX,\n\t\t\t\t\t\ty: sY\n\t\t\t\t\t}, pos) > 20)) {\n\t\t\t\t\tthis._start_dnd(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar drag = this.drag;\n\n\t\t\tif (drag.mode) {\n\t\t\t\tif (!timeout(this, 40))//limit update frequency\n\t\t\t\t\treturn;\n\n\t\t\t\tthis._update_on_move(e);\n\n\t\t\t}\n\t\t},\n\n\t\t_update_item_on_move: function(shift, id, mode, drag, e){\n\t\t\tvar ev = gantt.getTask(id);\n\t\t\tvar original = gantt.mixin({}, ev);\n\t\t\tvar copy = gantt.mixin({}, ev);\n\t\t\tthis._handlers[mode].apply(this, [copy, shift, drag]);\n\t\t\tgantt.mixin(ev, copy, true);\n\t\t\t//gantt._update_parents(drag.id, true);\n\t\t\tgantt.callEvent(\"onTaskDrag\", [ev.id, mode, copy, original, e]);\n\t\t\tgantt.mixin(ev, copy, true);\n\t\t\tgantt.refreshTask(id);\n\t\t},\n\n\t\t_update_on_move: function (e) {\n\t\t\tvar drag = this.drag;\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tif (drag.mode) {\n\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, timeline.$task_data);\n\t\t\t\tif (drag.pos && drag.pos.x == pos.x)\n\t\t\t\t\treturn;\n\n\t\t\t\tdrag.pos = pos;\n\n\t\t\t\tvar curr_date = gantt.dateFromPos(pos.x);\n\t\t\t\tif (!curr_date || isNaN(curr_date.getTime()))\n\t\t\t\t\treturn;\n\n\n\t\t\t\tvar shift = pos.x - drag.start_x;\n\t\t\t\tvar ev = gantt.getTask(drag.id);\n\n\t\t\t\tif (this._handlers[drag.mode]) {\n\n\t\t\t\t\tif(gantt.isSummaryTask(ev) && gantt.config.drag_project && drag.mode == config.drag_mode.move){\n\n\t\t\t\t\t\tvar initialDrag = {};\n\t\t\t\t\t\tinitialDrag[drag.id] = utils.copy(drag);\n\t\t\t\t\t\tvar maxShift = this._find_max_shift(utils.mixin(initialDrag, this.dragMultiple), shift);\n\t\t\t\t\t\tif(maxShift !== undefined){\n\t\t\t\t\t\t\tshift = maxShift;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._update_item_on_move(shift, drag.id, drag.mode, drag, e);\n\t\t\t\t\t\tfor(var i in this.dragMultiple){\n\t\t\t\t\t\t\tvar childDrag =  this.dragMultiple[i];\n\t\t\t\t\t\t\tthis._update_item_on_move(shift, childDrag.id, childDrag.mode, childDrag, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis._update_item_on_move(shift, drag.id, drag.mode, drag, e);\n\t\t\t\t\t}\n\t\t\t\t\tgantt._update_parents(drag.id);\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\ton_mouse_down: function (e, src) {\n\t\t\t// on Mac we do not get onmouseup event when clicking right mouse button leaving us in dnd state\n\t\t\t// let's ignore right mouse button then\n\t\t\tif (e.button == 2 && e.button !== undefined)\n\t\t\t\treturn;\n\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar id = gantt.locate(e);\n\t\t\tvar task = null;\n\t\t\tif (gantt.isTaskExists(id)) {\n\t\t\t\ttask = gantt.getTask(id);\n\t\t\t}\n\n\t\t\tif (gantt.isReadonly(task) || this.drag.mode) return;\n\n\t\t\tthis.clear_drag_state();\n\n\t\t\tsrc = src || (e.target || e.srcElement);\n\n\t\t\tvar className = domHelpers.getClassName(src);\n\t\t\tvar drag = this._get_drag_mode(className, src);\n\n\t\t\tif (!className || !drag) {\n\t\t\t\tif (src.parentNode)\n\t\t\t\t\treturn this.on_mouse_down(e, src.parentNode);\n\t\t\t\telse\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!drag) {\n\t\t\t\tif (gantt.checkEvent(\"onMouseDown\") && gantt.callEvent(\"onMouseDown\", [className.split(\" \")[0]])) {\n\t\t\t\t\tif (src.parentNode)\n\t\t\t\t\t\treturn this.on_mouse_down(e, src.parentNode);\n\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (drag.mode && drag.mode != config.drag_mode.ignore && config[\"drag_\" + drag.mode]) {\n\t\t\t\t\tid = gantt.locate(src);\n\t\t\t\t\ttask = gantt.copy(gantt.getTask(id) || {});\n\n\t\t\t\t\tif (gantt.isReadonly(task)) {\n\t\t\t\t\t\tthis.clear_drag_state();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((gantt.isSummaryTask(task) && !config.drag_project) && drag.mode != config.drag_mode.progress) {//only progress drag is allowed for tasks with flexible duration\n\t\t\t\t\t\tthis.clear_drag_state();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdrag.id = id;\n\t\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, gantt.$task_data);\n\n\t\t\t\t\tdrag.start_x = pos.x;\n\t\t\t\t\tdrag.start_y = pos.y;\n\t\t\t\t\tdrag.obj = task;\n\t\t\t\t\tthis.drag.start_drag = drag;\n\t\t\t\t\tthis.drag.timestamp = Date.now();\n\n\t\t\t\t} else\n\t\t\t\t\tthis.clear_drag_state();\n\t\t\t}\n\t\t},\n\t\t_fix_dnd_scale_time: function (task, drag) {\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar unit = gantt.getScale().unit,\n\t\t\t\tstep = gantt.getScale().step;\n\t\t\tif (!config.round_dnd_dates) {\n\t\t\t\tunit = 'minute';\n\t\t\t\tstep = config.time_step;\n\t\t\t}\n\n\t\t\tfunction fixStart(task) {\n\t\t\t\tif (!gantt.config.correct_work_time)\n\t\t\t\t\treturn;\n\t\t\t\tvar config = timeline.$getConfig();\n\t\t\t\tif (!gantt.isWorkTime(task.start_date, undefined, task))\n\t\t\t\t\ttask.start_date = gantt.calculateEndDate({\n\t\t\t\t\t\tstart_date: task.start_date,\n\t\t\t\t\t\tduration: -1,\n\t\t\t\t\t\tunit: config.duration_unit,\n\t\t\t\t\t\ttask: task\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction fixEnd(task) {\n\t\t\t\tif (!gantt.config.correct_work_time)\n\t\t\t\t\treturn;\n\t\t\t\tvar config = timeline.$getConfig();\n\t\t\t\tif (!gantt.isWorkTime(new Date(task.end_date - 1), undefined, task))\n\t\t\t\t\ttask.end_date = gantt.calculateEndDate({\n\t\t\t\t\t\tstart_date: task.end_date,\n\t\t\t\t\t\tduration: 1,\n\t\t\t\t\t\tunit: config.duration_unit,\n\t\t\t\t\t\ttask: task\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (drag.mode == config.drag_mode.resize) {\n\t\t\t\tif (drag.left) {\n\t\t\t\t\ttask.start_date = gantt.roundDate({date: task.start_date, unit: unit, step: step});\n\t\t\t\t\tfixStart(task);\n\t\t\t\t} else {\n\t\t\t\t\ttask.end_date = gantt.roundDate({date: task.end_date, unit: unit, step: step});\n\t\t\t\t\tfixEnd(task);\n\t\t\t\t}\n\t\t\t} else if (drag.mode == config.drag_mode.move) {\n\t\t\t\ttask.start_date = gantt.roundDate({date: task.start_date, unit: unit, step: step});\n\t\t\t\tfixStart(task);\n\t\t\t\ttask.end_date = gantt.calculateEndDate(task);\t\t\t\t\n\t\t\t}\n\t\t},\n\t\t_fix_working_times: function (task, drag) {\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar drag = drag || {mode: config.drag_mode.move};\n\t\t\t\n\t\t\tif (drag.mode == config.drag_mode.resize) {\n\t\t\t\tif (drag.left) {\n\t\t\t\t\ttask.start_date = gantt.getClosestWorkTime({date: task.start_date, dir: 'future', task: task});\n\t\t\t\t} else {\n\t\t\t\t\ttask.end_date = gantt.getClosestWorkTime({date: task.end_date, dir: 'past', task: task});\n\t\t\t\t}\n\t\t\t} else if (drag.mode == config.drag_mode.move) {\n\t\t\t\tgantt.correctTaskWorkTime(task);\n\t\t\t}\n\t\t},\n\n\t\t_finalize_mouse_up: function(taskId, config, drag, e){\n\t\t\tvar ev = gantt.getTask(taskId);\n\n\t\t\tif (config.work_time && config.correct_work_time) {\n\t\t\t\tthis._fix_working_times(ev, drag);\n\t\t\t}\n\n\t\t\tthis._fix_dnd_scale_time(ev, drag);\n\n\t\t\tif (!this._fireEvent(\"before_finish\", drag.mode, [taskId, drag.mode, gantt.copy(drag.obj), e])) {\n\t\t\t\t//drag.obj._dhx_changed = false;\n\t\t\t\tthis.clear_drag_state();\n\t\t\t\tif(taskId == drag.id){\n\t\t\t\t\tdrag.obj._dhx_changed = false;\n\t\t\t\t\tgantt.mixin(ev, drag.obj, true);\n\t\t\t\t}\n\n\n\t\t\t\tgantt.refreshTask(ev.id);\n\t\t\t} else {\n\t\t\t\tvar drag_id = taskId;\n\n\t\t\t\tgantt._init_task_timing(ev);\n\n\t\t\t\tthis.clear_drag_state();\n\t\t\t\tgantt.updateTask(ev.id);\n\t\t\t\tthis._fireEvent(\"after_finish\", drag.mode, [drag_id, drag.mode, e]);\n\t\t\t}\n\n\t\t},\n\n\t\ton_mouse_up: function (e) {\n\n\t\t\tvar drag = this.drag;\n\t\t\tif (drag.mode && drag.id) {\n\t\t\t\tvar config = timeline.$getConfig();\n\t\t\t\t//drop\n\t\t\t\tvar ev = gantt.getTask(drag.id);\n\t\t\t\tvar dragMultiple = this.dragMultiple;\n\n\t\t\t\tif(gantt.isSummaryTask(ev) && config.drag_project && drag.mode == config.drag_mode.move){\n\t\t\t\t\tfor(var i in dragMultiple){\n\t\t\t\t\t\tthis._finalize_mouse_up(dragMultiple[i].id, config, dragMultiple[i], e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._finalize_mouse_up(drag.id, config, drag, e);\n\t\t\t}\n\t\t\tthis.clear_drag_state();\n\t\t},\n\t\t_get_drag_mode: function (className, el) {\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar modes = config.drag_mode;\n\t\t\tvar classes = (className || \"\").split(\" \");\n\t\t\tvar classname = classes[0];\n\t\t\tvar drag = {mode: null, left: null};\n\t\t\tswitch (classname) {\n\t\t\t\tcase \"gantt_task_line\":\n\t\t\t\tcase \"gantt_task_content\":\n\t\t\t\t\tdrag.mode = modes.move;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gantt_task_drag\":\n\t\t\t\t\tdrag.mode = modes.resize;\n\n\t\t\t\t\tvar dragProperty = el.getAttribute(\"data-bind-property\");\n\n\t\t\t\t\tif (dragProperty == \"start_date\") {\n\t\t\t\t\t\tdrag.left = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdrag.left = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gantt_task_progress_drag\":\n\t\t\t\t\tdrag.mode = modes.progress;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gantt_link_control\":\n\t\t\t\tcase \"gantt_link_point\":\n\t\t\t\t\tdrag.mode = modes.ignore;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tdrag = null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn drag;\n\n\t\t},\n\n\t\t_start_dnd: function (e) {\n\t\t\tvar drag = this.drag = this.drag.start_drag;\n\t\t\tdelete drag.start_drag;\n\n\t\t\tvar cfg = timeline.$getConfig();\n\t\t\tvar id = drag.id;\n\t\t\tif (!cfg[\"drag_\" + drag.mode] || !gantt.callEvent(\"onBeforeDrag\", [id, drag.mode, e]) || !this._fireEvent(\"before_start\", drag.mode, [id, drag.mode, e])) {\n\t\t\t\tthis.clear_drag_state();\n\t\t\t} else {\n\t\t\t\tdelete drag.start_drag;\n\n\t\t\t\tvar task = gantt.getTask(id);\n\t\t\t\tif(gantt.isSummaryTask(task) && gantt.config.drag_project && drag.mode == cfg.drag_mode.move){\n\t\t\t\t\tgantt.eachTask(function(child){\n\t\t\t\t\t\tthis.dragMultiple[child.id] = gantt.mixin({\n\t\t\t\t\t\t\tid: child.id,\n\t\t\t\t\t\t\tobj: child\n\t\t\t\t\t\t}, this.drag);\n\t\t\t\t\t}, task.id, this);\n\t\t\t\t}\n\n\t\t\t\tgantt.callEvent(\"onTaskDragStart\", []);\n\t\t\t}\n\n\t\t},\n\t\t_fireEvent: function (stage, mode, params) {\n\t\t\tgantt.assert(this._events[stage], \"Invalid stage:{\" + stage + \"}\");\n\n\t\t\tvar trigger = this._events[stage][mode];\n\n\t\t\tgantt.assert(trigger, \"Unknown after drop mode:{\" + mode + \"}\");\n\t\t\tgantt.assert(params, \"Invalid event arguments\");\n\n\n\t\t\tif (!gantt.checkEvent(trigger))\n\t\t\t\treturn true;\n\n\t\t\treturn gantt.callEvent(trigger, params);\n\t\t},\n\n\t\tround_task_dates: function(task){\n\t\t\tvar drag_state = this.drag;\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tif (!drag_state) {\n\t\t\t\tdrag_state = {mode: config.drag_mode.move};\n\t\t\t}\n\t\t\tthis._fix_dnd_scale_time(task, drag_state);\n\t\t},\n\t\tdestructor: function(){\n\t\t\tthis._domEvents.detachAll();\n\t\t}\n\t};\n}\n\nfunction initTaskDND() {\n\tvar _tasks_dnd;\n\treturn {\n\t\textend: function(timeline){\n\t\t\ttimeline.roundTaskDates = function (task) {\n\t\t\t\t_tasks_dnd.round_task_dates(task);\n\t\t\t};\n\n\t\t},\n\t\tinit: function(timeline, gantt){\n\t\t\t_tasks_dnd = createTaskDND(timeline, gantt);\n\t\t\t// TODO: entry point for touch handlers, move touch to timeline\n\t\t\ttimeline._tasks_dnd = _tasks_dnd;\n\t\t\treturn _tasks_dnd.init(gantt);\n\t\t},\n\t\tdestructor: function(){\n\t\t\t_tasks_dnd.destructor();\n\t\t\t_tasks_dnd = null;\n\t\t}\n\t};\n}\n\nmodule.exports = {\n\tcreateTaskDND: initTaskDND\n};\n","var utils = require(\"../../../utils/utils\"),\n\ttaskDnD = require(\"./tasks_dnd\"),\n\tlinkDnD = require(\"./links_dnd\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\");\n\nvar initializer = (function(){\n\treturn function(gantt){\n\t\tvar services = gantt.$services;\n\t\treturn {\n\t\t\tonCreated: function (timeline) {\n\t\t\t\tvar config = timeline.$config;\n\t\t\t\tconfig.bind = utils.defined(config.bind) ? config.bind : \"task\";\n\t\t\t\tconfig.bindLinks = utils.defined(config.bindLinks) ? config.bindLinks : \"link\";\n\n\t\t\t\ttimeline._linksDnD = linkDnD.createLinkDND();\n\t\t\t\ttimeline._tasksDnD = taskDnD.createTaskDND();\n\t\t\t\ttimeline._tasksDnD.extend(timeline);\n\n\t\t\t\tthis._mouseDelegates = require(\"../mouse_event_container\")(gantt);\n\t\t\t},\n\t\t\tonInitialized: function (timeline) {\n\t\t\t\tthis._attachDomEvents(gantt);\n\n\t\t\t\tthis._attachStateProvider(gantt, timeline);\n\n\t\t\t\ttimeline._tasksDnD.init(timeline, gantt);\n\t\t\t\ttimeline._linksDnD.init(timeline, gantt);\n\n\t\t\t\tif(timeline.$config.id == \"timeline\"){\n\t\t\t\t\tthis.extendDom(timeline);\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tonDestroyed: function (timeline) {\n\t\t\t\tthis._clearDomEvents(gantt);\n\t\t\t\tthis._clearStateProvider(gantt);\n\t\t\t},\n\t\t\textendDom: function(timeline){\n\t\t\t\tgantt.$task = timeline.$task;\n\t\t\t\tgantt.$task_scale = timeline.$task_scale;\n\t\t\t\tgantt.$task_data = timeline.$task_data;\n\t\t\t\tgantt.$task_bg = timeline.$task_bg;\n\t\t\t\tgantt.$task_links = timeline.$task_links;\n\t\t\t\tgantt.$task_bars = timeline.$task_bars;\n\t\t\t},\n\n\t\t\t_clearDomEvents: function(){\n\t\t\t\tthis._mouseDelegates.destructor();\n\t\t\t\tthis._mouseDelegates = null;\n\t\t\t},\n\n\t\t\t_attachDomEvents: function(gantt){\n\t\t\t\tfunction _delete_link_handler(id, e) {\n\t\t\t\t\tif (id && this.callEvent(\"onLinkDblClick\", [id, e])) {\n\n\t\t\t\t\t\tvar link = this.getLink(id);\n\t\t\t\t\t\tif (this.isReadonly(link)) return;\n\n\t\t\t\t\t\tvar title = \"\";\n\t\t\t\t\t\tvar question = this.locale.labels.link + \" \" + this.templates.link_description(this.getLink(id)) + \" \" + this.locale.labels.confirm_link_deleting;\n\n\t\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t\tgantt._dhtmlx_confirm(question, title, function () {\n\t\t\t\t\t\t\t\tgantt.deleteLink(id);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, (this.config.touch ? 300 : 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_task_link\", gantt.bind(function (e, trg) {\n\t\t\t\t\tvar id = this.locate(e, this.config.link_attribute);\n\t\t\t\t\tif (id) {\n\t\t\t\t\t\tthis.callEvent(\"onLinkClick\", [id, e]);\n\t\t\t\t\t}\n\t\t\t\t}, gantt), this.$task);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_scale_cell\", gantt.bind(function (e, trg) {\n\t\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, gantt.$task_data);\n\t\t\t\t\tvar date = gantt.dateFromPos(pos.x);\n\t\t\t\t\tvar coll = Math.floor(gantt.columnIndexByDate(date));\n\n\t\t\t\t\tvar coll_date = gantt.getScale().trace_x[coll];\n\n\t\t\t\t\tgantt.callEvent(\"onScaleClick\", [e, coll_date]);\n\t\t\t\t}, gantt), this.$task);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"doubleclick\", \"gantt_task_link\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar id = this.locate(e, gantt.config.link_attribute);\n\t\t\t\t\t_delete_link_handler.call(this, id, e);\n\t\t\t\t}, gantt), this.$task);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"doubleclick\", \"gantt_link_point\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar id = this.locate(e),\n\t\t\t\t\t\ttask = this.getTask(id);\n\n\t\t\t\t\tvar link = null;\n\t\t\t\t\tif (trg.parentNode && domHelpers.getClassName(trg.parentNode)) {\n\t\t\t\t\t\tif (domHelpers.getClassName(trg.parentNode).indexOf(\"_left\") > -1) {\n\t\t\t\t\t\t\tlink = task.$target[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlink = task.$source[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (link)\n\t\t\t\t\t\t_delete_link_handler.call(this, link, e);\n\t\t\t\t\treturn false;\n\t\t\t\t}, gantt), this.$task);\n\t\t\t},\n\n\t\t\t_attachStateProvider: function(gantt, timeline){\n\t\t\t\tvar self = timeline;\n\t\t\t\tvar state = services.getService(\"state\");\n\t\t\t\tstate.registerProvider(\"tasksTimeline\", function(){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tscale_unit: self._tasks ? self._tasks.unit : undefined,\n\t\t\t\t\t\tscale_step:  self._tasks ? self._tasks.step  : undefined\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t_clearStateProvider: function(){\n\t\t\t\tvar state = services.getService(\"state\");\n\t\t\t\tstate.unregisterProvider(\"tasksTimeline\");\n\t\t\t}\n\t\t};\n\t};\n\n})();\n\nmodule.exports = initializer;","var domHelpers = require(\"../../../../utils/dom_helpers\");\n\n/**\n * methods for highlighting current drag and drop position\n */\n\nfunction highlightPosition(target, root, grid){\n\tvar markerPos = getTaskMarkerPosition(target, grid);\n\t// setting position of row\n\troot.marker.style.left = 10 + \"px\";\n\troot.marker.style.top = markerPos.y + \"px\";\n\tvar markerLine = root.markerLine;\n\tif(!markerLine){\n\t\tmarkerLine = document.createElement(\"div\");\n\t\tmarkerLine.className = \"gantt_drag_marker gantt_grid_dnd_marker\";\n\t\tmarkerLine.innerHTML = \"<div class='gantt_grid_dnd_marker_line'></div>\";\n\t\tmarkerLine.style.pointerEvents = \"none\";\n\t\tdocument.body.appendChild(markerLine);\n\t\troot.markerLine = markerLine;\n\t}\n\tif(target.child){\n\t\thighlightFolder(target, markerLine, grid);\n\t}else{\n\t\thighlightRow(target, markerLine, grid);\n\t}\n}\n\nfunction removeLineHighlight(root){\n\tif(root.markerLine && root.markerLine.parentNode){\n\t\troot.markerLine.parentNode.removeChild(root.markerLine);\n\t}\n\troot.markerLine = null;\n}\n\nfunction highlightRow(target, markerLine, grid){\n\tvar linePos = getLineMarkerPosition(target, grid);\n\n\tmarkerLine.innerHTML = \"<div class='gantt_grid_dnd_marker_line'></div>\";\n\tmarkerLine.style.left = linePos.x + \"px\";\n\tmarkerLine.style.height = \"4px\";\n\n\tmarkerLine.style.top = (linePos.y - 2) + \"px\";\n\tmarkerLine.style.width = linePos.width + \"px\";\n\n\treturn markerLine;\n}\nfunction highlightFolder(target, markerFolder, grid){\n\tvar id = target.targetParent;\n\tvar pos = gridToPageCoordinates({x: 0, y: grid.getItemTop(id)}, grid);\n\n\tmarkerFolder.innerHTML = \"<div class='gantt_grid_dnd_marker_folder'></div>\";\n\tmarkerFolder.style.width = grid.$grid_data.offsetWidth + \"px\";\n\tmarkerFolder.style.top = pos.y + \"px\";\n\tmarkerFolder.style.left = pos.x  + \"px\";\n\tmarkerFolder.style.height = grid.getItemHeight(id) + \"px\";\n\treturn markerFolder;\n}\n\nfunction getLineMarkerPosition(target, grid){\n\tvar store = grid.$config.rowStore;\n\tvar pos = {x:0, y:0};\n\tvar indentNode = grid.$grid_data.querySelector(\".gantt_tree_indent\");\n\tvar indent = 15;\n\tvar level = 0;\n\tif(indentNode){\n\t\tindent = indentNode.offsetWidth;\n\t}\n\tvar iconWidth = 40;\n\tif(target.targetId !== store.$getRootId()){\n\t\tvar itemTop = grid.getItemTop(target.targetId);\n\t\tvar itemHeight = grid.getItemHeight(target.targetId);\n\t\tlevel = store.exists(target.targetId) ? store.calculateItemLevel(store.getItem(target.targetId)) : 0;\n\n\t\tif(target.prevSibling){\n\t\t\tpos.y = itemTop;\n\t\t}else if(target.nextSibling){\n\t\t\tvar childCount = 0;\n\t\t\tstore.eachItem(function(child){\n\t\t\t\tif(store.getIndexById(child.id) !== -1)\n\t\t\t\t\tchildCount++;\n\t\t\t}, target.targetId);\n\n\t\t\tpos.y = itemTop + itemHeight + childCount*itemHeight;\n\t\t}else {\n\t\t\tpos.y = itemTop + itemHeight;\n\t\t\tlevel += 1;\n\t\t}\n\t}\n\tpos.x = iconWidth + level * indent;\n\tpos.width = Math.max(grid.$grid_data.offsetWidth - pos.x, 0);\n\treturn gridToPageCoordinates(pos, grid);\n}\n\nfunction gridToPageCoordinates(pos, grid){\n\tvar gridPos = domHelpers.getNodePosition(grid.$grid_data);\n\tpos.x += gridPos.x - grid.$grid.scrollLeft;\n\tpos.y += gridPos.y - grid.$grid_data.scrollTop;\n\treturn pos;\n}\n\nfunction getTaskMarkerPosition(e, grid) {\n\tvar pos = domHelpers.getNodePosition(grid.$grid_data);\n\tvar ePos = domHelpers.getRelativeEventPosition(e, grid.$grid_data);\n\tvar store = grid.$config.rowStore;\n\t// row offset\n\tvar x = pos.x;\n\tvar y = ePos.y - 10;\n\n\tvar config = grid.$getConfig();\n\t// prevent moving row out of grid_data container\n\tif (y < pos.y) y = pos.y;\n\tvar gridHeight = store.countVisible() * config.row_height;\n\tif (y > pos.y + gridHeight - config.row_height) y = pos.y + gridHeight - config.row_height;\n\n\tpos.x = x;\n\tpos.y = y;\n\treturn pos;\n}\n\nmodule.exports = {\n\tremoveLineHighlight: removeLineHighlight,\n\thighlightPosition: highlightPosition\n};\n","/**\n * resolve dnd position of the task when gantt.config.order_branch_free = true\n */\n\nvar dropTarget = require(\"./drop_target\");\n\nmodule.exports = function getMultiLevelDropPosition(dndTaskId, targetTaskId, relTargetPos, eventTop, store){\n\tvar result;\n\n\tif(targetTaskId !== store.$getRootId()){\n\t\tif(relTargetPos < 0.25){\n\t\t\tresult = dropTarget.prevSiblingTarget(dndTaskId, targetTaskId, store);\n\t\t}else if(relTargetPos > 0.60 && !(store.hasChild(targetTaskId) && store.getItem(targetTaskId).$open)){\n\t\t\tresult = dropTarget.nextSiblingTarget(dndTaskId, targetTaskId, store);\n\t\t}else {\n\t\t\tresult = dropTarget.firstChildTarget(dndTaskId, targetTaskId, store);\n\t\t}\n\t}else{\n\t\tvar rootId = store.$getRootId();\n\t\tif(store.hasChild(rootId) && eventTop >= 0){\n\t\t\tresult = dropTarget.lastChildTarget(dndTaskId, rootId, store);\n\t\t}else{\n\t\t\tresult = dropTarget.firstChildTarget(dndTaskId, rootId, store);\n\t\t}\n\t}\n\n\treturn result;\n};","/**\n * resolve dnd position of the task when gantt.config.order_branch_free = false\n */\n\nvar dropTarget = require(\"./drop_target\");\n\nfunction getLast(store){\n\tvar current = store.getNext();\n\twhile(store.exists(current)){\n\n\t\tvar next = store.getNext(current);\n\t\tif(!store.exists(next)){\n\t\t\treturn current;\n\t\t}else{\n\t\t\tcurrent = next;\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction findClosesTarget(dndTaskId, taskId, allowedLevel, store, up){\n\tvar prev = taskId;\n\twhile(store.exists(prev)){\n\t\tvar targetLevel = store.calculateItemLevel(store.getItem(prev));\n\t\tif((targetLevel === allowedLevel || targetLevel === (allowedLevel - 1)) && store.getBranchIndex(prev) > -1){\n\t\t\tbreak;\n\t\t}else {\n\t\t\tprev = up ? store.getPrev(prev) : store.getNext(prev);\n\t\t}\n\t}\n\n\tif(store.exists(prev)){\n\t\tif(store.calculateItemLevel(store.getItem(prev)) === allowedLevel){\n\t\t\treturn up ? dropTarget.nextSiblingTarget(dndTaskId, prev, store) : dropTarget.prevSiblingTarget(dndTaskId, prev, store);\n\t\t}else{\n\t\t\treturn dropTarget.firstChildTarget(dndTaskId, prev, store);\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction findTargetAbove(dndTaskId, taskId, allowedLevel, store){\n\treturn findClosesTarget(dndTaskId, taskId, allowedLevel, store, true);\n}\nfunction findTargetBelow(dndTaskId, taskId, allowedLevel, store){\n\treturn findClosesTarget(dndTaskId, taskId, allowedLevel, store, false);\n}\n\nmodule.exports = function getSameLevelDropPosition(dndTaskId, targetTaskId, relTargetPos, eventTop, store, level){\n\tvar result;\n\tif(targetTaskId !== store.$getRootId()) {\n\t\tif (relTargetPos < 0.5) {\n\t\t\tif (store.calculateItemLevel(store.getItem(targetTaskId)) === level) {\n\t\t\t\tif(store.getPrevSibling(targetTaskId)){\n\t\t\t\t\tresult = dropTarget.nextSiblingTarget(dndTaskId, store.getPrevSibling(targetTaskId), store);\n\t\t\t\t}else{\n\t\t\t\t\tresult = dropTarget.prevSiblingTarget(dndTaskId, targetTaskId, store);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult = findTargetAbove(dndTaskId, targetTaskId, level, store);\n\t\t\t\tif (result) {\n\t\t\t\t\tresult = findTargetBelow(dndTaskId, targetTaskId, level, store);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (store.calculateItemLevel(store.getItem(targetTaskId)) === level) {\n\t\t\t\tresult = dropTarget.nextSiblingTarget(dndTaskId, targetTaskId, store);\n\t\t\t} else {\n\t\t\t\tresult = findTargetBelow(dndTaskId, targetTaskId, level, store);\n\t\t\t\tif (result) {\n\t\t\t\t\tresult = findTargetAbove(dndTaskId, targetTaskId, level, store);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tvar rootId = store.$getRootId();\n\t\tvar rootLevel = store.getChildren(rootId);\n\t\tresult = dropTarget.createDropTargetObject();\n\t\tif(rootLevel.length && eventTop >= 0){\n\t\t\tresult = findTargetAbove(dndTaskId, getLast(store), level, store);\n\t\t}else{\n\t\t\tresult = findTargetBelow(dndTaskId, rootId, level, store);\n\t\t}\n\t}\n\n\treturn result;\n};\n","var domHelpers = require(\"../../../utils/dom_helpers\");\nvar dropTarget = require(\"./tasks_grid_dnd_marker_helpers/drop_target\");\nvar getLockedLevelTarget = require(\"./tasks_grid_dnd_marker_helpers/locked_level\");\nvar getMultiLevelTarget = require(\"./tasks_grid_dnd_marker_helpers/multi_level\");\nvar higlighter = require(\"./tasks_grid_dnd_marker_helpers/highlight\");\n\nfunction _init_dnd(gantt, grid) {\n\tvar DnD = gantt.$services.getService(\"dnd\");\n\n\tif(!grid.$config.bind || !gantt.getDatastore(grid.$config.bind)){\n\t\treturn;\n\t}\n\n\tfunction locate(e){\n\t\treturn domHelpers.locateAttribute(e, grid.$config.item_attribute);\n\t}\n\n\tvar dnd = new DnD(grid.$grid_data, {updates_per_second: 60});\n\tif (gantt.defined(grid.$getConfig().dnd_sensitivity))\n\t\tdnd.config.sensitivity = grid.$getConfig().dnd_sensitivity;\n\n\tdnd.attachEvent(\"onBeforeDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\t\tif (!el) return false;\n\t\tif (gantt.hideQuickInfo) gantt._hideQuickInfo();\n\n\t\tvar id = el.getAttribute(grid.$config.item_attribute);\n\t\tvar datastore = grid.$config.rowStore;\n\t\tvar task = datastore.getItem(id);\n\n\t\tif (gantt.isReadonly(task))\n\t\t\treturn false;\n\n\t\tdnd.config.initial_open_state = task.$open;\n\t\tif (!gantt.callEvent(\"onRowDragStart\", [id, e.target || e.srcElement, e])) {\n\t\t\treturn false;\n\t\t}\n\n\t}, gantt));\n\n\tdnd.attachEvent(\"onAfterDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\n\t\tdnd.config.marker.innerHTML = el.outerHTML;\n\t\tvar element = dnd.config.marker.firstChild;\n\t\tif(element){\n\t\t\tdnd.config.marker.style.opacity = 0.4;\n\t\t\telement.style.position = \"static\";\n\t\t\telement.style.pointerEvents = \"none\";\n\t\t}\n\t\t\n\t\tdnd.config.id = el.getAttribute(grid.$config.item_attribute);\n\n\t\tvar store = grid.$config.rowStore;\n\n\t\tvar task = store.getItem(dnd.config.id);\n\t\tdnd.config.level = store.calculateItemLevel(task);\n\t\tdnd.config.drop_target = dropTarget.createDropTargetObject({\n\t\t\ttargetParent: store.getParent(task.id),\n\t\t\ttargetIndex: store.getBranchIndex(task.id),\n\t\t\ttargetId: task.id,\n\t\t\tnextSibling: true\n\t\t});\n\n\t\ttask.$open = false;\n\t\ttask.$transparent = true;\n\t\tthis.refreshData();\n\t}, gantt));\n\n\tfunction getTargetTaskId(e){\n\t\tvar y = domHelpers.getRelativeEventPosition(e, grid.$grid_data).y;\n\t\tvar store = grid.$config.rowStore;\n\n\t\ty = y || 0;\n\n\t\tif(y < 0){\n\t\t\treturn store.$getRootId();\n\t\t}\n\n\t\tvar index = Math.floor(y / grid.getItemHeight());\n\n\t\tif (index > store.countVisible() - 1)\n\t\t\treturn store.$getRootId();\n\n\t\treturn store.getIdByIndex(index);\n\t}\n\n\tfunction getDropPosition(e){\n\t\tvar targetTaskId = getTargetTaskId(e);\n\t\tvar relTargetPos = null;\n\t\tvar store = grid.$config.rowStore;\n\t\tvar config = grid.$getConfig();\n\t\tvar lockLevel = !config.order_branch_free;\n\n\t\tvar eventTop = domHelpers.getRelativeEventPosition(e, grid.$grid_data).y;\n\n\t\tif(targetTaskId !== store.$getRootId()) {\n\t\t\tvar rowTop = grid.getItemTop(targetTaskId);\n\t\t\tvar rowHeight = grid.getItemHeight();\n\t\t\trelTargetPos = (eventTop - rowTop) / rowHeight;\n\t\t}\n\n\t\tvar result;\n\t\tif(!lockLevel){\n\t\t\tresult = getMultiLevelTarget(dnd.config.id, targetTaskId, relTargetPos, eventTop, store);\n\t\t}else{\n\t\t\tresult = getLockedLevelTarget(dnd.config.id, targetTaskId, relTargetPos, eventTop, store, dnd.config.level);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tdnd.attachEvent(\"onDragMove\", gantt.bind(function (obj, e) {\n\t\tvar target = getDropPosition(e);\n\n\t\tif(!target || \n\t\t\tgantt.callEvent(\"onBeforeRowDragMove\", [dnd.config.id, target.targetParent, target.targetIndex]) === false){\n\t\t\t\ttarget = dropTarget.createDropTargetObject(dnd.config.drop_target);\n\t\t\t}\n\t\t\n\t\thiglighter.highlightPosition(target, dnd.config, grid);\n\t\tdnd.config.drop_target = target;\n\n\t\tthis.callEvent(\"onRowDragMove\", [dnd.config.id, target.targetParent, target.targetIndex]);\n\t\treturn true;\n\t}, gantt));\n\n\tdnd.attachEvent(\"onDragEnd\", gantt.bind(function () {\n\t\tvar store = grid.$config.rowStore;\n\t\tvar task = store.getItem(dnd.config.id);\n\n\t\thiglighter.removeLineHighlight(dnd.config);\n\n\t\ttask.$transparent = false;\n\t\ttask.$open = dnd.config.initial_open_state;\n\t\tvar target = dnd.config.drop_target;\n\n\t\tif (this.callEvent(\"onBeforeRowDragEnd\", [dnd.config.id, target.targetParent, target.targetIndex]) === false) {\n\t\t\ttask.$drop_target = null;\n\t\t} else {\n\t\t\tstore.move(dnd.config.id, target.targetIndex, target.targetParent);\n\t\t\tthis.callEvent(\"onRowDragEnd\", [dnd.config.id, target.targetParent, target.targetIndex]);\n\t\t}\n\t\tstore.refresh(task.id);\n\t}, gantt));\n}\n\nmodule.exports = {\n\tinit: _init_dnd\n};","var domHelpers = require(\"../../../utils/dom_helpers\");\n\nfunction _init_dnd(gantt, grid) {\n\tvar DnD = gantt.$services.getService(\"dnd\");\n\n\tif(!grid.$config.bind || !gantt.getDatastore(grid.$config.bind)){\n\t\treturn;\n\t}\n\n\tfunction locate(e){\n\t\treturn domHelpers.locateAttribute(e, grid.$config.item_attribute);\n\t}\n\n\tfunction getStore(){\n\t\treturn gantt.getDatastore(grid.$config.bind);\n\t}\n\n\tvar dnd = new DnD(grid.$grid_data, {updates_per_second: 60});\n\tif (gantt.defined(grid.$getConfig().dnd_sensitivity))\n\t\tdnd.config.sensitivity = grid.$getConfig().dnd_sensitivity;\n\n\tdnd.attachEvent(\"onBeforeDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\t\tif (!el) return false;\n\t\tif (gantt.hideQuickInfo) gantt._hideQuickInfo();\n\n\t\tvar id = el.getAttribute(grid.$config.item_attribute);\n\n\t\tvar datastore = getStore();\n\n\t\tvar task = datastore.getItem(id);\n\n\t\tif (gantt.isReadonly(task))\n\t\t\treturn false;\n\n\t\tdnd.config.initial_open_state = task.$open;\n\t\tif (!gantt.callEvent(\"onRowDragStart\", [id, e.target || e.srcElement, e])) {\n\t\t\treturn false;\n\t\t}\n\n\t}, gantt));\n\n\tdnd.attachEvent(\"onAfterDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\t\tdnd.config.marker.innerHTML = el.outerHTML;\n\t\tvar element = dnd.config.marker.firstChild;\n\t\tif(element){\n\t\t\telement.style.position = \"static\";\n\t\t}\n\n\t\tdnd.config.id = el.getAttribute(grid.$config.item_attribute);\n\n\t\tvar store = getStore();\n\n\t\tvar task = store.getItem(dnd.config.id);\n\t\tdnd.config.index = store.getBranchIndex(dnd.config.id);\n\t\tdnd.config.parent = task.parent;\n\t\ttask.$open = false;\n\t\ttask.$transparent = true;\n\t\tthis.refreshData();\n\t}, gantt));\n\n\tdnd.lastTaskOfLevel = function (level) {\n\t\tvar last_item = null;\n\t\tvar store = getStore();\n\t\tvar tasks = store.getItems();\n\t\tfor (var i = 0, len = tasks.length; i < len; i++) {\n\t\t\tif (tasks[i].$level == level) {\n\t\t\t\tlast_item = tasks[i];\n\t\t\t}\n\t\t}\n\t\treturn last_item ? last_item.id : null;\n\t};\n\tdnd._getGridPos = gantt.bind(function (e) {\n\t\tvar pos = domHelpers.getNodePosition(grid.$grid_data);\n\t\tvar store = getStore();\n\t\t// row offset\n\t\tvar x = pos.x;\n\t\tvar y = e.pos.y - 10;\n\n\t\tvar config = grid.$getConfig();\n\t\t// prevent moving row out of grid_data container\n\t\tif (y < pos.y) y = pos.y;\n\t\tvar gridHeight = store.countVisible() * config.row_height;\n\t\tif (y > pos.y + gridHeight - config.row_height) y = pos.y + gridHeight - config.row_height;\n\n\t\tpos.x = x;\n\t\tpos.y = y;\n\t\treturn pos;\n\t}, gantt);\n\tdnd._getTargetY = gantt.bind(function (e) {\n\t\tvar pos = domHelpers.getNodePosition(grid.$grid_data);\n\n\t\tvar y = e.pageY - pos.y + (grid.$state.scrollTop || 0);\n\t\tif (y < 0)\n\t\t\ty = 0;\n\t\treturn y;\n\t}, gantt);\n\tdnd._getTaskByY = gantt.bind(function (y, dropIndex) {\n\n\t\tvar config = grid.$getConfig(),\n\t\t\tstore = getStore();\n\n\t\ty = y || 0;\n\n\t\tvar index = Math.floor(y / config.row_height);\n\t\tindex = dropIndex < index ? index - 1 : index;\n\n\t\tif (index > store.countVisible() - 1)\n\t\t\treturn null;\n\n\t\treturn store.getIdByIndex(index);\n\t}, gantt);\n\tdnd.attachEvent(\"onDragMove\", gantt.bind(function (obj, e) {\n\t\tvar dd = dnd.config;\n\t\tvar pos = dnd._getGridPos(e);\n\n\t\tvar config = grid.$getConfig(),\n\t\t\tstore = getStore();\n\n\t\t// setting position of row\n\t\tdd.marker.style.left = pos.x + 10 + \"px\";\n\t\tdd.marker.style.top = pos.y + \"px\";\n\n\t\t// highlight row when mouseover\n\t\tvar item = store.getItem(dnd.config.id);\n\t\tvar targetY = dnd._getTargetY(e);\n\t\tvar el = dnd._getTaskByY(targetY, store.getIndexById(item.id));\n\n\t\tif (!store.exists(el)) {\n\t\t\tel = dnd.lastTaskOfLevel(config.order_branch_free ? item.$level : 0);\n\t\t\tif (el == dnd.config.id) {\n\t\t\t\tel = null;\n\t\t\t}\n\t\t}\n\n\t\tfunction allowedLevel(next, item) {\n\t\t\treturn (!(store.isChildOf(over.id, item.id)) && (next.$level == item.$level || config.order_branch_free));\n\t\t}\n\n\t\tif (store.exists(el)) {\n\t\t\tvar over = store.getItem(el);\n\n\t\t\tif (store.getIndexById(over.id) * config.row_height + config.row_height / 2 < targetY) {\n\t\t\t\t//hovering over bottom part of item, check can be drop to bottom\n\t\t\t\tvar index = store.getIndexById(over.id);\n\t\t\t\tvar nextId = store.getNext(over.id);//adds +1 when hovering over placeholder\n\t\t\t\tvar next = store.getItem(nextId);\n\t\t\t\tif (next) {\n\t\t\t\t\tif (next.id != item.id) {\n\t\t\t\t\t\tover = next; //there is a valid target\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (config.order_branch_free) {\n\t\t\t\t\t\t\tif (!(store.isChildOf(item.id, over.id) && store.getChildren(over.id).length == 1))\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tstore.move(item.id, store.getBranchIndex(over.id) + 1, store.getParent(over.id));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//we at end of the list, check and drop at the end of list\n\t\t\t\t\tnextId = store.getIdByIndex(index);\n\t\t\t\t\tnext = store.getItem(nextId);\n\n\t\t\t\t\tif (allowedLevel(next, item) && next.id != item.id) {\n\t\t\t\t\t\tstore.move(item.id, -1, store.getParent(next.id));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (config.order_branch_free) {\n\t\t\t\tif (over.id != item.id && allowedLevel(over, item)) {\n\t\t\t\t\tif (!store.hasChild(over.id)) {\n\t\t\t\t\t\tover.$open = true;\n\t\t\t\t\t\tstore.move(item.id, -1, over.id);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (store.getIndexById(over.id) || config.row_height / 3 < targetY) return;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//if item is on different level, check the one before it\n\t\t\tvar index = store.getIndexById(over.id),\n\t\t\t\tprevId = store.getIdByIndex(index - 1);\n\n\t\t\tvar prev = store.getItem(prevId);\n\n\t\t\tvar shift = 1;\n\t\t\twhile ((!prev || prev.id == over.id) && index - shift >= 0) {\n\n\t\t\t\tprevId = store.getIdByIndex(index - shift);\n\t\t\t\tprev = store.getItem(prevId);\n\t\t\t\tshift++;\n\t\t\t}\n\n\t\t\tif (item.id == over.id) return;\n\t\t\t//replacing item under cursor\n\t\t\tif (allowedLevel(over, item) && item.id != over.id) {\n\t\t\t\tstore.move(item.id, 0, 0, over.id);\n\n\t\t\t} else if (over.$level == item.$level - 1 && !store.getChildren(over.id).length) {\n\t\t\t\tstore.move(item.id, 0, over.id);\n\n\t\t\t} else if (prev && (allowedLevel(prev, item)) && (item.id != prev.id)) {\n\t\t\t\tstore.move(item.id, -1, store.getParent(prev.id));\n\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}, gantt));\n\n\tdnd.attachEvent(\"onDragEnd\", gantt.bind(function () {\n\t\tvar store = getStore();\n\t\tvar task = store.getItem(dnd.config.id);\n\t\ttask.$transparent = false;\n\t\ttask.$open = dnd.config.initial_open_state;\n\n\t\tif (this.callEvent(\"onBeforeRowDragEnd\", [dnd.config.id, dnd.config.parent, dnd.config.index]) === false) {\n\t\t\tstore.move(dnd.config.id, dnd.config.index, dnd.config.parent);\n\t\t\ttask.$drop_target = null;\n\t\t} else {\n\t\t\tthis.callEvent(\"onRowDragEnd\", [dnd.config.id, task.$drop_target]);\n\t\t}\n\t\t\n\t\tstore.refresh(task.id);\n\t\t//this.refreshData();\n\t}, gantt));\n}\n\nmodule.exports = {\n\tinit: _init_dnd\n};","var utils = require(\"../../../utils/utils\");\nvar rowDnd = require(\"./tasks_grid_dnd\");\nvar rowDndMarker = require(\"./tasks_grid_dnd_marker\");\n\nvar initializer = (function(){\n\treturn function(gantt){\n\t\treturn {\n\t\t\tonCreated: function (grid) {\n\t\t\t\tgrid.$config = utils.mixin(grid.$config, {\n\t\t\t\t\tbind: \"task\"\n\t\t\t\t});\n\t\t\t\tif(grid.$config.id == \"grid\") {\n\t\t\t\t\tthis.extendGantt(grid);\n\t\t\t\t\tgantt.ext.inlineEditors = gantt.ext._inlineEditors.createEditors(grid);\n\t\t\t\t\tgantt.ext.inlineEditors.init();\n\t\t\t\t}\n\n\t\t\t\tthis._mouseDelegates = require(\"../mouse_event_container\")(gantt);\n\t\t\t},\n\t\t\tonInitialized: function (grid) {\n\t\t\t\tvar config = grid.$getConfig();\n\t\t\t\tif (config.order_branch) {\n\t\t\t\t\tif(config.order_branch == \"marker\"){\n\t\t\t\t\t\trowDndMarker.init(grid.$gantt, grid);\n\t\t\t\t\t}else{\n\t\t\t\t\t\trowDnd.init(grid.$gantt, grid);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.initEvents(grid, gantt);\n\t\t\t\tif(grid.$config.id == \"grid\") {\n\t\t\t\t\tthis.extendDom(grid);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDestroyed: function (grid) {\n\t\t\t\tif(grid.$config.id == \"grid\") {\n\t\t\t\t\tgantt.ext.inlineEditors.destructor();\n\t\t\t\t}\n\t\t\t\tthis.clearEvents(grid, gantt);\n\t\t\t},\n\n\t\t\tinitEvents: function (grid, gantt) {\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_row\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar config = grid.$getConfig();\n\t\t\t\t\tif (id !== null) {\n\t\t\t\t\t\tvar task = this.getTask(id);\n\t\t\t\t\t\tif (config.scroll_on_click && !gantt._is_icon_open_click(e))\n\t\t\t\t\t\t\tthis.showDate(task.start_date);\n\t\t\t\t\t\tgantt.callEvent(\"onTaskRowClick\", [id, trg]);\n\t\t\t\t\t}\n\t\t\t\t}, gantt), grid.$grid);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_grid_head_cell\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar column = trg.getAttribute(\"data-column-id\");\n\n\t\t\t\t\tif (!gantt.callEvent(\"onGridHeaderClick\", [column, e]))\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tvar config = grid.$getConfig();\n\n\t\t\t\t\tif (column == \"add\") {\n\t\t\t\t\t\tvar mouseEvents = gantt.$services.getService(\"mouseEvents\");\n\t\t\t\t\t\tmouseEvents.callHandler(\"click\", \"gantt_add\", grid.$grid, [e, config.root_id]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (config.sort) {\n\t\t\t\t\t\tvar sorting_method = column,\n\t\t\t\t\t\t\tconf;\n\n\t\t\t\t\t\tfor (var i = 0; i < config.columns.length; i++) {\n\t\t\t\t\t\t\tif (config.columns[i].name == column) {\n\t\t\t\t\t\t\t\tconf = config.columns[i];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (conf && conf.sort !== undefined && conf.sort !== true) {\n\t\t\t\t\t\t\tsorting_method = conf.sort;\n\n\t\t\t\t\t\t\tif (!sorting_method) { // column sort property 'false', no sorting\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar sort = (this._sort && this._sort.direction && this._sort.name == column) ? this._sort.direction : \"desc\";\n\t\t\t\t\t\t// invert sort direction\n\t\t\t\t\t\tsort = (sort == \"desc\") ? \"asc\" : \"desc\";\n\t\t\t\t\t\tthis._sort = {\n\t\t\t\t\t\t\tname: column,\n\t\t\t\t\t\t\tdirection: sort\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.sort(sorting_method, sort == \"desc\");\n\t\t\t\t\t}\n\t\t\t\t}, gantt), grid.$grid);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_add\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar config = grid.$getConfig();\n\t\t\t\t\tif (config.readonly) return;\n\n\t\t\t\t\tvar item = {};\n\t\t\t\t\tthis.createTask(item, id ? id : gantt.config.root_id);\n\n\t\t\t\t\treturn false;\n\t\t\t\t}, gantt), grid.$grid);\n\n\t\t\t},\n\n\t\t\tclearEvents: function(grid, gantt){\n\t\t\t\tthis._mouseDelegates.destructor();\n\t\t\t\tthis._mouseDelegates = null;\n\t\t\t},\n\n\t\t\textendDom: function(grid){\n\t\t\t\tgantt.$grid = grid.$grid;\n\t\t\t\tgantt.$grid_scale = grid.$grid_scale;\n\t\t\t\tgantt.$grid_data = grid.$grid_data;\n\t\t\t},\n\t\t\textendGantt: function(grid){\n\t\t\t\tgantt.getGridColumns = gantt.bind(grid.getGridColumns, grid);\n\n\t\t\t\tgrid.attachEvent(\"onColumnResizeStart\", function(){\n\t\t\t\t\treturn gantt.callEvent(\"onColumnResizeStart\", arguments);\n\t\t\t\t});\n\t\t\t\tgrid.attachEvent(\"onColumnResize\", function(){\n\t\t\t\t\treturn gantt.callEvent(\"onColumnResize\", arguments);\n\t\t\t\t});\n\t\t\t\tgrid.attachEvent(\"onColumnResizeEnd\", function(){\n\t\t\t\t\treturn gantt.callEvent(\"onColumnResizeEnd\", arguments);\n\t\t\t\t});\n\n\t\t\t\tgrid.attachEvent(\"onColumnResizeComplete\", function(columns, totalWidth){\n\t\t\t\t\tgantt.config.grid_width = totalWidth;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n})();\n\nmodule.exports = initializer;","var helpers = require(\"../../../utils/helpers\");\n\nfunction createGridLineRender(gantt){\n\tfunction _render_grid_item(item, view) {\n\t\t//if (!_is_grid_visible.call(this))\n\t\t//\treturn null;\n\n\t\tvar columns = view.getGridColumns();\n\t\tvar config = view.$getConfig(),\n\t\t\ttemplates = view.$getTemplates();\n\n\t\tvar store = view.$config.rowStore;\n\n\t\tif(config.rtl){\n\t\t\tcolumns = columns.reverse();\n\t\t}\n\n\t\tvar cells = [];\n\t\tvar has_child;\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar last = i == columns.length - 1;\n\t\t\tvar col = columns[i];\n\t\t\tvar cell;\n\n\t\t\tvar value;\n\t\t\tvar textValue;\n\t\t\tif (col.name == \"add\") {\n\t\t\t\tvar aria = gantt._waiAria.gridAddButtonAttrString(col);\n\n\t\t\t\tvalue = \"<div \" + aria + \" class='gantt_add'></div>\";\n\t\t\t\ttextValue = \"\";\n\t\t\t} else {\n\t\t\t\tif (col.template)\n\t\t\t\t\tvalue = col.template(item);\n\t\t\t\telse\n\t\t\t\t\tvalue = item[col.name];\n\n\t\t\t\tif (helpers.isDate(value))\n\t\t\t\t\tvalue = templates.date_grid(value, item);\n\t\t\t\ttextValue = value;\n\t\t\t\tvalue = \"<div class='gantt_tree_content'>\" + value + \"</div>\";\n\t\t\t}\n\t\t\tvar css = \"gantt_cell\" + (last ? \" gantt_last_cell\" : \"\");\n\n\t\t\tvar tree = [];\n\t\t\tif (col.tree) {\n\t\t\t\tfor (var j = 0; j < item.$level; j++)\n\t\t\t\t\ttree.push(templates.grid_indent(item));\n\n\t\t\t\thas_child = store.hasChild(item.id) && !(gantt.isSplitTask(item));\n\t\t\t\tif (has_child) {\n\t\t\t\t\ttree.push(templates.grid_open(item));\n\t\t\t\t\ttree.push(templates.grid_folder(item));\n\t\t\t\t} else {\n\t\t\t\t\ttree.push(templates.grid_blank(item));\n\t\t\t\t\ttree.push(templates.grid_file(item));\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar style = \"width:\" + (col.width - (last ? 1 : 0)) + \"px;\";\n\t\t\tif (this.defined(col.align))\n\t\t\t\tstyle += \"text-align:\" + col.align + \";\";\n\n\t\t\tvar aria = gantt._waiAria.gridCellAttrString(col, textValue);\n\n\t\t\ttree.push(value);\n\t\t\tif(config.rtl){\n\t\t\t\ttree = tree.reverse();\n\t\t\t}\n\t\t\tcell = \"<div class='\" + css + \"' data-column-index='\"+i+\"' data-column-name='\"+col.name+\"' style='\" + style + \"' \" + aria + \">\" + tree.join(\"\") + \"</div>\";\n\t\t\tcells.push(cell);\n\t\t}\n\t\tvar css = gantt.getGlobalTaskIndex(item.id) % 2 === 0 ? \"\" : \" odd\";\n\t\tcss += (item.$transparent) ? \" gantt_transparent\" : \"\";\n\n\t\tcss += (item.$dataprocessor_class ? \" \" + item.$dataprocessor_class : \"\");\n\n\t\tif (templates.grid_row_class) {\n\t\t\tvar css_template = templates.grid_row_class.call(gantt, item.start_date, item.end_date, item);\n\t\t\tif (css_template)\n\t\t\t\tcss += \" \" + css_template;\n\t\t}\n\n\t\tif(store.getSelectedId() == item.id) {\n\t\t\tcss += \" gantt_selected\";\n\t\t}\n\n\t\tvar el = document.createElement(\"div\");\n\t\tel.className = \"gantt_row\" + css + \" gantt_row_\" + gantt.getTaskType(item.type);\n\t\tvar height = view.getItemHeight();\n\t\tel.style.height = height + \"px\";\n\t\tel.style.lineHeight = height + \"px\";\n\n\t\tif(config.smart_rendering){\n\t\t\tel.style.position = \"absolute\";\n\t\t\tel.style.left = \"0px\";\n\t\t\tel.style.top = view.getItemTop(item.id) + \"px\";\n\t\t}\n\n\t\tif(view.$config.item_attribute){\n\t\t\tel.setAttribute(view.$config.item_attribute, item.id);\n\t\t}\n\n\t\tgantt._waiAria.taskRowAttr(item, el);\n\n\t\tel.innerHTML = cells.join(\"\");\n\t\treturn el;\n\t}\n\n\treturn _render_grid_item;\n}\n\nmodule.exports = createGridLineRender;\n\n","\nfunction createLinkRender(gantt){\n\nfunction _render_link_element(link, view) {\n\tvar config = view.$getConfig();\n\n\tvar pt = path_builder.get_endpoint(link, view);\n\tvar dy = pt.e_y - pt.y;\n\tvar dx = pt.e_x - pt.x;\n\tif(!dx && !dy){\n\t\treturn null;\n\t}\n\n\n\tvar dots = path_builder.get_points(link, view);\n\tvar lines = drawer.get_lines(dots, view);\n\n\tvar div = document.createElement(\"div\");\n\n\tvar css = \"gantt_task_link\";\n\n\tif (link.color) {\n\t\tcss += \" gantt_link_inline_color\";\n\t}\n\tvar cssTemplate = gantt.templates.link_class ? gantt.templates.link_class(link) : \"\";\n\tif (cssTemplate) {\n\t\tcss += \" \" + cssTemplate;\n\t}\n\n\tif (config.highlight_critical_path && gantt.isCriticalLink) {\n\t\tif (gantt.isCriticalLink(link))\n\t\t\tcss += \" gantt_critical_link\";\n\t}\n\n\tdiv.className = css;\n\n\tif(view.$config.link_attribute){\n\t\tdiv.setAttribute(view.$config.link_attribute, link.id);\n\t}\n\n\tfor (var i = 0; i < lines.length; i++) {\n\t\tif (i == lines.length - 1) {\n\t\t\tlines[i].size -= config.link_arrow_size;\n\t\t}\n\t\tvar el = drawer.render_line(lines[i], lines[i + 1], view);\n\t\tif (link.color) {\n\t\t\tel.firstChild.style.backgroundColor = link.color;\n\t\t}\n\t\tdiv.appendChild(el);\n\t}\n\n\tvar direction = lines[lines.length - 1].direction;\n\tvar endpoint = _render_link_arrow(dots[dots.length - 1], direction, view);\n\tif (link.color) {\n\t\tendpoint.style.borderColor = link.color;\n\t}\n\tdiv.appendChild(endpoint);\n\n\tgantt._waiAria.linkAttr(link, div);\n\n\treturn div;\n}\n\nfunction _render_link_arrow(point, direction, view) {\n\tvar config = view.$getConfig();\n\tvar div = document.createElement(\"div\");\n\tvar top = point.y;\n\tvar left = point.x;\n\n\tvar size = config.link_arrow_size;\n\tvar line_width = config.row_height;\n\tvar className = \"gantt_link_arrow gantt_link_arrow_\" + direction;\n\tswitch (direction) {\n\t\tcase drawer.dirs.right:\n\t\t\ttop -= (size - line_width) / 2;\n\t\t\tleft -= size;\n\t\t\tbreak;\n\t\tcase drawer.dirs.left:\n\t\t\ttop -= (size - line_width) / 2;\n\t\t\tbreak;\n\t\tcase drawer.dirs.up:\n\t\t\tleft -= size;\n\t\t\tbreak;\n\t\tcase drawer.dirs.down:\n\t\t\ttop += size * 2;\n\t\t\tleft -= size;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\tdiv.style.cssText = [\n\t\t\"top:\" + top + \"px\",\n\t\t\"left:\" + left + 'px'].join(';');\n\tdiv.className = className;\n\n\treturn div;\n}\n\n\nvar drawer = {\n\tcurrent_pos: null,\n\tdirs: {\"left\": 'left', \"right\": 'right', \"up\": 'up', \"down\": 'down'},\n\tpath: [],\n\tclear: function () {\n\t\tthis.current_pos = null;\n\t\tthis.path = [];\n\t},\n\tpoint: function (pos) {\n\t\tthis.current_pos = gantt.copy(pos);\n\t},\n\tget_lines: function (dots) {\n\t\tthis.clear();\n\t\tthis.point(dots[0]);\n\t\tfor (var i = 1; i < dots.length; i++) {\n\t\t\tthis.line_to(dots[i]);\n\t\t}\n\t\treturn this.get_path();\n\t},\n\tline_to: function (pos) {\n\t\tvar next = gantt.copy(pos);\n\t\tvar prev = this.current_pos;\n\n\t\tvar line = this._get_line(prev, next);\n\t\tthis.path.push(line);\n\t\tthis.current_pos = next;\n\t},\n\tget_path: function () {\n\t\treturn this.path;\n\t},\n\tget_wrapper_sizes: function (v, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar res,\n\t\t\twrapper_size = config.link_wrapper_width,\n\t\t\ty = v.y + (config.row_height - wrapper_size) / 2;\n\t\tswitch (v.direction) {\n\t\t\tcase this.dirs.left:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y,\n\t\t\t\t\theight: wrapper_size,\n\t\t\t\t\tlineHeight: wrapper_size,\n\t\t\t\t\tleft: v.x - v.size - wrapper_size / 2,\n\t\t\t\t\twidth: v.size + wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.right:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y,\n\t\t\t\t\tlineHeight: wrapper_size,\n\t\t\t\t\theight: wrapper_size,\n\t\t\t\t\tleft: v.x - wrapper_size / 2,\n\t\t\t\t\twidth: v.size + wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.up:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y - v.size,\n\t\t\t\t\tlineHeight: v.size + wrapper_size,\n\t\t\t\t\theight: v.size + wrapper_size,\n\t\t\t\t\tleft: v.x - wrapper_size / 2,\n\t\t\t\t\twidth: wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.down:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y /*- wrapper_size/2*/,\n\t\t\t\t\tlineHeight: v.size + wrapper_size,\n\t\t\t\t\theight: v.size + wrapper_size,\n\t\t\t\t\tleft: v.x - wrapper_size / 2,\n\t\t\t\t\twidth: wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn res;\n\t},\n\tget_line_sizes: function (v, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar res,\n\t\t\tline_size = config.link_line_width,\n\t\t\twrapper_size = config.link_wrapper_width,\n\t\t\tsize = v.size + line_size;\n\t\tswitch (v.direction) {\n\t\t\tcase this.dirs.left:\n\t\t\tcase this.dirs.right:\n\t\t\t\tres = {\n\t\t\t\t\theight: line_size,\n\t\t\t\t\twidth: size,\n\t\t\t\t\tmarginTop: (wrapper_size - line_size) / 2,\n\t\t\t\t\tmarginLeft: (wrapper_size - line_size) / 2\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.up:\n\t\t\tcase this.dirs.down:\n\t\t\t\tres = {\n\t\t\t\t\theight: size,\n\t\t\t\t\twidth: line_size,\n\t\t\t\t\tmarginTop: (wrapper_size - line_size) / 2,\n\t\t\t\t\tmarginLeft: (wrapper_size - line_size) / 2\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\n\t\treturn res;\n\t},\n\trender_line: function (v, end, view) {\n\t\tvar pos = this.get_wrapper_sizes(v, view);\n\t\tvar wrapper = document.createElement(\"div\");\n\t\twrapper.style.cssText = [\n\t\t\t\"top:\" + pos.top + \"px\",\n\t\t\t\"left:\" + pos.left + \"px\",\n\t\t\t\"height:\" + pos.height + \"px\",\n\t\t\t\"width:\" + pos.width + \"px\"\n\t\t].join(';');\n\t\twrapper.className = \"gantt_line_wrapper\";\n\n\t\tvar innerPos = this.get_line_sizes(v, view);\n\t\tvar inner = document.createElement(\"div\");\n\t\tinner.style.cssText = [\n\t\t\t\"height:\" + innerPos.height + \"px\",\n\t\t\t\"width:\" + innerPos.width + \"px\",\n\t\t\t\"margin-top:\" + innerPos.marginTop + \"px\",\n\t\t\t\"margin-left:\" + innerPos.marginLeft + \"px\"\n\t\t].join(\";\");\n\n\t\tinner.className = \"gantt_link_line_\" + v.direction;\n\t\twrapper.appendChild(inner);\n\n\t\treturn wrapper;\n\t},\n\t_get_line: function (from, to) {\n\t\tvar direction = this.get_direction(from, to);\n\t\tvar vect = {\n\t\t\tx: from.x,\n\t\t\ty: from.y,\n\t\t\tdirection: this.get_direction(from, to)\n\t\t};\n\t\tif (direction == this.dirs.left || direction == this.dirs.right) {\n\t\t\tvect.size = Math.abs(from.x - to.x);\n\t\t} else {\n\t\t\tvect.size = Math.abs(from.y - to.y);\n\t\t}\n\t\treturn vect;\n\t},\n\tget_direction: function (from, to) {\n\t\tvar direction = 0;\n\t\tif (to.x < from.x) {\n\t\t\tdirection = this.dirs.left;\n\t\t} else if (to.x > from.x) {\n\t\t\tdirection = this.dirs.right;\n\t\t} else if (to.y > from.y) {\n\t\t\tdirection = this.dirs.down;\n\t\t} else {\n\t\t\tdirection = this.dirs.up;\n\t\t}\n\t\treturn direction;\n\t}\n\n};\n\nvar path_builder = {\n\n\tpath: [],\n\tclear: function () {\n\t\tthis.path = [];\n\t},\n\tcurrent: function () {\n\t\treturn this.path[this.path.length - 1];\n\t},\n\tpoint: function (next) {\n\t\tif (!next)\n\t\t\treturn this.current();\n\n\t\tthis.path.push(gantt.copy(next));\n\t\treturn next;\n\t},\n\tpoint_to: function (direction, diff, point) {\n\t\tif (!point)\n\t\t\tpoint = gantt.copy(this.point());\n\t\telse\n\t\t\tpoint = {x: point.x, y: point.y};\n\t\tvar dir = drawer.dirs;\n\t\tswitch (direction) {\n\t\t\tcase (dir.left):\n\t\t\t\tpoint.x -= diff;\n\t\t\t\tbreak;\n\t\t\tcase (dir.right):\n\t\t\t\tpoint.x += diff;\n\t\t\t\tbreak;\n\t\t\tcase (dir.up):\n\t\t\t\tpoint.y -= diff;\n\t\t\t\tbreak;\n\t\t\tcase (dir.down):\n\t\t\t\tpoint.y += diff;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this.point(point);\n\t},\n\tget_points: function (link, view) {\n\t\tvar pt = this.get_endpoint(link, view);\n\t\tvar xy = gantt.config;\n\n\t\tvar dy = pt.e_y - pt.y;\n\t\tvar dx = pt.e_x - pt.x;\n\n\t\tvar dir = drawer.dirs;\n\n\t\tthis.clear();\n\t\tthis.point({x: pt.x, y: pt.y});\n\n\t\tvar shiftX = 2 * xy.link_arrow_size;//just random size for first line\n\t\tvar lineType = this.get_line_type(link, view.$getConfig());\n\n\t\tvar forward = (pt.e_x > pt.x);\n\t\tif (lineType.from_start && lineType.to_start) {\n\t\t\tthis.point_to(dir.left, shiftX);\n\t\t\tif (forward) {\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t} else {\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t}\n\t\t\tthis.point_to(dir.right, shiftX);\n\n\t\t} else if (!lineType.from_start && lineType.to_start) {\n\t\t\tforward = (pt.e_x > (pt.x + 2 * shiftX));\n\t\t\tthis.point_to(dir.right, shiftX);\n\t\t\tif (forward) {\n\t\t\t\tdx -= shiftX;\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t} else {\n\t\t\t\tdx -= 2 * shiftX;\n\t\t\t\tvar sign = dy > 0 ? 1 : -1;\n\n\t\t\t\tthis.point_to(dir.down, sign * (xy.row_height / 2));\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, sign * ( Math.abs(dy) - (xy.row_height / 2)));\n\t\t\t\tthis.point_to(dir.right, shiftX);\n\t\t\t}\n\n\t\t} else if (!lineType.from_start && !lineType.to_start) {\n\t\t\tthis.point_to(dir.right, shiftX);\n\t\t\tif (forward) {\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t} else {\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t}\n\t\t\tthis.point_to(dir.left, shiftX);\n\t\t} else if (lineType.from_start && !lineType.to_start) {\n\n\t\t\tforward = (pt.e_x > (pt.x - 2 * shiftX));\n\t\t\tthis.point_to(dir.left, shiftX);\n\n\t\t\tif (!forward) {\n\t\t\t\tdx += shiftX;\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t} else {\n\t\t\t\tdx += 2 * shiftX;\n\t\t\t\tvar sign = dy > 0 ? 1 : -1;\n\t\t\t\tthis.point_to(dir.down, sign * (xy.row_height / 2));\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, sign * ( Math.abs(dy) - (xy.row_height / 2)));\n\t\t\t\tthis.point_to(dir.left, shiftX);\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.path;\n\t},\n\tget_line_type: function(link, config){\n\t\tvar types = config.links;\n\t\tvar from_start = false, to_start = false;\n\t\tif (link.type == types.start_to_start) {\n\t\t\tfrom_start = to_start = true;\n\t\t} else if (link.type == types.finish_to_finish) {\n\t\t\tfrom_start = to_start = false;\n\t\t} else if (link.type == types.finish_to_start) {\n\t\t\tfrom_start = false;\n\t\t\tto_start = true;\n\t\t} else if (link.type == types.start_to_finish) {\n\t\t\tfrom_start = true;\n\t\t\tto_start = false;\n\t\t} else {\n\t\t\tgantt.assert(false, \"Invalid link type\");\n\t\t}\n\n\t\tif(config.rtl){\n\t\t\tfrom_start = !from_start;\n\t\t\tto_start = !to_start;\n\t\t}\n\n\t\treturn {from_start: from_start, to_start: to_start};\n\t},\n\n\tget_endpoint: function (link, view) {\n\t\tvar config = view.$getConfig();\n\n\t\tvar lineType = this.get_line_type(link, config);\n\t\tvar from_start = lineType.from_start,\n\t\t\tto_start = lineType.to_start;\n\n\t\tvar source = gantt.getTask(link.source);\n\t\tvar target = gantt.getTask(link.target);\n\n\t\tvar from = getMilestonePosition(source, view),\n\t\t\tto = getMilestonePosition(target, view);\n\n\t\treturn {\n\t\t\tx: from_start ? from.left : (from.left + from.width),\n\t\t\te_x: to_start ? to.left : (to.left + to.width),\n\t\t\ty: from.top,\n\t\t\te_y: to.top\n\t\t};\n\t}\n};\n\nfunction getMilestonePosition(task, view){\n\tvar config = view.$getConfig();\n\tvar pos = view.getItemPosition(task);\n\tif(gantt.getTaskType(task.type) == config.types.milestone){\n\t\tvar milestoneHeight = gantt.getTaskHeight();\n\t\tvar milestoneWidth = Math.sqrt(2*milestoneHeight*milestoneHeight);\n\t\tpos.left -= milestoneWidth / 2;\n\t\tpos.width = milestoneWidth;\n\t}\n\treturn pos;\n}\n\nreturn _render_link_element;\n\n}\n\nmodule.exports = createLinkRender;","function createTaskBgRender(gantt){\n\t//this.getTaskTop\n\tfunction _render_bg_line(item, view) {\n\t\tvar config = view.$getConfig(),\n\t\t\ttemplates = view.$getTemplates();\n\t\tvar cfg = view.getScale();\n\t\tvar count = cfg.count;\n\t\tvar row = document.createElement(\"div\");\n\t\tif (config.show_task_cells) {\n\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\tvar width = cfg.width[j],\n\t\t\t\t\tcssclass = \"\";\n\n\t\t\t\tif (width > 0) {//do not render skipped columns\n\t\t\t\t\tvar cell = document.createElement(\"div\");\n\t\t\t\t\tcell.style.width = (width) + \"px\";\n\n\t\t\t\t\tcssclass = \"gantt_task_cell\" + (j == count - 1 ? \" gantt_last_cell\" : \"\");\n\t\t\t\t\tcssTemplate = templates.task_cell_class(item, cfg.trace_x[j]);\n\t\t\t\t\tif (cssTemplate)\n\t\t\t\t\t\tcssclass += \" \" + cssTemplate;\n\t\t\t\t\tcell.className = cssclass;\n\n\t\t\t\t\trow.appendChild(cell);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tvar odd = gantt.getGlobalTaskIndex(item.id) % 2 !== 0;\n\t\tvar cssTemplate = templates.task_row_class(item.start_date, item.end_date, item);\n\t\tvar css = \"gantt_task_row\" + (odd ? \" odd\" : \"\") + (cssTemplate ? ' ' + cssTemplate : '');\n\n\t\tvar store = view.$config.rowStore;\n\t\tif(store.getSelectedId() == item.id) {\n\t\t\tcss += \" gantt_selected\";\n\t\t}\n\n\t\t//var row = \"<div class='\" + css + \"' \" + this.config.task_attribute + \"='\" + item.id + \"'>\" + cells.join(\"\") + \"</div>\";\n\n\t\trow.className = css;\n\n\t\tif (config.smart_rendering) {\n\t\t\trow.style.position = \"absolute\";\n\t\t\trow.style.top = view.getItemTop(item.id) + \"px\";\n\t\t\trow.style.width = \"100%\";\n\t\t}\n\t\trow.style.height = (config.row_height) + \"px\";\n\n\t\tif(view.$config.item_attribute){\n\t\t\trow.setAttribute(view.$config.item_attribute, item.id);\n\t\t}\n\n\t\treturn row;\n\t}\n\n\treturn _render_bg_line;\n}\n\nmodule.exports = createTaskBgRender;","function createTaskRenderer(gantt){\n\tvar defaultRender = require(\"./task_bar_render\")(gantt);\n\n\treturn function show_children(task, timeline) {\n\t\tif (gantt.isSplitTask(task)) {\n\t\t\tvar el = document.createElement('div'),\n\t\t\t\tsizes = gantt.getTaskPosition(task);\n\n\t\t\tvar sub_tasks = gantt.getChildren(task.id);\n\n\n\t\t\tfor (var i = 0; i < sub_tasks.length; i++) {\n\t\t\t\tvar child = gantt.getTask(sub_tasks[i]);\n\n\t\t\t\tvar element = defaultRender(child, timeline);\n\t\t\t\tif(!element)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar padding = Math.floor((gantt.config.row_height - sizes.height) / 2);\n\n\t\t\t\telement.style.top = (sizes.top + padding) + \"px\";\n\t\t\t\telement.className += \" gantt_split_child\";\n\n\t\t\t\tel.appendChild(element);\n\t\t\t}\n\t\t\treturn el;\n\t\t}\n\t\treturn false;\n\t};\n}\n\nmodule.exports = createTaskRenderer;","module.exports = function (gantt) {\n\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction PredecessorEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(PredecessorEditor, BaseEditor);\n\n\tfunction parseInputString(value, config) {\n\t\tvar predecessors = (value || \"\").split(config.delimiter || \",\");\n\t\tfor (var i = 0; i < predecessors.length; i++) {\n\t\t\tvar val = predecessors[i].trim();\n\t\t\tif (val) {\n\t\t\t\tpredecessors[i] = val;\n\t\t\t} else {\n\t\t\t\tpredecessors.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\tpredecessors.sort();\n\t\treturn predecessors;\n\t}\n\n\tfunction formatPredecessors(task, config, gantt) {\n\t\tvar links = task.$target;\n\t\tvar labels = [];\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tvar link = gantt.getLink(links[i]);\n\t\t\tvar pred = gantt.getTask(link.source);\n\t\t\tlabels.push(gantt.getWBSCode(pred));\n\t\t}\n\t\treturn labels.join((config.delimiter || \",\") + \" \");\n\t}\n\n\tfunction getSelectedLinks(taskId, predecessorCodes) {\n\t\tvar links = [];\n\t\tpredecessorCodes.forEach(function (code) {\n\t\t\tvar predecessor = gantt.getTaskByWBSCode(code);\n\t\t\tif (predecessor) {\n\t\t\t\tvar link = {\n\t\t\t\t\tsource: predecessor.id,\n\t\t\t\t\ttarget: taskId,\n\t\t\t\t\ttype: gantt.config.links.finish_to_start,\n\t\t\t\t\tlag: 0\n\t\t\t\t};\n\t\t\t\tif (gantt.isLinkAllowed(link)) {\n\t\t\t\t\tlinks.push(link);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn links;\n\t}\n\n\tfunction getLinksDiff(task, predecessorCodes) {\n\t\tvar selectedLinks = getSelectedLinks(task.id, predecessorCodes);\n\t\tvar existingLinksSearch = {};\n\t\ttask.$target.forEach(function (linkId) {\n\t\t\tvar link = gantt.getLink(linkId);\n\t\t\texistingLinksSearch[link.source + \"_\" + link.target] = link.id;\n\t\t});\n\n\t\tvar linksToAdd = [];\n\t\tselectedLinks.forEach(function (link) {\n\t\t\tvar linkKey = link.source + \"_\" + link.target;\n\t\t\tif (!existingLinksSearch[linkKey]) {\n\t\t\t\tlinksToAdd.push(link);\n\t\t\t} else {\n\t\t\t\tdelete existingLinksSearch[linkKey];\n\t\t\t}\n\t\t});\n\n\t\tvar linksToDelete = [];\n\t\tfor (var i in existingLinksSearch) {\n\t\t\tlinksToDelete.push(existingLinksSearch[i]);\n\t\t}\n\n\t\treturn {\n\t\t\tadd: linksToAdd,\n\t\t\tremove: linksToDelete\n\t\t};\n\t}\n\n\tutils.mixin(PredecessorEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar html = \"<div><input type='text' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\thide: function () {\n\t\t},\n\t\tset_value: function (value, id, column, node) {\n\t\t\tthis.get_input(node).value = formatPredecessors(value, column.editor, gantt);\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\treturn parseInputString((this.get_input(node).value || \"\"), column.editor);\n\t\t},\n\t\tsave: function (id, column, node) {\n\t\t\tvar task = gantt.getTask(id);\n\n\t\t\tvar linksDiff = getLinksDiff(task, this.get_value(id, column, node));\n\n\t\t\tif (linksDiff.add.length || linksDiff.remove.length) {\n\t\t\t\tgantt.batchUpdate(function () {\n\t\t\t\t\tlinksDiff.add.forEach(function (link) {\n\t\t\t\t\t\tgantt.addLink(link);\n\t\t\t\t\t});\n\t\t\t\t\tlinksDiff.remove.forEach(function (linkId) {\n\t\t\t\t\t\tgantt.deleteLink(linkId);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (gantt.autoSchedule)\n\t\t\t\t\t\tgantt.autoSchedule();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tis_changed: function (value, id, column, node) {\n\t\t\tvar inputPredecessors = this.get_value(id, column, node);\n\t\t\tvar taskPredecessors = parseInputString(formatPredecessors(value, column.editor, gantt), column.editor);\n\n\t\t\treturn inputPredecessors.join() !== taskPredecessors.join();\n\t\t}\n\t}, true);\n\n\treturn PredecessorEditor;\n};","module.exports = function(gantt) {\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tvar html5DateFormat = \"%Y-%m-%d\";\n\n\tvar dateToStr = null;\n\tvar strToDate = null;\n\n\tfunction init(){\n\t\tif(!dateToStr){\n\t\t\tdateToStr = gantt.date.date_to_str(html5DateFormat);\n\t\t}\n\t\tif(!strToDate){\n\t\t\tstrToDate = gantt.date.str_to_date(html5DateFormat);\n\t\t}\n\t}\n\n\tfunction DateEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\n\t\treturn self;\n\t}\n\n\t__extends(DateEditor, BaseEditor);\n\n\tutils.mixin(DateEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\n\t\t\tinit();\n\t\t\tvar minValue = dateToStr(config.min || gantt.getState().min_date);\n\t\t\tvar maxValue = dateToStr(config.max || gantt.getState().max_date);\n\n\t\t\tvar html = \"<div style='width:140px'><input type='date' min='\" + minValue + \"' max='\" + maxValue + \"' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\tset_value: function (value, id, column, node) {\n\t\t\tthis.get_input(node).value = dateToStr(value);\n\t\t},\n\t\tis_valid: function (value, id, column, node) {\n\t\t\tif (!value || isNaN(value.getTime()))\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\tvar parsed;\n\t\t\ttry {\n\t\t\t\tparsed = strToDate(this.get_input(node).value || \"\");\n\t\t\t} catch (e) {\n\t\t\t\tparsed = null;// return null will cancel changes\n\t\t\t}\n\n\t\t\treturn parsed;\n\t\t}\n\t}, true);\n\n\treturn DateEditor;\n};\n","module.exports = function(gantt) {\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction SelectEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(SelectEditor, BaseEditor);\n\n\tutils.mixin(SelectEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar html = \"<div><select name='\" + column.name + \"'>\";\n\t\t\tvar optionsHtml = [],\n\t\t\t\toptions = config.options || [];\n\n\t\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\t\toptionsHtml.push(\"<option value='\" + config.options[i].key + \"'>\" + options[i].label + \"</option>\");\n\t\t\t}\n\n\t\t\thtml += optionsHtml.join(\"\") + \"</select></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\tget_input: function (node) {\n\t\t\treturn node.querySelector(\"select\");\n\t\t}\n\t}, true);\n\n\treturn SelectEditor;\n};","module.exports = function (gantt) {\n\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction NumberEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(NumberEditor, BaseEditor);\n\n\tutils.mixin(NumberEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar min = config.min || 0,\n\t\t\t\tmax = config.max || 100;\n\n\t\t\tvar html = \"<div><input type='number' min='\" + min + \"' max='\" + max + \"' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\treturn this.get_input(node).value || \"\";\n\t\t},\n\t\tis_valid: function (value, id, column, node) {\n\t\t\treturn !isNaN(parseInt(value, 10));\n\t\t}\n\t}, true);\n\n\treturn NumberEditor;\n};","module.exports = function(gantt) {\n\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction TextEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(TextEditor, BaseEditor);\n\n\tutils.mixin(TextEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar html = \"<div><input type='text' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t}\n\t}, true);\n\n\treturn TextEditor;\n};","module.exports = {\n\tinit: function(controller, grid){\n\t\tvar self = controller;\n\t\tvar gantt = grid.$gantt;\n\n\t\tvar onBlurDelay = null;\n\t\tvar keyNav = gantt.ext.keyboardNavigation;\n\t\tkeyNav.attachEvent(\"onBeforeFocus\", function (node) {\n\t\t\tvar activeCell = controller.locateCell(node);\n\t\t\tclearTimeout(onBlurDelay);\n\t\t\tif (activeCell) {\n\t\t\t\tvar columnName = activeCell.columnName;\n\t\t\t\tvar id = activeCell.id;\n\n\t\t\t\tvar editorState = self.getState();\n\t\t\t\tif(self.isVisible()){\n\t\t\t\t\tif(editorState.id == id && editorState.columnName === columnName) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tkeyNav.attachEvent(\"onFocus\", function (node) {\n\t\t\tvar activeCell = controller.locateCell(node);\n\t\t\tvar state = controller.getState();\n\t\t\tclearTimeout(onBlurDelay);\n\t\t\tif (activeCell && !(activeCell.id == state.id && activeCell.columnName == state.columnName)) {\n\t\t\t\tif(self.isVisible()){\n\t\t\t\t\tself.save();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tcontroller.attachEvent(\"onHide\", function(){\n\t\t\tclearTimeout(onBlurDelay);\n\t\t});\n\n\t\tkeyNav.attachEvent(\"onBlur\", function () {\n\t\t\tonBlurDelay = setTimeout(function(){\n\t\t\t\tself.save();\n\t\t\t});\n\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskDblClick\", function(id,e){\n\t\t\t// block lightbox on double click inside editor\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\t\t\tif(cell && controller.isVisible() && cell.columnName == state.columnName){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskClick\", function (id, e) {\n\t\t\tif(gantt._is_icon_open_click(e))\n\t\t\t\treturn true;\n\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\n\t\t\tif (cell && controller.getEditorConfig(cell.columnName)) {\n\t\t\t\tif(controller.isVisible() && state.id == cell.id && state.columnName == cell.columnName){\n\t\t\t\t\t// do nothing if editor is already active in this cell\n\t\t\t\t}else{\n\t\t\t\t\tcontroller.startEdit(cell.id, cell.columnName);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tgantt.attachEvent(\"onEmptyClick\", function () {\n\t\t\tself.save();\n\t\t\treturn true;\n\t\t});\n\n\t\tkeyNav.attachEvent(\"onKeyDown\", function(command, e){\n\t\t\tvar activeCell = controller.locateCell(e.target);\n\t\t\tvar hasEditor = activeCell ? controller.getEditorConfig(activeCell.columnName) : false;\n\n\t\t\tvar state = controller.getState();\n\t\t\tvar keyboard = gantt.constants.KEY_CODES;\n\t\t\tvar keyCode = e.keyCode;\n\t\t\tvar preventKeyNav = false;\n\n\t\t\tswitch (keyCode){\n\t\t\t\tcase keyboard.ENTER:\n\t\t\t\t\tif(controller.isVisible()){\n\t\t\t\t\t\tcontroller.save();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}else if(hasEditor && !(e.ctrlKey || e.metaKey || e.shiftKey)){\n\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.ESC:\n\t\t\t\t\tif(controller.isVisible()){\n\t\t\t\t\t\tcontroller.hide();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.UP:\n\t\t\t\tcase keyboard.DOWN:\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.LEFT:\n\t\t\t\tcase keyboard.RIGHT:\n\t\t\t\t\tif(state.editorType === \"date\"){\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.SPACE:\n\t\t\t\t\tif(controller.isVisible()){\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(hasEditor && !controller.isVisible()){\n\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.DELETE:\n\t\t\t\t\tif(hasEditor && !controller.isVisible()){\n\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.TAB:\n\t\t\t\t\tif(controller.isVisible()){\n\n\t\t\t\t\t\tif(e.shiftKey){\n\t\t\t\t\t\t\tcontroller.editPrevCell(true);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tcontroller.editNextCell(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar newState = controller.getState();\n\t\t\t\t\t\tif(newState.id){\n\t\t\t\t\t\t\tkeyNav.focus({type:\"taskCell\", id: newState.id, column:newState.columnName});\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(controller.isVisible())\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\telse{\n\n\t\t\t\t\t\t// start editing on character key\n\t\t\t\t\t\tif((keyCode >= 48 && keyCode <= 57) || // [0-9]\n\t\t\t\t\t\t\t(keyCode > 95 && keyCode < 112) || // numpad\n\t\t\t\t\t\t\t(keyCode >= 64 && keyCode <= 91) || // [a-z]\n\t\t\t\t\t\t\t(keyCode > 185 && keyCode < 193) || //;=-,etc\n\t\t\t\t\t\t\t(keyCode > 218  && keyCode < 223)\n\t\t\t\t\t\t){\n\t\t\t\t\t\t\tif(hasEditor && !controller.isVisible()){\n\t\t\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (preventKeyNav){\n\t\t\t\treturn false;\n\t\t\t} else{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t},\n\tonShow: function(controller, placeholder, grid){},\n\tonHide: function(controller, placeholder, grid){\n\t\tvar gantt = grid.$gantt;\n\t\tgantt.focus();\n\n\t},\n\tdestroy: function(){}\n};\n\n","module.exports = {\n\tinit: function(controller, grid){\n\t\tvar gantt = grid.$gantt;\n\n\t\tgantt.attachEvent(\"onTaskClick\", function (id, e) {\n\t\t\tif(gantt._is_icon_open_click(e))\n\t\t\t\treturn true;\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\n\t\t\tif (cell && controller.getEditorConfig(cell.columnName)) {\n\t\t\t\tif(controller.isVisible() && state.id == cell.id && state.columnName == cell.columnName){\n\t\t\t\t\t// do nothing if editor is already active in this cell\n\t\t\t\t}else{\n\t\t\t\t\tcontroller.startEdit(cell.id, cell.columnName);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tgantt.attachEvent(\"onEmptyClick\", function () {\n\t\t\tcontroller.hide();\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskDblClick\", function(id,e){\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\t\t\tif(cell && controller.isVisible() && cell.columnName == state.columnName){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t},\n\n\tonShow: function(controller, placeholder, grid){\n\t\tif(grid.$getConfig().keyboard_navigation){\n\t\t\t// keyboard navigation extension will handle arrows if enabled\n\t\t\treturn;\n\t\t}\n\t\tvar gantt = grid.$gantt;\n\t\tplaceholder.onkeydown = function (e) {\n\t\t\te = e || window.event;\n\n\t\t\tvar keyboard = gantt.constants.KEY_CODES;\n\t\t\tif(e.defaultPrevented || (e.shiftKey && e.keyCode != keyboard.TAB)){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar shouldPrevent = true;\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase gantt.keys.edit_save:\n\t\t\t\t\tcontroller.save();\n\t\t\t\t\tbreak;\n\t\t\t\tcase gantt.keys.edit_cancel:\n\t\t\t\t\tcontroller.hide();\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.TAB:\n\t\t\t\t\tif(e.shiftKey){\n\t\t\t\t\t\tcontroller.editPrevCell(true);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcontroller.editNextCell(true);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tshouldPrevent = false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(shouldPrevent){\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t};\n\t},\n\tonHide: function(){\n\n\t},\n\n\tdestroy: function(){\n\n\t}\n};\n\n","var defaultMapping = require(\"./keyboard_mappings/default\");\nvar keyNavMappings = require(\"./keyboard_mappings/keyboard_navigation\");\n\nmodule.exports = function(gantt){\n\n\tvar mapping = null;\n\n\treturn {\n\t\tsetMapping: function(map){\n\t\t\tmapping = map;\n\t\t},\n\t\tgetMapping: function(){\n\n\t\t\tif(mapping){\n\t\t\t\treturn mapping;\n\t\t\t}else if(gantt.config.keyboard_navigation_cells){\n\t\t\t\treturn keyNavMappings;\n\t\t\t}else{\n\t\t\t\treturn defaultMapping;\n\t\t\t}\n\t\t}\n\t};\n};\n","var getKeyboardMapping = require(\"./keyboard_mappings\");\nvar textEditorFactory = require(\"./editors/text\"),\n\tnumberEditorFactory = require(\"./editors/number\"),\n\tselectEditorFactory = require(\"./editors/select\"),\n\tdateEditorFactory = require(\"./editors/date\"),\n\tpredecessorEditorFactory = require(\"./editors/predecessor\");\nvar utils = require(\"../../../../utils/utils\");\nvar domHelpers = require(\"../../../../utils/dom_helpers\");\nvar eventable = require(\"../../../../utils/eventable\");\n\nfunction initConfigs(gantt){\n\tgantt.config.editor_types = {\n\t\ttext: new (textEditorFactory(gantt))(),\n\t\tnumber: new (numberEditorFactory(gantt))(),\n\t\tselect: new (selectEditorFactory(gantt))(),\n\t\tdate: new (dateEditorFactory(gantt))(),\n\t\tpredecessor: new (predecessorEditorFactory(gantt))()\n\t};\n}\n\nfunction create(gantt){\n\tvar keyboardMapping = getKeyboardMapping(gantt);\n\n\tvar eventBus = {};\n\teventable(eventBus);\n\n\tfunction createGridEditors(grid) {\n\n\t\tfunction _getGridCellFromNode(node){\n\t\t\tif(!domHelpers.isChildOf(node, grid.$grid)){\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar row = domHelpers.locateAttribute(node, grid.$config.item_attribute);\n\t\t\tvar cell = domHelpers.locateAttribute(node, \"data-column-name\");\n\t\t\tif(cell){\n\t\t\t\tvar columnName = cell.getAttribute(\"data-column-name\");\n\t\t\t\tvar id = row.getAttribute(grid.$config.item_attribute);\n\t\t\t\treturn {\n\t\t\t\t\tid: id,\n\t\t\t\t\tcolumnName: columnName\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction _getEditorPosition(itemId, columnName) {\n\t\t\tvar top = grid.getItemTop(itemId);\n\t\t\tvar height = grid.getItemHeight(itemId);\n\t\t\tvar cols = grid.getGridColumns();\n\t\t\tvar left = 0,\n\t\t\t\twidth = 0;\n\n\t\t\tfor (var i = 0; i < cols.length; i++) {\n\t\t\t\tif (cols[i].name == columnName) {\n\t\t\t\t\twidth = cols[i].width;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tleft += cols[i].width;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\theight: height,\n\t\t\t\twidth: width\n\t\t\t};\n\t\t}\n\t\tfunction _createPlaceholder(itemId, columnName) {\n\t\t\tvar pos = _getEditorPosition(itemId, columnName);\n\t\t\tvar el = document.createElement(\"div\");\n\t\t\tel.className = \"gantt_grid_editor_placeholder\";\n\t\t\tel.setAttribute(grid.$config.item_attribute, itemId);\n\t\t\tel.setAttribute(\"data-column-name\", columnName);\n\t\t\tel.setAttribute(\"data-column-index\", grid.getColumnIndex(columnName));\n\n\t\t\tel.style.cssText = [\n\t\t\t\t\"top:\" + pos.top + \"px\",\n\t\t\t\t\"left:\" + pos.left + \"px\",\n\t\t\t\t\"width:\" + pos.width + \"px\",\n\t\t\t\t\"height:\" + pos.height + \"px\"\n\t\t\t].join(\";\");\n\n\t\t\treturn el;\n\t\t}\n\n\n\t\tvar handlers = [];\n\t\tvar store = null;\n\t\tvar controller = {\n\t\t\t_itemId: null,\n\t\t\t_columnName: null,\n\t\t\t_editor: null,\n\t\t\t_editorType: null,\n\t\t\t_placeholder: null,\n\n\t\t\tlocateCell: _getGridCellFromNode,\n\t\t\tgetEditorConfig: function (columnName) {\n\t\t\t\tvar column = grid.getColumn(columnName);\n\t\t\t\treturn column.editor;\n\t\t\t},\n\n\t\t\tinit: function () {\n\t\t\t\tvar mapping = keyboardMapping.getMapping();\n\t\t\t\tif(mapping.init){\n\t\t\t\t\tmapping.init(this, grid);\n\t\t\t\t}\n\n\t\t\t\tstore = grid.$gantt.getDatastore(grid.$config.bind);\n\n\t\t\t\tvar self = this;\n\n\t\t\t\thandlers.push(store.attachEvent(\"onIdChange\", function(oldId, newId){\n\t\t\t\t\tif(self._itemId == oldId){\n\t\t\t\t\t\tself._itemId = newId;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\thandlers.push(store.attachEvent(\"onStoreUpdated\", function(){\n\t\t\t\t\tif(grid.$gantt.getState(\"batchUpdate\").batch_update){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(self.isVisible() && !store.isVisible(self._itemId)){\n\t\t\t\t\t\tself.hide();\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis.init = function(){};\n\t\t\t},\n\n\t\t\tgetState: function(){\n\t\t\t\treturn {\n\t\t\t\t\teditor: this._editor,\n\t\t\t\t\teditorType: this._editorType,\n\t\t\t\t\tplaceholder: this._placeholder,\n\t\t\t\t\tid: this._itemId,\n\t\t\t\t\tcolumnName: this._columnName\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tstartEdit: function(itemId, columnName) {\n\t\t\t\tif (this.isVisible()) {\n\t\t\t\t\tthis.save();\n\t\t\t\t}\n\n\t\t\t\tif(!store.exists(itemId)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar editorState = {id: itemId, columnName: columnName};\n\t\t\t\tif(this.callEvent(\"onBeforeEditStart\", [editorState]) === false){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.show(editorState.id, editorState.columnName);\n\t\t\t\tthis.setValue();\n\n\t\t\t\tthis.callEvent(\"onEditStart\", [editorState]);\n\t\t\t},\n\t\t\tisVisible: function(){\n\t\t\t\treturn !!(this._editor && domHelpers.isChildOf(this._placeholder, document.body));\n\t\t\t},\n\t\t\tshow: function (itemId, columnName) {\n\t\t\t\tif (this.isVisible()) {\n\t\t\t\t\tthis.save();\n\t\t\t\t}\n\t\t\t\tvar editorState = {id: itemId, columnName: columnName};\n\n\t\t\t\tvar column = grid.getColumn(editorState.columnName);\n\t\t\t\tvar editorConfig = this.getEditorConfig(column.name);\n\t\t\t\tif(!editorConfig)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar editor = grid.$getConfig().editor_types[editorConfig.type];\n\n\t\t\t\tvar placeholder = _createPlaceholder(editorState.id, editorState.columnName);\n\t\t\t\tgrid.$grid_data.appendChild(placeholder);\n\t\t\t\teditor.show(editorState.id, column, editorConfig, placeholder);\n\t\t\t\tthis._editor = editor;\n\t\t\t\tthis._placeholder = placeholder;\n\t\t\t\tthis._itemId = editorState.id;\n\t\t\t\tthis._columnName = editorState.columnName;\n\t\t\t\tthis._editorType = editorConfig.type;\n\n\t\t\t\tvar mapping = keyboardMapping.getMapping();\n\t\t\t\tif(mapping.onShow){\n\t\t\t\t\tmapping.onShow(this, placeholder, grid);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsetValue: function () {\n\t\t\t\tvar state = this.getState();\n\t\t\t\tvar itemId = state.id,\n\t\t\t\t\tcolumnName = state.columnName;\n\n\t\t\t\tvar column = grid.getColumn(columnName);\n\t\t\t\tvar item = store.getItem(itemId);\n\t\t\t\tvar editorConfig = this.getEditorConfig(columnName);\n\n\t\t\t\tif(!editorConfig)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar value = item[editorConfig.map_to];\n\t\t\t\tif(editorConfig.map_to == \"auto\"){\n\t\t\t\t\tvalue = store.getItem(itemId);\n\t\t\t\t}\n\n\t\t\t\tthis._editor.set_value(value, itemId, column, this._placeholder);\n\t\t\t\tthis.focus();\n\t\t\t},\n\n\t\t\tfocus: function(){\n\t\t\t\tthis._editor.focus(this._placeholder);\n\t\t\t},\n\n\t\t\tgetValue: function () {\n\t\t\t\tvar column = grid.getColumn(this._columnName);\n\t\t\t\treturn this._editor.get_value(this._itemId, column, this._placeholder);\n\t\t\t},\n\n\t\t\t_getItemValue: function() {\n\t\t\t\tvar editorConfig = this.getEditorConfig(this._columnName);\n\n\t\t\t\tif(!editorConfig)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar item = gantt.getTask(this._itemId);\n\t\t\t\tvar value = item[editorConfig.map_to];\n\t\t\t\tif(editorConfig.map_to == \"auto\"){\n\t\t\t\t\tvalue = store.getItem(this._itemId);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\n\t\t\tisChanged: function(){\n\n\t\t\t\tvar column = grid.getColumn(this._columnName);\n\n\t\t\t\tvar value = this._getItemValue();\n\n\t\t\t\treturn this._editor.is_changed(value, this._itemId, column, this._placeholder);\n\t\t\t},\n\n\t\t\thide: function () {\n\t\t\t\tif(!this._itemId)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar itemId = this._itemId,\n\t\t\t\t\tcolumnName = this._columnName;\n\n\t\t\t\tvar mapping = keyboardMapping.getMapping();\n\t\t\t\tif(mapping.onHide){\n\t\t\t\t\tmapping.onHide(this, this._placeholder, grid);\n\t\t\t\t}\n\n\t\t\t\tthis._itemId = null;\n\t\t\t\tthis._columnName = null;\n\t\t\t\tthis._editorType = null;\n\t\t\t\tif (!this._placeholder) return;\n\n\t\t\t\tif (this._editor) {\n\t\t\t\t\tthis._editor.hide(this._placeholder);\n\t\t\t\t}\n\t\t\t\tthis._editor = null;\n\t\t\t\tif (this._placeholder.parentNode) {\n\t\t\t\t\tthis._placeholder.parentNode.removeChild(this._placeholder);\n\t\t\t\t}\n\t\t\t\tthis._placeholder = null;\n\n\t\t\t\tthis.callEvent(\"onEditEnd\", [{id: itemId, columnName: columnName}]);\n\t\t\t},\n\t\t\tsave: function () {\n\t\t\t\tif(!(this.isVisible() && store.exists(this._itemId) && this.isChanged())) {\n\t\t\t\t\tthis.hide();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar itemId = this._itemId,\n\t\t\t\t\tcolumnName = this._columnName;\n\n\t\t\t\tif(!store.exists(itemId)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar item = store.getItem(itemId);\n\t\t\t\tvar editorConfig = this.getEditorConfig(columnName);\n\t\t\t\tvar editorState = {\n\t\t\t\t\tid: itemId,\n\t\t\t\t\tcolumnName: columnName,\n\t\t\t\t\tnewValue: this.getValue(),\n\t\t\t\t\toldValue: this._getItemValue()\n\t\t\t\t};\n\t\t\t\tif(this.callEvent(\"onBeforeSave\", [editorState]) !== false) {\n\t\t\t\t\tif(this._editor.is_valid(editorState.newValue, editorState.id, editorState.columnName, this._placeholder)){\n\n\n\t\t\t\t\t\tvar mapTo = editorConfig.map_to;\n\t\t\t\t\t\tvar value = editorState.newValue;\n\t\t\t\t\t\tif (mapTo != \"auto\") {\n\t\t\t\t\t\t\titem[mapTo] = value;\n\t\t\t\t\t\t\tif (mapTo == \"duration\") {\n\t\t\t\t\t\t\t\titem.end_date = gantt.calculateEndDate(item);\n\t\t\t\t\t\t\t} else if (mapTo == \"end_date\") {\n\t\t\t\t\t\t\t\titem.start_date = gantt.calculateEndDate({\n\t\t\t\t\t\t\t\t\tstart_date: item.end_date,\n\t\t\t\t\t\t\t\t\tduration: -item.duration,\n\t\t\t\t\t\t\t\t\ttask: item}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (mapTo == \"start_date\") {\n\t\t\t\t\t\t\t\titem.end_date = gantt.calculateEndDate(item);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstore.updateItem(itemId);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis._editor.save(itemId, grid.getColumn(columnName), this._placeholder);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.callEvent(\"onSave\", [editorState]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hide();\n\t\t\t},\n\n\t\t\t_findEditableCell: function findEditableCell(start, direction){\n\t\t\t\tvar nextIndex = start;\n\t\t\t\tvar columns = grid.getGridColumns();\n\t\t\t\tvar nextColumn = columns[nextIndex];\n\n\t\t\t\tvar columnName = nextColumn ? nextColumn.name : null;\n\t\t\t\tif(columnName){\n\t\t\t\t\twhile(columnName && !this.getEditorConfig(columnName)){\n\t\t\t\t\t\tcolumnName = this._findEditableCell(start + direction, direction);\n\t\t\t\t\t}\n\t\t\t\t\treturn columnName;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\n\t\t\tgetNextCell: function moveCell(dir){\n\t\t\t\treturn this._findEditableCell(grid.getColumnIndex(this._columnName) + dir, dir);\n\t\t\t},\n\n\t\t\tgetFirstCell: function getFirstCell(){\n\t\t\t\treturn this._findEditableCell(0, 1);\n\t\t\t},\n\n\t\t\tgetLastCell: function getLastCell(){\n\t\t\t\treturn this._findEditableCell(grid.getGridColumns().length - 1, -1);\n\t\t\t},\n\n\t\t\teditNextCell: function nextCell(canChangeRow){\n\t\t\t\tvar cell = this.getNextCell(1);\n\t\t\t\tif(cell){\n\t\t\t\t\tvar nextColumn = this.getNextCell(1);\n\t\t\t\t\tif(nextColumn && this.getEditorConfig(nextColumn)){\n\t\t\t\t\t\tthis.startEdit(this._itemId, nextColumn);\n\t\t\t\t\t}\n\t\t\t\t}else if(canChangeRow && this.moveRow(1)){\n\t\t\t\t\tvar task = this.moveRow(1);\n\t\t\t\t\tcell = this.getFirstCell();\n\t\t\t\t\tif(cell && this.getEditorConfig(cell)){\n\t\t\t\t\t\tthis.startEdit(task, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teditPrevCell: function prevCell(canChangeRow){\n\t\t\t\tvar cell = this.getNextCell(-1);\n\t\t\t\tif(cell){\n\t\t\t\t\tvar nextColumn = this.getNextCell(-1);\n\t\t\t\t\tif(nextColumn && this.getEditorConfig(nextColumn)){\n\t\t\t\t\t\tthis.startEdit(this._itemId, nextColumn);\n\t\t\t\t\t}\n\t\t\t\t}else if(canChangeRow && this.moveRow(-1)){\n\t\t\t\t\tvar task = this.moveRow(-1);\n\t\t\t\t\tcell = this.getLastCell();\n\t\t\t\t\tif(cell && this.getEditorConfig(cell)){\n\t\t\t\t\t\tthis.startEdit(task, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tmoveRow: function moveRow(dir){\n\t\t\t\tif(dir > 0){\n\t\t\t\t\treturn gantt.getNext(this._itemId);\n\t\t\t\t}else {\n\t\t\t\t\treturn  gantt.getPrev(this._itemId);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teditNextRow: function nextRow(){\n\t\t\t\tvar row = this.getNextCell(1);\n\t\t\t\tif(row){\n\t\t\t\t\tthis.startEdit(row, this._columnName);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teditPrevRow: function prevRow(){\n\t\t\t\tvar row = this.getNextCell(-1);\n\t\t\t\tif(row){\n\t\t\t\t\tthis.startEdit(row, this._columnName);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdestructor: function(){\n\t\t\t\thandlers.forEach(function(handlerId){\n\t\t\t\t\tstore.detachEvent(handlerId);\n\t\t\t\t});\n\t\t\t\tstore = null;\n\t\t\t\tthis.hide();\n\t\t\t\tthis.detachAllEvents();\n\t\t\t}\n\t\t};\n\n\t\tutils.mixin(controller, keyboardMapping);\n\t\tutils.mixin(controller, eventBus);\n\n\t\treturn controller;\n\t}\n\n\n\tvar inlineEditController = {\n\t\tinit: initConfigs,\n\t\tcreateEditors: createGridEditors\n\t};\n\n\tutils.mixin(inlineEditController, keyboardMapping);\n\tutils.mixin(inlineEditController, eventBus);\n\n\treturn inlineEditController;\n}\n\nmodule.exports = create;","function createResizer(gantt, grid){\n\treturn {\n\t\tinit: function(){},\n\t\tdoOnRender: function(){}\n\t};\n}\n\nmodule.exports = createResizer;","var createStaticBgHelper = function(){\n\treturn {\n\t\trender: function(){}\n\t};\n};\n\nmodule.exports = {\n\tcreate: function(){\n\t\treturn createStaticBgHelper();\n\t}\n};\n\n","var __extends = require(\"../../../utils/extends\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\"),\n\tenv = require(\"../../../utils/env\"),\n\tCell = require(\"./cell\");\n\nvar ScrollbarCell = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ScrollbarCell, _super);\n\tfunction ScrollbarCell(parent, config, factory, gantt) {\n\n\t\tvar _this = _super.apply(this, arguments) || this;\n\t\tthis.$config = utils.mixin(config, {scroll: \"x\"});\n\t\t_this._scrollHorizontalHandler = utils.bind(_this._scrollHorizontalHandler, _this);\n\t\t_this._scrollVerticalHandler = utils.bind(_this._scrollVerticalHandler, _this);\n\t\t_this._outerScrollVerticalHandler = utils.bind(_this._outerScrollVerticalHandler, _this);\n\t\t_this._outerScrollHorizontalHandler = utils.bind(_this._outerScrollHorizontalHandler, _this);\n\t\t_this._mouseWheelHandler = utils.bind(_this._mouseWheelHandler, _this);\n\n\t\tthis.$config.hidden = true;\n\t\tvar size = gantt.config.scroll_size;\n\n\t\tif(gantt.env.isIE){\n\t\t\t// full element height/width must be bigger than just a browser scrollbar,\n\t\t\t// otherwise the scrollbar element won't be scrolled on click\n\t\t\tsize += 1;\n\t\t}\n\n\t\tif(this._isHorizontal()){\n\t\t\t_this.$config.height = size;\n\t\t\t_this.$parent.$config.height = size;\n\t\t}else{\n\t\t\t_this.$config.width = size;\n\t\t\t_this.$parent.$config.width = size;\n\t\t}\n\n\t\tthis.$config.scrollPosition = 0;\n\n\t\t_this.$name = \"scroller\";\n\t\treturn _this;\n\t}\n\n\tScrollbarCell.prototype.init = function(container){\n\t\tcontainer.innerHTML = this.$toHTML();\n\t\tthis.$view = container.firstChild;\n\n\t\tif(!this.$view){\n\t\t\tthis.init();\n\t\t}\n\t\tif(this._isVertical()){\n\t\t\tthis._initVertical();\n\t\t}else{\n\t\t\tthis._initHorizontal();\n\t\t}\n\t\tthis._initMouseWheel();\n\t\tthis._initLinkedViews();\n\t};\n\n\tScrollbarCell.prototype.$toHTML = function () {\n\t\tvar className = this._isHorizontal() ? \"gantt_hor_scroll\" : \"gantt_ver_scroll\";\n\t\treturn \"<div class='gantt_layout_cell \"+className+\"'><div style='\"+(this._isHorizontal() ? \"width:2000px\" : \"height:2000px\")+\"'></div></div>\";\n\t};\n\n\tScrollbarCell.prototype._getRootParent = function(){\n\t\tvar parent = this.$parent;\n\t\twhile(parent && parent.$parent){\n\t\t\tparent = parent.$parent;\n\t\t}\n\t\tif(parent){\n\t\t\treturn parent;\n\t\t}\n\t};\n\n\n\tfunction eachCell(root, res){\n\t\tres.push(root);\n\t\tif(root.$cells){\n\t\t\tfor(var i = 0; i < root.$cells.length; i++){\n\t\t\t\teachCell(root.$cells[i], res);\n\t\t\t}\n\t\t}\n\t}\n\tScrollbarCell.prototype._eachView = function(){\n\t\tvar res = [];\n\t\teachCell(this._getRootParent(), res);\n\t\treturn res;\n\t};\n\n\tScrollbarCell.prototype._getLinkedViews = function(){\n\t\tvar views = this._eachView();\n\t\tvar res = [];\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\tif(views[i].$config && ((this._isVertical() && views[i].$config.scrollY == this.$id) || (this._isHorizontal() && views[i].$config.scrollX == this.$id)) ){\n\t\t\t\tres.push(views[i]);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\n\n\tScrollbarCell.prototype._initHorizontal = function(){\n\t\tthis.$scroll_hor = this.$view;\n\t\tthis.$domEvents.attach(this.$view, \"scroll\", this._scrollHorizontalHandler);\n\n\t};\n\n\tScrollbarCell.prototype._initLinkedViews = function(){\n\t\tvar views = this._getLinkedViews();\n\t\tvar css = this._isVertical() ?\"gantt_layout_outer_scroll gantt_layout_outer_scroll_vertical\" : \"gantt_layout_outer_scroll gantt_layout_outer_scroll_horizontal\";\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\t//views[i].$config.css = [views[i].$config.css || \"\", css].join(\" \");\n\t\t\tdomHelpers.addClassName(views[i].$view || views[i].getNode(), css);\n\t\t}\n\t};\n\n\tScrollbarCell.prototype._initVertical = function(){\n\t\tthis.$scroll_ver = this.$view;\n\t\tthis.$domEvents.attach(this.$view, \"scroll\", this._scrollVerticalHandler);\n\t};\n\n\tScrollbarCell.prototype._updateLinkedViews = function(){\n\t};\n\n\tScrollbarCell.prototype._initMouseWheel = function(){\n\t\tvar ff = env.isFF;\n\t\tif (ff)\n\t\t\tthis.$domEvents.attach(this._getRootParent().$view, \"wheel\", this._mouseWheelHandler);\n\t\telse\n\t\t\tthis.$domEvents.attach(this._getRootParent().$view, \"mousewheel\", this._mouseWheelHandler);\n\t};\n\n\n\n\n\tScrollbarCell.prototype.scrollHorizontally = function(left){\n\t\tif(this._scrolling) return;\n\t\tthis._scrolling = true;\n\n\t\tthis.$scroll_hor.scrollLeft = left;\n\t\tthis.$config.codeScrollLeft = left;\n\t\tleft = this.$scroll_hor.scrollLeft;\n\n\t\tvar views = this._getLinkedViews();\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\tif(views[i].scrollTo){\n\t\t\t\tviews[i].scrollTo(left, undefined);\n\t\t\t}\n\t\t}\n\t\tvar oldSize = this.$config.scrollPosition;\n\t\tthis.$config.scrollPosition = left;\n\t\tthis.callEvent(\"onScroll\", [oldSize, left, this.$config.scroll]);\n\t\tthis._scrolling = false;\n\t};\n\tScrollbarCell.prototype.scrollVertically = function(top){\n\t\tif(this._scrolling) return;\n\t\tthis._scrolling = true;\n\n\t\tthis.$scroll_ver.scrollTop = top;\n\t\ttop = this.$scroll_ver.scrollTop;\n\n\t\tvar views = this._getLinkedViews();\n\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\tif(views[i].scrollTo){\n\t\t\t\tviews[i].scrollTo(undefined, top);\n\t\t\t}\n\t\t}\n\t\tvar oldSize = this.$config.scrollPosition;\n\t\tthis.$config.scrollPosition = top;\n\t\tthis.callEvent(\"onScroll\", [oldSize, top, this.$config.scroll]);\n\t\tthis._scrolling = false;\n\t};\n\n\tScrollbarCell.prototype._isVertical = function(){\n\t\treturn this.$config.scroll == \"y\";\n\t};\n\tScrollbarCell.prototype._isHorizontal = function(){\n\t\treturn this.$config.scroll == \"x\";\n\t};\n\tScrollbarCell.prototype._scrollHorizontalHandler = function (e) {\n\t\tif(this._isVertical() || this._scrolling){\n\t\t\treturn;\n\t\t}\n\n\t\t//in safari we can catch previous onscroll after setting new value from mouse-wheel event\n\t\t//set delay to prevent value drifiting\n\t\tif ((new Date()) - ( this._wheel_time || 0 ) < 100) return true;\n\t\tif (this.$gantt._touch_scroll_active) return;\n\t\tvar left = this.$scroll_hor.scrollLeft;\n\n\t\tthis.scrollHorizontally(left);\n\n\t\tthis._oldLeft = this.$scroll_hor.scrollLeft;\n\t};\n\tScrollbarCell.prototype._outerScrollHorizontalHandler = function(e){\n\t\tif(this._isVertical()){\n\t\t\treturn;\n\t\t}\n\t};\n\n\tScrollbarCell.prototype.show = function(){\n\t\tthis.$parent.show();\n\t};\n\tScrollbarCell.prototype.hide = function(){\n\t\tthis.$parent.hide();\n\t};\n\n\tScrollbarCell.prototype._getScrollSize = function(){\n\t\tvar scrollSize = 0;\n\t\tvar outerSize = 0;\n\t\tvar isHorizontal = this._isHorizontal();\n\n\t\tvar linked = this._getLinkedViews();\n\t\tvar view;\n\t\tvar scrollProperty = isHorizontal ? \"scrollWidth\" : \"scrollHeight\",\n\t\t\tinnerSizeProperty = isHorizontal ? \"contentX\" : \"contentY\";\n\t\tvar outerProperty = isHorizontal ? \"x\" : \"y\";\n\t\tvar offset = this._getScrollOffset();\n\n\t\tfor(var i = 0; i < linked.length; i++){\n\t\t\tview = linked[i];\n\t\t\tif(!(view && view.$content && view.$content.getSize && !view.$config.hidden)) continue;\n\n\t\t\tvar sizes = view.$content.getSize();\n\t\t\tvar cellScrollSize;\n\t\t\tif(sizes.hasOwnProperty(scrollProperty)){\n\t\t\t\tcellScrollSize = sizes[scrollProperty];\n\t\t\t}else{\n\t\t\t\tcellScrollSize = sizes[innerSizeProperty];\n\t\t\t}\n\n\t\t\tif(offset){\n\t\t\t\t// precalculated vertical/horizontal offsets of scrollbar to emulate 4.x look\n\t\t\t\tif(sizes[innerSizeProperty] > sizes[outerProperty] && sizes[innerSizeProperty] > scrollSize && (cellScrollSize > (sizes[outerProperty] - offset + 2))){\n\t\t\t\t\tscrollSize = cellScrollSize + (isHorizontal ? 0 : 2);\n\t\t\t\t\touterSize = sizes[outerProperty];\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tvar nonScrollableSize = Math.max(sizes[innerSizeProperty] - cellScrollSize, 0);\n\t\t\t\tvar scrollableViewPortSize = Math.max(sizes[outerProperty] - nonScrollableSize, 0);\n\t\t\t\tcellScrollSize = cellScrollSize + nonScrollableSize;\n\n\t\t\t\tif(cellScrollSize > scrollableViewPortSize && (cellScrollSize > scrollSize) ){\n\t\t\t\t\t//|| (cellScrollSize === scrollSize && sizes[outerProperty] < outerSize) // same scroll width but smaller scrollable view port\n\n\t\t\t\t\tscrollSize = cellScrollSize;\n\t\t\t\t\touterSize = sizes[outerProperty];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\touterScroll: outerSize,\n\t\t\tinnerScroll: scrollSize\n\t\t};\n\t};\n\n\tScrollbarCell.prototype.scroll = function(position){\n\t\tif(this._isHorizontal()){\n\t\t\tthis.scrollHorizontally(position);\n\t\t}else{\n\t\t\tthis.scrollVertically(position);\n\t\t}\n\t};\n\n\tScrollbarCell.prototype.getScrollState = function(){\n\t\treturn {\n\t\t\tvisible: this.isVisible(),\n\t\t\tdirection: this.$config.scroll,\n\t\t\tsize: this.$config.outerSize,\n\t\t\tscrollSize: this.$config.scrollSize || 0,\n\t\t\tposition: this.$config.scrollPosition || 0\n\t\t};\n\t};\n\n\tScrollbarCell.prototype.setSize = function(width, height){\n\t\t_super.prototype.setSize.apply(this, arguments);\n\n\t\tvar scrollSizes = this._getScrollSize();\n\n\t\tvar ownSize = (this._isVertical() ? height : width) - this._getScrollOffset() + (this._isHorizontal() ? 1 : 0);\n\n\t\tif(scrollSizes.innerScroll && ownSize > scrollSizes.outerScroll){\n\t\t\tscrollSizes.innerScroll += (ownSize - scrollSizes.outerScroll);\n\t\t}\n\t\tthis.$config.scrollSize = scrollSizes.innerScroll;\n\n\t\tthis.$config.width = width;\n\t\tthis.$config.height = height;\n\t\tthis._setScrollSize(scrollSizes.innerScroll);\n\t};\n\n\tScrollbarCell.prototype.isVisible = function(){\n\t\treturn !!(this.$parent && this.$parent.$view.parentNode);\n\t};\n\n\tScrollbarCell.prototype.shouldShow = function(){\n\t\tvar scrollSizes = this._getScrollSize();\n\t\tif(!scrollSizes.innerScroll && (this.$parent && this.$parent.$view.parentNode)){\n\t\t\treturn false;\n\t\t}else if(scrollSizes.innerScroll && !(this.$parent && this.$parent.$view.parentNode)){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tScrollbarCell.prototype.shouldHide = function(){\n\t\tvar scrollSizes = this._getScrollSize();\n\t\tif(!scrollSizes.innerScroll && (this.$parent && this.$parent.$view.parentNode)){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t};\n\n\n\tScrollbarCell.prototype.toggleVisibility = function(){\n\t\tif(this.shouldHide()){\n\t\t\tthis.hide();\n\t\t}else if(this.shouldShow()){\n\t\t\tthis.show();\n\t\t}\n\t};\n\t\n\tScrollbarCell.prototype._getScaleOffset = function(view){\n\t\tvar offset = 0;\n\t\tif(view && (view.$config.view == \"timeline\" || view.$config.view == \"grid\")){\n\t\t\toffset = view.$content.$getConfig().scale_height;\n\t\t}\n\t\treturn offset;\n\t};\n\n\tScrollbarCell.prototype._getScrollOffset = function(){\n\t\tvar offset = 0;\n\t\tif(this._isVertical()){\n\t\t\tvar parentLayout = this.$parent.$parent;\n\t\t\toffset = Math.max(\n\t\t\t\tthis._getScaleOffset(parentLayout.getPrevSibling(this.$parent.$id)),\n\t\t\t\tthis._getScaleOffset(parentLayout.getNextSibling(this.$parent.$id))\n\t\t\t\t);\n\t\t}else{\n\t\t\tvar linked = this._getLinkedViews();\n\n\t\t\tfor (var i = 0; i < linked.length; i++) {\n\t\t\t\tvar view = linked[i],\n\t\t\t\t\tvparent = view.$parent;\n\t\t\t\tvar cells = vparent.$cells;\n\n\t\t\t\tvar last = cells[cells.length - 1];\n\n\t\t\t\tif (last && last.$config.view == \"scrollbar\" && last.$config.hidden === false) {\n\t\t\t\t\toffset = last.$config.width;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn offset || 0;\n\t};\n\n\tScrollbarCell.prototype._setScrollSize = function(size){\n\t\tvar property = this._isHorizontal() ? \"width\" : \"height\";\n\t\tvar scrollbar = this._isHorizontal() ? this.$scroll_hor : this.$scroll_ver;\n\n\t\tvar offset = this._getScrollOffset();\n\n\t\tvar node = scrollbar.firstChild;\n\n\t\tif(offset){\n\t\t\tif(this._isVertical()){\n\n\t\t\t\tthis.$config.outerSize = (this.$config.height - offset + 3);\n\t\t\t\tscrollbar.style.height = this.$config.outerSize + \"px\";\n\t\t\t\tscrollbar.style.top = (offset-1) + \"px\";\n\t\t\t\tdomHelpers.addClassName(scrollbar, this.$parent._borders.top);\n\t\t\t\tdomHelpers.addClassName(scrollbar.parentNode, \"gantt_task_vscroll\");\n\t\t\t}else{\n\t\t\t\tthis.$config.outerSize = (this.$config.width - offset + 1);\n\t\t\t\tscrollbar.style.width = this.$config.outerSize + \"px\";\n\t\t\t\t//domHelpers.addClassName(scrollbar, this.$parent._borders.right);\n\t\t\t}\n\t\t}else{\n\t\t\tscrollbar.style.top = \"auto\";\n\t\t\tdomHelpers.removeClassName(scrollbar, this.$parent._borders.top);\n\t\t\tdomHelpers.removeClassName(scrollbar.parentNode, \"gantt_task_vscroll\");\n\t\t\tthis.$config.outerSize = this.$config.height;\n\t\t}\n\n\t\tnode.style[property] = size + \"px\";\n\t};\n\n\tScrollbarCell.prototype._scrollVerticalHandler = function (e) {\n\t\tif(this._scrollHorizontalHandler() || this._scrolling){\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.$gantt._touch_scroll_active) return;\n\t\tvar top = this.$scroll_ver.scrollTop;\n\t\tvar prev = this._oldTop;\n\t\tif(top == prev) return;\n\n\t\tthis.scrollVertically(top);\n\n\t\tthis._oldTop = this.$scroll_ver.scrollTop;\n\n\t};\n\tScrollbarCell.prototype._outerScrollVerticalHandler = function(e){\n\t\tif(this._scrollHorizontalHandler()){\n\t\t\treturn;\n\t\t}\n\t};\n\n\tScrollbarCell.prototype._checkWheelTarget = function(targetNode){\n\t\tvar connectedViews = this._getLinkedViews().concat(this);\n\n\t\tfor(var i = 0; i < connectedViews.length; i++){\n\t\t\tvar node = connectedViews[i].$view;\n\t\t\tif(domHelpers.isChildOf(targetNode, node)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tScrollbarCell.prototype._mouseWheelHandler = function(e){\n\t\tvar target = e.target || e.srcElement;\n\n\t\tif(!this._checkWheelTarget(target))\n\t\t\treturn;\n\n\t\tthis._wheel_time = new Date();\n\n\t\tvar res = {};\n\t\tvar ff = env.isFF;\n\t\tvar wx = ff ? (e.deltaX*-20) : e.wheelDeltaX*2;\n\t\tvar wy = ff ? (e.deltaY*-40) : e.wheelDelta;\n\n\t\tif(e.shiftKey && !(e.deltaX || e.wheelDeltaX)){\n\t\t\t// shift+mousewheel for horizontal scroll\n\t\t\twx = wy*2;\n\t\t\twy = 0;\n\t\t}\n\n\t\tif (wx && Math.abs(wx) > Math.abs(wy)){\n\t\t\tif(this._isVertical()){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(res.x) return true;//no horisontal scroll, must not block scrolling\n\t\t\tif(!this.$scroll_hor || !this.$scroll_hor.offsetWidth) return true;\n\n\t\t\tvar dir  = wx/-40;\n\t\t\tvar oldLeft = this._oldLeft;\n\t\t\tvar left = oldLeft+dir*30;\n\t\t\tthis.scrollHorizontally(left);\n\t\t\tthis.$scroll_hor.scrollLeft = left;\n\t\t\t// not block scroll if position hasn't changed\n\t\t\tif(oldLeft == this.$scroll_hor.scrollLeft){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tthis._oldLeft = this.$scroll_hor.scrollLeft;\n\t\t} else {\n\t\t\tif(this._isHorizontal()){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(res.y) return true;//no vertical scroll, must not block scrolling\n\t\t\tif(!this.$scroll_ver || !this.$scroll_ver.offsetHeight) return true;\n\n\t\t\tvar dir  = wy/-40;\n\t\t\tif (typeof wy == \"undefined\")\n\t\t\t\tdir = e.detail;\n\n\t\t\tvar oldTop = this._oldTop;\n\t\t\tvar top = this.$scroll_ver.scrollTop+dir*30;\n\n\t\t\t//if(!this.$gantt.config.prevent_default_scroll &&\n\t\t\t//\t(this.$gantt._cached_scroll_pos && ((this.$gantt._cached_scroll_pos.y == top) || (this.$gantt._cached_scroll_pos.y <= 0 && top <= 0)))) return true;\n\n\n\t\t\tthis.scrollVertically(top);\n\t\t\tthis.$scroll_ver.scrollTop = top;\n\n\t\t\t// not block scroll if position hasn't changed\n\t\t\tif(oldTop == this.$scroll_ver.scrollTop){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tthis._oldTop = this.$scroll_ver.scrollTop;\n\t\t}\n\n\t\tif (e.preventDefault)\n\t\t\te.preventDefault();\n\t\te.cancelBubble=true;\n\t\treturn false;\n\t};\n\n\treturn ScrollbarCell;\n})(Cell);\n\nmodule.exports = ScrollbarCell;","module.exports = null;","var __extends = require(\"../../../utils/extends\"),\n\tutils = require(\"../../../utils/utils\"),\n\tCell = require(\"./cell\");\n\nvar ViewCell = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ViewCell, _super);\n\tfunction ViewCell(parent, config, factory) {\n\n\t\tvar _this = _super.apply(this, arguments) || this;\n\n\t\tif(config.view){\n\t\t\tif(config.id){\n\t\t\t\t// pass id to the nested view\n\t\t\t\tthis.$id = utils.uid();\n\t\t\t}\n\t\t\tvar childConfig = utils.copy(config);\n\t\t\tdelete childConfig.config;\n\t\t\tdelete childConfig.templates;\n\n\t\t\tthis.$content = this.$factory.createView(config.view, this, childConfig, this);\n\t\t\tif(!this.$content)\n\t\t\t\treturn false;\n\t\t}\n\n\t\t_this.$name = \"viewCell\";\n\t\treturn _this;\n\t}\n\n\tViewCell.prototype.destructor = function(){\n\t\tthis.clear();\n\t\t_super.prototype.destructor.call(this);\n\t};\n\n\tViewCell.prototype.clear = function(){\n\n\t\tthis.$initialized = false;\n\n\t\t// call destructor\n\t\tif (this.$content){\n\t\t\tvar method = this.$content.unload || this.$content.destructor;\n\t\t\tif (method){\n\t\t\t\tmethod.call(this.$content);\n\t\t\t}\n\t\t}\n\n\t\t_super.prototype.clear.call(this);\n\n\t};\n\n\tViewCell.prototype.scrollTo = function(left, top){\n\n\t\tif(this.$content && this.$content.scrollTo){\n\t\t\tthis.$content.scrollTo(left, top);\n\t\t}else{\n\t\t\t_super.prototype.scrollTo.call(this, left, top);\n\t\t}\n\t};\n\n\tViewCell.prototype._setContentSize = function(x, y){\n\t\tvar borders = this._getBorderSizes();\n\t\tvar outerX = x + borders.horizontal;\n\t\tvar outerY = y + borders.vertical;\n\t\tthis.$config.width = outerX;\n\t\tthis.$config.height = outerY;\n\t};\n\n\tViewCell.prototype.setSize = function(x, y){\n\t\t_super.prototype.setSize.call(this, x, y);\n\n\t\tif(!this.$preResize && this.$content) {\n\t\t\tif (!this.$initialized) {\n\t\t\t\tthis.$initialized = true;\n\t\t\t\tvar header = this.$view.childNodes[0];\n\t\t\t\tvar content = this.$view.childNodes[1];\n\t\t\t\tif(!content) content = header;\n\n\t\t\t\t/*if(this.$content.$config){\n\t\t\t\t\tthis.$content.$config.width = this.$lastSize.contentX;\n\t\t\t\t\tthis.$content.$config.height = this.$lastSize.contentY;\n\t\t\t\t}*/\n\t\t\t\tthis.$content.init(content);\n\t\t\t}\n\t\t}\n\t};\n\n\tViewCell.prototype.setContentSize = function(){\n\t\tif(!this.$preResize && this.$content) {\n\t\t\tif (this.$initialized) {\n\t\t\t\tthis.$content.setSize(this.$lastSize.contentX, this.$lastSize.contentY);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tViewCell.prototype.getContentSize = function(){\n\t\tvar size = _super.prototype.getContentSize.call(this);\n\n\t\tif(this.$content && this.$initialized){\n\t\t\tvar childSize = this.$content.getSize();\n\t\t\tsize.width = childSize.contentX === undefined ? childSize.width : childSize.contentX;\n\t\t\tsize.height = childSize.contentY === undefined ? childSize.height : childSize.contentY;\n\t\t}\n\n\t\tvar borders = this._getBorderSizes();\n\t\tsize.width += borders.horizontal;\n\t\tsize.height += borders.vertical;\n\n\t\treturn size;\n\t};\n\n\treturn ViewCell;\n}(Cell));\n\nmodule.exports = ViewCell;","var __extends = require(\"../../../utils/extends\"),\n\tLayout = require(\"./layout\"),\n\tCell = require(\"./cell\");\n\nvar ViewLayout = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ViewLayout, _super);\n\tfunction ViewLayout(parent, config, factory) {\n\t\tvar _this = _super.apply(this, arguments) || this;\n\t\tfor (var i = 0; i < _this.$cells.length; i++) {\n\t\t\t_this.$cells[i].$config.hidden = (i !== 0);\n\t\t}\n\t\t_this.$cell = _this.$cells[0];\n\t\t_this.$name = \"viewLayout\";\n\n\t\treturn _this;\n\t}\n\tViewLayout.prototype.cell = function (id) {\n\t\tvar cell = _super.prototype.cell.call(this, id);\n\t\tif (!cell.$view) {\n\t\t\tthis.$fill(null, this);\n\t\t}\n\t\treturn cell;\n\t};\n\tViewLayout.prototype.moveView = function (view) {\n\t\tvar body = this.$view;\n\t\tif (this.$cell) {\n\t\t\tthis.$cell.$config.hidden = true;\n\t\t\tbody.removeChild(this.$cell.$view);\n\t\t}\n\t\tthis.$cell = view;\n\t\tbody.appendChild(view.$view);\n\t};\n\tViewLayout.prototype.setSize = function (x, y) {\n\t\tCell.prototype.setSize.call(this, x, y);\n\t};\n\n\tViewLayout.prototype.setContentSize = function(){\n\t\tvar size = this.$lastSize;\n\t\tthis.$cell.setSize(size.contentX, size.contentY);\n\t};\n\n\tViewLayout.prototype.getSize = function () {\n\t\tvar sizes = _super.prototype.getSize.call(this);\n\t\tif (this.$cell) {\n\t\t\tvar cellSize = this.$cell.getSize();\n\t\t\tif (this.$config.byMaxSize) {\n\t\t\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\t\t\tvar otherCell = this.$cells[i].getSize();\n\t\t\t\t\tfor (var cell in cellSize) {\n\t\t\t\t\t\tcellSize[cell] = Math.max(cellSize[cell], otherCell[cell]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var size in sizes) {\n\t\t\t\tsizes[size] = sizes[size] || cellSize[size];\n\t\t\t}\n\t\t\tsizes.gravity = Math.max(sizes.gravity, cellSize.gravity);\n\t\t}\n\t\treturn sizes;\n\t};\n\treturn ViewLayout;\n}(Layout));\n\nmodule.exports = ViewLayout;","var rendererFactory = function(gantt){\n\tvar services = gantt.$services;\n\n\t//hash of dom elements is needed to redraw single bar/link\n\tvar task_area_pulls = {},\n\t\ttask_area_renderers = {};\n\n\tfunction getRenderer(id, layer, node) {\n\n\t\tif (task_area_renderers[id])\n\t\t\treturn task_area_renderers[id];\n\n\t\tif (!layer.renderer)\n\t\t\tgantt.assert(false, \"Invalid renderer call\");\n\n\t\tvar renderOne = function(item){\n\t\t\treturn layer.renderer.call(this, item, layer.host);\n\t\t} ;\n\n\t\tvar filter = layer.filter;\n\n\t\tif (node)\n\t\t\tnode.setAttribute(services.config().layer_attribute, true);\n\n\t\ttask_area_renderers[id] = {\n\t\t\trender_item: function (item, container) {\n\t\t\t\tcontainer = container || node;\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tif (!filter(item)) {\n\t\t\t\t\t\tthis.remove_item(item.id);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar dom = renderOne.call(gantt, item);\n\t\t\t\tthis.append(item, dom, container);\n\n\t\t\t},\n\n\t\t\tclear: function (container) {\n\n\t\t\t\tthis.rendered = task_area_pulls[id] = {};\n\t\t\t\tif(!layer.append)\n\t\t\t\t\tthis.clear_container(container);\n\t\t\t},\n\t\t\tclear_container: function (container) {\n\t\t\t\tcontainer = container || node;\n\t\t\t\tif (container)\n\t\t\t\t\tcontainer.innerHTML = \"\";\n\t\t\t},\n\t\t\trender_items: function (items, container) {\n\t\t\t\tcontainer = container || node;\n\n\t\t\t\tvar buffer = document.createDocumentFragment();\n\t\t\t\tthis.clear(container);\n\t\t\t\tfor (var i = 0, vis = items.length; i < vis; i++) {\n\t\t\t\t\tthis.render_item(items[i], buffer);\n\t\t\t\t}\n\n\t\t\t\tcontainer.appendChild(buffer);\n\t\t\t},\n\t\t\tappend: function (item, node, container) {\n\t\t\t\tif (!node) {\n\t\t\t\t\tif (this.rendered[item.id]) {\n\t\t\t\t\t\tthis.remove_item(item.id);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.rendered[item.id] && this.rendered[item.id].parentNode) {\n\t\t\t\t\tthis.replace_item(item.id, node);\n\t\t\t\t} else {\n\t\t\t\t\tcontainer.appendChild(node);\n\t\t\t\t}\n\t\t\t\tthis.rendered[item.id] = node;\n\n\t\t\t},\n\t\t\treplace_item: function (item_id, newNode) {\n\t\t\t\tvar item = this.rendered[item_id];\n\t\t\t\tif (item && item.parentNode) {\n\t\t\t\t\titem.parentNode.replaceChild(newNode, item);\n\t\t\t\t}\n\t\t\t\tthis.rendered[item_id] = newNode;\n\t\t\t},\n\t\t\tremove_item: function (item_id) {\n\t\t\t\tthis.hide(item_id);\n\t\t\t\tdelete this.rendered[item_id];\n\t\t\t},\n\t\t\thide: function (item_id) {\n\t\t\t\tvar item = this.rendered[item_id];\n\t\t\t\tif (item && item.parentNode) {\n\t\t\t\t\titem.parentNode.removeChild(item);\n\t\t\t\t}\n\t\t\t},\n\t\t\trestore: function (item) {\n\t\t\t\tvar dom = this.rendered[item.id];\n\t\t\t\tif (dom) {\n\t\t\t\t\tif (!dom.parentNode) {\n\t\t\t\t\t\tthis.append(item, dom, node);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.render_item(item, node);\n\t\t\t\t}\n\t\t\t},\n\t\t\tchange_id: function (oldid, newid) {\n\t\t\t\tthis.rendered[newid] = this.rendered[oldid];\n\t\t\t\tdelete this.rendered[oldid];\n\t\t\t},\n\t\t\trendered: task_area_pulls[id],\n\t\t\tnode: node,\n\t\t\tdestructor: function () {\n\t\t\t\tthis.clear();\n\t\t\t\tdelete task_area_renderers[id];\n\t\t\t\tdelete task_area_pulls[id];\n\t\t\t}\n\t\t};\n\n\t\treturn task_area_renderers[id];\n\t}\n\n\n\tfunction clearRenderers() {\n\t\tfor (var i in task_area_renderers) {\n\t\t\tgetRenderer(i).destructor();\n\t\t}\n\t}\n\n\treturn {\n\t\tgetRenderer: getRenderer,\n\t\tclearRenderers: clearRenderers\n\t};\n\n};\n\nmodule.exports = rendererFactory;","var renderFactoryProvider = require(\"./render_factory\");\nvar utils = require(\"../../../utils/utils\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\");\n\nvar layerFactory = function(gantt){\n\n\tvar renderFactory = renderFactoryProvider(gantt);\n\treturn {\n\tcreateGroup: function (get_container, rel_root, defaultFilters) {\n\n\t\tvar renderGroup = {\n\t\t\ttempCollection: [],\n\t\t\trenderers: {},\n\t\t\tcontainer: get_container,\n\t\t\tfilters: [],\n\t\t\tgetLayers: function () {\n\t\t\t\tthis._add();// add pending layers\n\n\t\t\t\tvar res = [];\n\t\t\t\tfor (var i in this.renderers) {\n\t\t\t\t\tres.push(this.renderers[i]);\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t},\n\t\t\tgetLayer: function (id) {\n\t\t\t\treturn this.renderers[id];\n\t\t\t},\n\t\t\t_add: function (layer) {\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.id = layer.id || utils.uid();\n\t\t\t\t\tthis.tempCollection.push(layer);\n\t\t\t\t}\n\n\t\t\t\tvar container = this.container();\n\n\t\t\t\tvar pending = this.tempCollection;\n\t\t\t\tfor (var i = 0; i < pending.length; i++) {\n\t\t\t\t\tlayer = pending[i];\n\n\t\t\t\t\tif (!this.container() && !(layer && layer.container && domHelpers.isChildOf(layer.container, document.body))) continue;\n\n\t\t\t\t\tvar node = layer.container,\n\t\t\t\t\t\tid = layer.id,\n\t\t\t\t\t\ttopmost = layer.topmost;\n\t\t\t\t\tif (!node.parentNode) {\n\t\t\t\t\t\t//insert on top or below the tasks\n\t\t\t\t\t\tif (topmost) {\n\t\t\t\t\t\t\tcontainer.appendChild(node);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar rel = rel_root ? rel_root() : container.firstChild;\n\t\t\t\t\t\t\tif (rel)\n\t\t\t\t\t\t\t\tcontainer.insertBefore(node, rel);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tcontainer.appendChild(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.renderers[id] = renderFactory.getRenderer(\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tlayer,\n\t\t\t\t\t\tnode\n\t\t\t\t\t);\n\t\t\t\t\tthis.tempCollection.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t},\n\t\t\taddLayer: function (config) {\n\t\t\t\t//config = prepareConfig(config);\n\t\t\t\tif(config){\n\t\t\t\t\tif(typeof config == \"function\"){\n\t\t\t\t\t\tconfig = {renderer: config};\n\t\t\t\t\t}\n\n\t\t\t\t\tif(config.filter === undefined){\n\t\t\t\t\t\tconfig.filter = mergeFilters(defaultFilters || []);\n\t\t\t\t\t}else if(config.filter instanceof Array){\n\t\t\t\t\t\tconfig.filter.push(defaultFilters);\n\t\t\t\t\t\tconfig.filter = mergeFilters(config.filter);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!config.container){\n\t\t\t\t\t\tconfig.container = document.createElement(\"div\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._add(config);\n\t\t\t\treturn (config ? config.id : undefined);\n\t\t\t},\n\t\t\teachLayer: function(code){\n\t\t\t\tfor (var i in this.renderers) {\n\t\t\t\t\tcode(this.renderers[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tremoveLayer: function (id) {\n\t\t\t\tif(!this.renderers[id])\n\t\t\t\t\treturn;\n\t\t\t\tthis.renderers[id].destructor();\n\t\t\t\tdelete this.renderers[id];\n\t\t\t},\n\t\t\tclear: function () {\n\t\t\t\tfor (var i in this.renderers) {\n\t\t\t\t\tthis.renderers[i].destructor();\n\t\t\t\t}\n\t\t\t\tthis.renderers = {};\n\t\t\t}//,\n\t\t\t//prepareConfig: prepareConfig\n\t\t};\n\n\t\tgantt.attachEvent(\"onDestroy\", function(){\n\t\t\trenderGroup.clear();\n\t\t\trenderGroup = null;\n\t\t});\n\n\t\treturn renderGroup;\n\t}\n};};\n\n\nfunction mergeFilters(filter_methods){\n\tif(!(filter_methods instanceof Array)){\n\t\tfilter_methods = Array.prototype.slice.call(arguments, 0);\n\t}\n\n\treturn function(obj){\n\t\tvar res = true;\n\t\tfor(var i = 0, len = filter_methods.length; i < len; i++){\n\t\t\tvar filter_method = filter_methods[i];\n\t\t\tif(filter_method){\n\t\t\t\tres = res && (filter_method(obj.id, obj) !== false);\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t};\n}\n\n\nmodule.exports = layerFactory;\n","var createLayerFactory = require(\"./render/layer_engine\");\n\nvar createLayerEngine = function(gantt){\n\tvar factory = createLayerFactory(gantt);\n\treturn {\n\t\tgetDataRender: function(name){\n\t\t\treturn gantt.$services.getService(\"layer:\" + name) || null;\n\t\t},\n\t\tcreateDataRender: function(config){\n\t\t\tvar name = config.name,\n\t\t\t\tdefaultContainer = config.defaultContainer,\n\t\t\t\tpreviusSiblingContainer = config.defaultContainerSibling;\n\n\t\t\tvar layers = factory.createGroup(\n\t\t\t\tdefaultContainer,\n\t\t\t\tpreviusSiblingContainer,\n\t\t\t\tfunction(itemId, item){\n\t\t\t\t\tif(layers.filters){\n\t\t\t\t\t\tfor(var i = 0; i < layers.filters.length; i++){\n\t\t\t\t\t\t\tif(layers.filters[i](itemId, item) === false){\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tgantt.$services.setService(\"layer:\" + name, function(){\n\t\t\t\treturn layers;\n\t\t\t});\n\n\t\t\tgantt.attachEvent(\"onGanttReady\", function () {\n\t\t\t\tlayers.addLayer();// init layers on start\n\t\t\t});\n\n\t\t\treturn layers;\n\t\t},\n\t\tinit: function(){\n\t\t\tvar taskLayers = this.createDataRender({\n\t\t\t\tname: \"task\",\n\t\t\t\tdefaultContainer: function(){\n\t\t\t\t\tif(gantt.$task_data){\n\t\t\t\t\t\treturn gantt.$task_data;\n\t\t\t\t\t}else if(gantt.$ui.getView(\"timeline\")){\n\t\t\t\t\t\treturn gantt.$ui.getView(\"timeline\").$task_data;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdefaultContainerSibling: function(){\n\t\t\t\t\tif(gantt.$task_links){\n\t\t\t\t\t\treturn gantt.$task_links;\n\t\t\t\t\t}else if(gantt.$ui.getView(\"timeline\")){\n\t\t\t\t\t\treturn gantt.$ui.getView(\"timeline\").$task_links;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfilter: function(item){\n\n\t\t\t\t}\n\t\t\t}, gantt);\n\n\t\t\tvar linkLayers = this.createDataRender({\n\t\t\t\tname: \"link\",\n\t\t\t\tdefaultContainer: function(){\n\t\t\t\t\tif(gantt.$task_data){\n\t\t\t\t\t\treturn gantt.$task_data;\n\t\t\t\t\t}else if(gantt.$ui.getView(\"timeline\")){\n\t\t\t\t\t\treturn gantt.$ui.getView(\"timeline\").$task_data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, gantt);\n\n\t\t\treturn {\n\t\t\t\taddTaskLayer: function(config){\n\t\t\t\t\treturn taskLayers.addLayer(config);\n\t\t\t\t},\n\n\t\t\t\t/*getTaskLayer: function(id){\n\t\t\t\t\treturn taskLayers.getLayer(id);\n\t\t\t\t},*/\n\n\t\t\t\t_getTaskLayers: function(){\n\t\t\t\t\treturn taskLayers.getLayers();\n\t\t\t\t},\n\t\t\t\tremoveTaskLayer: function(id){\n\t\t\t\t\ttaskLayers.removeLayer(id);\n\t\t\t\t},\n\t\t\t\t/*eachTaskLayer: function(code){\n\t\t\t\t\ttaskLayers.eachLayer(code);\n\t\t\t\t},*/\n\t\t\t\t_clearTaskLayers: function(){\n\t\t\t\t\ttaskLayers.clear();\n\t\t\t\t},\n\t\t\t\taddLinkLayer: function(config){\n\t\t\t\t\treturn linkLayers.addLayer(config);\n\t\t\t\t},\n\t\t\t\t/*getLinkLayer: function(id){\n\t\t\t\t\treturn linkLayers.getLayer(id);\n\t\t\t\t},*/\n\t\t\t\t_getLinkLayers: function(){\n\t\t\t\t\treturn linkLayers.getLayers();\n\t\t\t\t},\n\t\t\t\tremoveLinkLayer: function(id){\n\t\t\t\t\tlinkLayers.removeLayer(id);\n\t\t\t\t},\n\t\t\t\t/*eachLinkLayer: function(code){\n\t\t\t\t\tlinkLayers.eachLayer(code);\n\t\t\t\t},*/\n\t\t\t\t_clearLinkLayers: function(){\n\t\t\t\t\tlinkLayers.clear();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n};\n\nmodule.exports = createLayerEngine;","var domHelpers = require(\"../../utils/dom_helpers\");\n\nvar createMouseHandler = (function(domHelpers) {\n\treturn function (gantt) {\n\t\tvar eventHandlers = {\n\t\t\t\"click\": {},\n\t\t\t\"doubleclick\": {},\n\t\t\t\"contextMenu\": {}\n\t\t};\n\n\t\tfunction addEventTarget(event, className, handler, root) {\n\t\t\tif(!eventHandlers[event][className]){\n\t\t\t\teventHandlers[event][className] = [];\n\t\t\t}\n\n\t\t\teventHandlers[event][className].push({\n\t\t\t\thandler: handler,\n\t\t\t\troot: root\n\t\t\t});\n\t\t}\n\n\t\tfunction callHandler(eventName, className, root, args) {\n\t\t\tvar handlers = eventHandlers[eventName][className];\n\t\t\tif(handlers){\n\t\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\t\tif(!(root || handlers[i].root) || handlers[i].root === root){\n\t\t\t\t\t\thandlers[i].handler.apply(this, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction onClick(e) {\n\t\t\te = e || window.event;\n\t\t\tvar id = gantt.locate(e);\n\n\t\t\tvar handlers = findEventHandlers(e, eventHandlers.click);\n\t\t\tvar res = true;\n\t\t\tif (id !== null) {\n\t\t\t\tres = !gantt.checkEvent(\"onTaskClick\") || gantt.callEvent(\"onTaskClick\", [id, e]);\n\t\t\t} else {\n\t\t\t\tgantt.callEvent(\"onEmptyClick\", [e]);\n\t\t\t}\n\n\t\t\tif (res) {\n\t\t\t\tvar default_action = callEventHandlers(handlers, e, id);\n\t\t\t\tif (!default_action)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (id && gantt.getTask(id) && gantt.config.select_task && !gantt.config.multiselect) {\n\t\t\t\t\tgantt.selectTask(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction onContextMenu(e) {\n\t\t\te = e || window.event;\n\t\t\tvar src = e.target || e.srcElement,\n\t\t\t\ttaskId = gantt.locate(src),\n\t\t\t\tlinkId = gantt.locate(src, gantt.config.link_attribute);\n\n\t\t\tvar res = !gantt.checkEvent(\"onContextMenu\") || gantt.callEvent(\"onContextMenu\", [taskId, linkId, e]);\n\t\t\tif (!res) {\n\t\t\t\tif (e.preventDefault)\n\t\t\t\t\te.preventDefault();\n\t\t\t\telse\n\t\t\t\t\te.returnValue = false;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tfunction findEventHandlers(e, hash){\n\t\t\tvar trg = e.target || e.srcElement;\n\t\t\tvar handlers = [];\n\t\t\twhile (trg) {\n\t\t\t\tvar css = domHelpers.getClassName(trg);\n\t\t\t\tif (css) {\n\t\t\t\t\tcss = css.split(\" \");\n\t\t\t\t\tfor (var i = 0; i < css.length; i++) {\n\t\t\t\t\t\tif (!css[i]) continue;\n\t\t\t\t\t\tif (hash[css[i]]) {\n\t\t\t\t\t\t\tvar delegateHandlers = hash[css[i]];\n\n\t\t\t\t\t\t\tfor(var h = 0; h < delegateHandlers.length; h++){\n\t\t\t\t\t\t\t\tif(delegateHandlers[h].root){\n\t\t\t\t\t\t\t\t\tif(!domHelpers.isChildOf(trg, delegateHandlers[h].root)){\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\thandlers.push(delegateHandlers[h].handler);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttrg = trg.parentNode;\n\t\t\t}\n\t\t\treturn handlers;\n\t\t}\n\n\t\tfunction callEventHandlers(handlers, e, id){\n\t\t\tvar res = true;\n\n\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\tvar handlerResult =  handlers[i].call(gantt, e, id, e.target || e.srcElement);\n\t\t\t\tres = res && !(typeof handlerResult != \"undefined\" && handlerResult !== true);\n\t\t\t}\n\n\t\t\treturn res;\n\t\t}\n\n\n\t\tfunction onDoubleClick(e) {\n\t\t\te = e || window.event;\n\t\t\tvar id = gantt.locate(e);\n\n\t\t\tvar handlers = findEventHandlers(e, eventHandlers.doubleclick);\n\t\t\tvar res = !gantt.checkEvent(\"onTaskDblClick\") || gantt.callEvent(\"onTaskDblClick\", [id, e]);\n\t\t\tif (res) {\n\t\t\t\tvar default_action = callEventHandlers(handlers, e, id);\n\t\t\t\tif (!default_action)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (id !== null && gantt.getTask(id)) {\n\t\t\t\t\tif (res && gantt.config.details_on_dblclick) {\n\t\t\t\t\t\tgantt.showLightbox(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction onMouseMove(e) {\n\t\t\tif (gantt.checkEvent(\"onMouseMove\")) {\n\t\t\t\tvar id = gantt.locate(e);\n\t\t\t\tgantt._last_move_event = e;\n\t\t\t\tgantt.callEvent(\"onMouseMove\", [id, e]);\n\t\t\t}\n\t\t}\n\n\t\tfunction detach(eventName, className, handler, root) {\n\t\t\tif (eventHandlers[eventName] && eventHandlers[eventName][className]) {\n\t\t\t\tvar handlers = eventHandlers[eventName];\n\t\t\t\tvar elementHandlers = handlers[className];\n\t\t\t\tfor(var i = 0; i < elementHandlers.length; i++){\n\t\t\t\t\tif(elementHandlers[i].root == root){\n\t\t\t\t\t\telementHandlers.splice(i, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!elementHandlers.length){\n\t\t\t\t\tdelete handlers[className];\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tvar domEvents = gantt._createDomEventScope();\n\n\t\tfunction reset(node){\n\n\t\t\tdomEvents.detachAll();\n\n\t\t\tif(node){\n\t\t\t\tdomEvents.attach(node, \"click\", onClick);\n\t\t\t\tdomEvents.attach(node, \"dblclick\", onDoubleClick);\n\t\t\t\tdomEvents.attach(node, \"mousemove\", onMouseMove);\n\t\t\t\tdomEvents.attach(node, \"contextmenu\", onContextMenu);\n\t\t\t}\n\t\t}\n\n\n\n\t\treturn {\n\t\t\treset: reset,\n\t\t\tglobal: function(event, classname, handler){\n\t\t\t\taddEventTarget(event, classname, handler, null);\n\t\t\t},\n\t\t\tdelegate: addEventTarget,\n\t\t\tdetach: detach,\n\t\t\tcallHandler: callHandler,\n\t\t\tonDoubleClick: onDoubleClick,\n\t\t\tonMouseMove: onMouseMove,\n\t\t\tonContextMenu: onContextMenu,\n\t\t\tonClick: onClick,\n\t\t\tdestructor: function(){\n\t\t\t\treset();\n\t\t\t\teventHandlers = null;\n\t\t\t\tdomEvents = null;\n\t\t\t}\n\n\t\t};\n\t};\n\n})(domHelpers);\n\n\nmodule.exports = {\n\tinit:createMouseHandler\n};","var utils = require(\"../../utils/utils\");\n\nfunction ViewSettings(config){\n\tutils.mixin(this, config, true);\n}\n\n\nfunction extendSettings (store, parentSettings){\n\tvar own = this.$config[store];\n\n\tif(own){\n\t\tif(own instanceof ViewSettings){\n\t\t\treturn own;\n\t\t}else{\n\t\t\tViewSettings.prototype = parentSettings;\n\t\t\tthis.$config[store] = new ViewSettings(own);\n\t\t\treturn this.$config[store];\n\t\t}\n\t}else{\n\t\treturn parentSettings;\n\t}\n}\n\nvar configurable = function(parentView){\n\tvar parentConfig,\n\t\tparentTemplates;\n\n\treturn {\n\t\t$getConfig: function(){\n\t\t\tif(!parentConfig){\n\t\t\t\tparentConfig = parentView ? parentView.$getConfig() : this.$gantt.config;\n\t\t\t}\n\n\t\t\treturn extendSettings.call(this, \"config\", parentConfig);\n\t\t},\n\t\t$getTemplates: function(){\n\t\t\tif(!parentTemplates){\n\t\t\t\tparentTemplates = parentView ? parentView.$getTemplates() : this.$gantt.templates;\n\t\t\t}\n\n\t\t\treturn extendSettings.call(this, \"templates\", parentTemplates);\n\t\t}\n\t};\n};\n\nmodule.exports = function(obj, parent){\n\tutils.mixin(obj, configurable(parent));\n};","var utils = require(\"../../utils/utils\"),\n\tconfigurable = require(\"./configurable\");\n\nvar uiFactory = function createFactory(gantt){\n\tvar views = {};\n\n\tfunction ui(cell, parentView) {\n\t\tvar content;\n\t\tvar view = \"cell\";\n\t\tif (cell.view){\n\t\t\tview = \"viewcell\";\n\t\t}else if (cell.resizer) {\n\t\t\tview = \"resizer\";\n\t\t}\n\t\telse if (cell.rows || cell.cols) {\n\t\t\tview = \"layout\";\n\t\t}\n\t\telse if (cell.views) {\n\t\t\tview = \"multiview\";\n\t\t}\n\n\t\tcontent = createView.call(this, view, null, cell, parentView);\n\t\treturn content;\n\t}\n\t\n\tvar createdViews = {};\n\n\tfunction createView(name, parent, config, parentView) {\n\t\tvar creator = views[name];\n\n\t\tif(!creator || !creator.create)\n\t\t\treturn false;\n\n\t\tif(name == \"resizer\" && !config.mode){\n\t\t\tif(parentView.$config.cols){\n\t\t\t\tconfig.mode = \"x\";\n\t\t\t}else{\n\t\t\t\tconfig.mode = \"y\";\n\t\t\t}\n\t\t}\n\n\t\tif(name == \"viewcell\" && config.view == \"scrollbar\" && !config.scroll){\n\t\t\tif(parentView.$config.cols){\n\t\t\t\tconfig.scroll = \"y\";\n\t\t\t}else{\n\t\t\t\tconfig.scroll = \"x\";\n\t\t\t}\n\t\t}\n\n\t\tvar config = utils.copy(config);\n\n\t\tif(!config.id && !createdViews[config.view]){\n\t\t\tconfig.id = config.view;\n\t\t}\n\n\t\tif(config.id && !config.css){\n\t\t\tconfig.css = config.id+\"_cell\";\n\t\t}\n\n\t\tvar view = new creator.create(parent, config, this, gantt);\n\n\t\tif(creator.configure){\n\t\t\tcreator.configure(view);\n\t\t}\n\n\t\tconfigurable(view, parentView);\n\t\tif(!view.$id){\n\t\t\tview.$id = config.id || gantt.uid();\n\t\t}\n\n\t\tif(!view.$parent && typeof parent == \"object\"){\n\t\t\tview.$parent = parent;\n\t\t}\n\t\tif(!view.$config){\n\t\t\tview.$config = config;\n\t\t}\n\n\t\tif(createdViews[view.$id]){\n\t\t\tview.$id = gantt.uid();\n\t\t}\n\n\t\tcreatedViews[view.$id] = view;\n\n\t\treturn view;\n\t}\n\n\tfunction reset(){\n\t\tcreatedViews = {};\n\t}\n\n\tfunction register(name, viewConstructor, configure){\n\t\tviews[name] = {create: viewConstructor, configure: configure};\n\t}\n\n\tfunction getView(id){\n\t\treturn createdViews[id];\n\t}\n\n\tvar factory = {\n\t\tinitUI:ui,\n\t\treset: reset,\n\t\tregisterView: register,\n\t\tcreateView: createView,\n\t\tgetView: getView\n\t};\n\n\treturn factory;\n};\n\nmodule.exports = {\n\tcreateFactory: uiFactory\n};\n\n","var uiFactory = require(\"./ui_factory\"),\n\tmouseEvents = require(\"./mouse\"),\n\tcreateLayers = require(\"./gantt_layers\"),\n\tCell = require(\"./layout/cell\"),\n\tLayout = require(\"./layout/layout\"),\n\tViewLayout = require(\"./layout/view_layout\"),\n\tViewCell = require(\"./layout/view_cell\"),\n\tResizer = require(\"./layout/resizer_cell\"),\n\tScrollbar = require(\"./layout/scrollbar_cell\"),\n\tTimeline = require(\"./timeline/timeline\"),\n\tGrid = require(\"./grid/grid\"),\n\tResourceGrid = require(\"./grid/resource_grid\"),\n\tResourceTimeline = require(\"./timeline/resource_timeline\"),\n\tResourceHistogram = require(\"./timeline/resource_histogram\");\n\n\nvar gridEditorsFactory = require(\"./grid/editors/controller\");\n\n\nvar renderTaskBar = require(\"./render/task_bar_render\"),\n\trenderSplitTaskBar = require(\"./render/task_split_render\"),\n\trenderTaskBg = require(\"./render/task_bg_render\"),\n\trenderLink = require(\"./render/link_render\"),\n\tgridRenderer = require(\"./render/task_grid_line_render\");\n\nvar mainGridInitializer = require(\"./grid/main_grid_initializer\");\nvar mainTimelineInitializer = require(\"./timeline/main_timeline_initializer\");\nvar mainLayoutInitializer = require(\"./main_layout_initializer\");\n\nfunction initUI(gantt){\n\tfunction attachInitializer(view, initializer){\n\t\tvar ext = initializer(gantt);\n\t\tif(ext.onCreated)\n\t\t\text.onCreated(view);\n\t\tview.attachEvent(\"onReady\", function(){\n\t\t\tif(ext.onInitialized)\n\t\t\t\text.onInitialized(view);\n\t\t});\n\t\tview.attachEvent(\"onDestroy\", function(){\n\t\t\tif(ext.onDestroyed)\n\t\t\t\text.onDestroyed(view);\n\t\t});\n\t}\n\n\tvar factory = uiFactory.createFactory(gantt);\n\tfactory.registerView(\"cell\", Cell);\n\tfactory.registerView(\"resizer\", Resizer);\n\tfactory.registerView(\"scrollbar\", Scrollbar);\n\tfactory.registerView(\"layout\", Layout, function(view){\n\t\tvar id = view.$config ? view.$config.id : null;\n\t\tif(id === \"main\"){\n\t\t\tattachInitializer(view, mainLayoutInitializer);\n\t\t}\n\t});\n\tfactory.registerView(\"viewcell\", ViewCell);\n\tfactory.registerView(\"multiview\", ViewLayout);\n\tfactory.registerView(\"timeline\", Timeline, function(view){\n\t\tvar id = view.$config ? view.$config.id : null;\n\t\tif(id === \"timeline\" || view.$config.bind == \"task\"){\n\t\t\tattachInitializer(view, mainTimelineInitializer);\n\t\t}\n\t});\n\tfactory.registerView(\"grid\", Grid, function(view){\n\t\tvar id = view.$config ? view.$config.id : null;\n\t\tif(id === \"grid\" || view.$config.bind == \"task\"){\n\t\t\tattachInitializer(view, mainGridInitializer);\n\t\t}\n\t});\n\n\tfactory.registerView(\"resourceGrid\", ResourceGrid);\n\tfactory.registerView(\"resourceTimeline\", ResourceTimeline);\n\tfactory.registerView(\"resourceHistogram\", ResourceHistogram);\n\n\tvar layersEngine = createLayers(gantt);\n\n\tvar inlineEditors = gridEditorsFactory(gantt);\n\n\tgantt.ext.inlineEditors = inlineEditors;\n\tgantt.ext._inlineEditors = inlineEditors;\n\tinlineEditors.init(gantt);\n\n\treturn {\n\t\tfactory:factory,\n\t\tmouseEvents: mouseEvents.init(gantt),\n\t\tlayersApi: layersEngine.init(),\n\t\trender:{\n\t\t\tgridLine: gridRenderer(gantt),\n\t\t\ttaskBg: renderTaskBg(gantt),\n\t\t\ttaskBar: renderTaskBar(gantt),\n\t\t\ttaskSplitBar: renderSplitTaskBar(gantt),\n\t\t\tlink: renderLink(gantt)\n\t\t},\n\t\tlayersService: {\n\t\t\tgetDataRender: function(name){\n\t\t\t\treturn layersEngine.getDataRender(name, gantt);\n\t\t\t},\n\t\t\tcreateDataRender: function(config){\n\t\t\t\treturn layersEngine.createDataRender(config, gantt);\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = {\n\tinit: initUI\n};","var utils = require(\"../utils/utils\");\nvar domHelpers = require(\"../utils/dom_helpers\");\n\nmodule.exports = function(gantt) {\n\n\tvar boxAttribute = \"data-dhxbox\";\n\n\tvar _dhx_msg_cfg = null;\n\n\tfunction callback(config, result) {\n\t\tvar usercall = config.callback;\n\t\tmodalBox.hide(config.box);\n\n\t\t_dhx_msg_cfg = config.box = null;\n\t\tif (usercall)\n\t\t\tusercall(result);\n\t}\n\n\tfunction modal_key(e) {\n\t\tif (_dhx_msg_cfg) {\n\t\t\te = e || event;\n\t\t\tvar code = e.which || event.keyCode;\n\t\t\tvar preventDefault = false;\n\n\t\t\tif (messageBox.keyboard) {\n\t\t\t\tif (code == 13 || code == 32) {\n\t\t\t\t\t// default behavior is to confirm/submit popup on space/enter\n\t\t\t\t\t// if browser focus is set on button element - do button click instead of default behavior\n\t\t\t\t\tvar target = e.target || e.srcElement;\n\t\t\t\t\tif (domHelpers.getClassName(target).indexOf(\"gantt_popup_button\") > -1 && target.click) {\n\t\t\t\t\t\ttarget.click();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(_dhx_msg_cfg, true);\n\t\t\t\t\t\tpreventDefault = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (code == 27) {\n\t\t\t\t\tcallback(_dhx_msg_cfg, false);\n\t\t\t\t\tpreventDefault = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (preventDefault) {\n\t\t\t\tif (e.preventDefault)\n\t\t\t\t\te.preventDefault();\n\t\t\t\treturn !(e.cancelBubble = true);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tgantt.event(document, \"keydown\", modal_key, true);\n\n\tfunction modality(mode) {\n\t\tif (!modality.cover) {\n\t\t\tmodality.cover = document.createElement(\"div\");\n\t\t\t//necessary for IE only\n\t\t\tmodality.cover.onkeydown = modal_key;\n\t\t\tmodality.cover.className = \"dhx_modal_cover\";\n\t\t\tdocument.body.appendChild(modality.cover);\n\t\t}\n\n\t\tmodality.cover.style.display = mode ? \"inline-block\" : \"none\";\n\t}\n\n\tfunction button(text, className, result) {\n\t\tvar buttonAriaAttrs = gantt._waiAria.messageButtonAttrString(text);\n\t\tvar name = className.toLowerCase().replace(/ /g, \"_\");\n\t\tvar button_css = \"gantt_\" + name + \"_button\" + \" dhtmlx_\" + name + \"_button\"; // dhtmlx_ok_button, dhtmlx_click_me_button\n\t\treturn \"<div \" + buttonAriaAttrs + \" class='gantt_popup_button dhtmlx_popup_button \" + button_css + \"' data-result='\" + result + \"' result='\" + result + \"' ><div>\" + text + \"</div></div>\";\n\t}\n\n\tfunction info(text) {\n\t\tif (!messageBox.area) {\n\t\t\tmessageBox.area = document.createElement(\"div\");\n\t\t\tmessageBox.area.className = \"gantt_message_area dhtmlx_message_area\";\n\t\t\tmessageBox.area.style[messageBox.position] = \"5px\";\n\t\t\tdocument.body.appendChild(messageBox.area);\n\t\t}\n\n\t\tmessageBox.hide(text.id);\n\t\tvar message = document.createElement(\"div\");\n\t\tmessage.innerHTML = \"<div>\" + text.text + \"</div>\";\n\t\tmessage.className = \"gantt-info dhtmlx-info gantt-\" + text.type + \" dhtmlx-\" + text.type;\n\t\tmessage.onclick = function () {\n\t\t\tmessageBox.hide(text.id);\n\t\t\ttext = null;\n\t\t};\n\n\t\tgantt._waiAria.messageInfoAttr(message);\n\n\t\tif (messageBox.position == \"bottom\" && messageBox.area.firstChild)\n\t\t\tmessageBox.area.insertBefore(message, messageBox.area.firstChild);\n\t\telse\n\t\t\tmessageBox.area.appendChild(message);\n\n\t\tif (text.expire > 0)\n\t\t\tmessageBox.timers[text.id] = window.setTimeout(function () {\n\t\t\t\tmessageBox.hide(text.id);\n\t\t\t}, text.expire);\n\n\t\tmessageBox.pull[text.id] = message;\n\t\tmessage = null;\n\n\t\treturn text.id;\n\t}\n\n\tfunction getFirstDefined() {\n\t\tvar values = [].slice.apply(arguments, [0]);\n\n\t\tfor (var i = 0; i < values.length; i++) {\n\t\t\tif (values[i]) {\n\t\t\t\treturn values[i];\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction _boxStructure(config, ok, cancel) {\n\t\tvar box = document.createElement(\"div\");\n\n\t\tvar contentId = utils.uid();\n\t\tgantt._waiAria.messageModalAttr(box, contentId);\n\n\n\t\tbox.className = \" gantt_modal_box dhtmlx_modal_box gantt-\" + config.type + \" dhtmlx-\" + config.type;\n\t\tbox.setAttribute(boxAttribute, 1);\n\n\t\tvar inner = '';\n\n\t\tif (config.width)\n\t\t\tbox.style.width = config.width;\n\t\tif (config.height)\n\t\t\tbox.style.height = config.height;\n\t\tif (config.title)\n\t\t\tinner += '<div class=\"gantt_popup_title dhtmlx_popup_title\">' + config.title + '</div>';\n\t\tinner += '<div class=\"gantt_popup_text dhtmlx_popup_text\" id=\"' + contentId + '\"><span>' + (config.content ? '' : config.text) + '</span></div><div  class=\"gantt_popup_controls dhtmlx_popup_controls\">';\n\t\tif (ok)\n\t\t\tinner += button(getFirstDefined(config.ok, gantt.locale.labels.message_ok, \"OK\"), \"ok\", true);\n\t\tif (cancel)\n\t\t\tinner += button(getFirstDefined(config.cancel, gantt.locale.labels.message_cancel, \"Cancel\"), \"cancel\", false);\n\n\t\tif (config.buttons) {\n\t\t\tfor (var i = 0; i < config.buttons.length; i++) {\n\t\t\t\tvar btn = config.buttons[i];\n\t\t\t\tif (typeof btn == \"object\") {\n\t\t\t\t\t// Support { label:\"Save\", css:\"main_button\", value:\"save\" }\n\t\t\t\t\tvar label = btn.label;\n\t\t\t\t\tvar css = btn.css || (\"gantt_\" + btn.label.toLowerCase() + \"_button dhtmlx_\" + btn.label.toLowerCase() + \"_button\");\n\t\t\t\t\tvar value = btn.value || i;\n\t\t\t\t\tinner += button(label, css, value);\n\t\t\t\t} else {\n\t\t\t\t\tinner += button(btn, btn, i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinner += '</div>';\n\t\tbox.innerHTML = inner;\n\n\t\tif (config.content) {\n\t\t\tvar node = config.content;\n\t\t\tif (typeof node == \"string\")\n\t\t\t\tnode = document.getElementById(node);\n\t\t\tif (node.style.display == 'none')\n\t\t\t\tnode.style.display = \"\";\n\t\t\tbox.childNodes[config.title ? 1 : 0].appendChild(node);\n\t\t}\n\n\t\tbox.onclick = function (e) {\n\t\t\te = e || event;\n\t\t\tvar source = e.target || e.srcElement;\n\t\t\tif (!source.className) source = source.parentNode;\n\t\t\tif (source.className.split(\" \")[0] == \"gantt_popup_button\") {\n\t\t\t\tvar result = source.getAttribute(\"data-result\");\n\t\t\t\tresult = (result == \"true\") || (result == \"false\" ? false : result);\n\t\t\t\tcallback(config, result);\n\t\t\t}\n\t\t};\n\t\tconfig.box = box;\n\t\tif (ok || cancel)\n\t\t\t_dhx_msg_cfg = config;\n\n\t\treturn box;\n\t}\n\n\tfunction _createBox(config, ok, cancel) {\n\t\tvar box = config.tagName ? config : _boxStructure(config, ok, cancel);\n\n\t\tif (!config.hidden)\n\t\t\tmodality(true);\n\t\tdocument.body.appendChild(box);\n\t\tvar x = Math.abs(Math.floor(((window.innerWidth || document.documentElement.offsetWidth) - box.offsetWidth) / 2));\n\t\tvar y = Math.abs(Math.floor(((window.innerHeight || document.documentElement.offsetHeight) - box.offsetHeight) / 2));\n\t\tif (config.position == \"top\")\n\t\t\tbox.style.top = \"-3px\";\n\t\telse\n\t\t\tbox.style.top = y + 'px';\n\t\tbox.style.left = x + 'px';\n\t\t//necessary for IE only\n\t\tbox.onkeydown = modal_key;\n\n\t\tmodalBox.focus(box);\n\n\t\tif (config.hidden)\n\t\t\tmodalBox.hide(box);\n\n\t\tgantt.callEvent(\"onMessagePopup\", [box]);\n\t\treturn box;\n\t}\n\n\tfunction alertPopup(config) {\n\t\treturn _createBox(config, true, false);\n\t}\n\n\tfunction confirmPopup(config) {\n\t\treturn _createBox(config, true, true);\n\t}\n\n\tfunction boxPopup(config) {\n\t\treturn _createBox(config);\n\t}\n\n\tfunction box_params(text, type, callback) {\n\t\tif (typeof text != \"object\") {\n\t\t\tif (typeof type == \"function\") {\n\t\t\t\tcallback = type;\n\t\t\t\ttype = \"\";\n\t\t\t}\n\t\t\ttext = {text: text, type: type, callback: callback};\n\t\t}\n\t\treturn text;\n\t}\n\n\tfunction params(text, type, expire, id) {\n\t\tif (typeof text != \"object\")\n\t\t\ttext = {text: text, type: type, expire: expire, id: id};\n\t\ttext.id = text.id || utils.uid();\n\t\ttext.expire = text.expire || messageBox.expire;\n\t\treturn text;\n\t}\n\n\tvar alertBox = function () {\n\t\tvar text = box_params.apply(this, arguments);\n\t\ttext.type = text.type || \"confirm\";\n\t\treturn alertPopup(text);\n\t};\n\tvar confirmBox = function () {\n\t\tvar text = box_params.apply(this, arguments);\n\t\ttext.type = text.type || \"alert\";\n\t\treturn confirmPopup(text);\n\t};\n\tvar modalBox = function () {\n\t\tvar text = box_params.apply(this, arguments);\n\t\ttext.type = text.type || \"alert\";\n\t\treturn boxPopup(text);\n\t};\n\tmodalBox.hide = function (node) {\n\t\twhile (node && node.getAttribute && !node.getAttribute(boxAttribute))\n\t\t\tnode = node.parentNode;\n\t\tif (node) {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t\tmodality(false);\n\n\t\t\tgantt.callEvent(\"onAfterMessagePopup\", [node]);\n\t\t}\n\t};\n\n\tmodalBox.focus = function (node) {\n\t\tsetTimeout(function () {\n\t\t\tvar focusable = domHelpers.getFocusableNodes(node);\n\t\t\tif (focusable.length) {\n\t\t\t\tif (focusable[0].focus) focusable[0].focus();\n\t\t\t}\n\t\t}, 1);\n\t};\n\n\tvar messageBox = function (text, type, expire, id) {\n\t\ttext = params.apply(this, arguments);\n\t\ttext.type = text.type || \"info\";\n\n\t\tvar subtype = text.type.split(\"-\")[0];\n\t\tswitch (subtype) {\n\t\t\tcase \"alert\":\n\t\t\t\treturn alertPopup(text);\n\t\t\tcase \"confirm\":\n\t\t\t\treturn confirmPopup(text);\n\t\t\tcase \"modalbox\":\n\t\t\t\treturn boxPopup(text);\n\t\t\tdefault:\n\t\t\t\treturn info(text);\n\t\t}\n\t};\n\n\tmessageBox.seed = (new Date()).valueOf();\n\tmessageBox.uid = utils.uid;\n\tmessageBox.expire = 4000;\n\tmessageBox.keyboard = true;\n\tmessageBox.position = \"top\";\n\tmessageBox.pull = {};\n\tmessageBox.timers = {};\n\n\tmessageBox.hideAll = function () {\n\t\tfor (var key in messageBox.pull)\n\t\t\tmessageBox.hide(key);\n\t};\n\tmessageBox.hide = function (id) {\n\t\tvar obj = messageBox.pull[id];\n\t\tif (obj && obj.parentNode) {\n\t\t\twindow.setTimeout(function () {\n\t\t\t\tobj.parentNode.removeChild(obj);\n\t\t\t\tobj = null;\n\t\t\t}, 2000);\n\t\t\tobj.className += \" hidden\";\n\n\t\t\tif (messageBox.timers[id])\n\t\t\t\twindow.clearTimeout(messageBox.timers[id]);\n\t\t\tdelete messageBox.pull[id];\n\t\t}\n\t};\n\n\tvar popups = [];\n\tgantt.attachEvent(\"onMessagePopup\", function(box){\n\t\tpopups.push(box);\n\t});\n\tgantt.attachEvent(\"onAfterMessagePopup\", function(box){\n\t\tfor(var i = 0; i < popups.length; i++){\n\t\t\tif(popups[i] === box){\n\t\t\t\tpopups.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t});\n\n\tgantt.attachEvent(\"onDestroy\", function(){\n\t\tif(modality.cover && modality.cover.parentNode){\n\t\t\tmodality.cover.parentNode.removeChild(modality.cover);\n\t\t}\n\n\t\tfor(var i = 0; i < popups.length; i++){\n\t\t\tif(popups[i].parentNode){\n\t\t\t\tpopups[i].parentNode.removeChild(popups[i]);\n\t\t\t}\n\t\t}\n\t\tpopups = null;\n\n\t\tif(messageBox.area && messageBox.area.parentNode){\n\t\t\tmessageBox.area.parentNode.removeChild(messageBox.area);\n\t\t}\n\t\tmessageBox = null;\n\t});\n\n\treturn {\n\t\talert: alertBox,\n\t\tconfirm: confirmBox,\n\t\tmessage: messageBox,\n\t\tmodalbox: modalBox\n\t};\n};","var utils = require(\"./utils\");\n\nfunction createScope(addEvent, removeEvent){\n\taddEvent = addEvent || utils.event;\n\tremoveEvent = removeEvent || utils.eventRemove;\n\n\tvar handlers = [];\n\n\treturn {\n\t\tattach: function(el, event, handler, capture){\n\t\t\thandlers.push({element: el, event:event, callback: handler, capture: capture});\n\t\t\taddEvent(el, event, handler, capture);\n\t\t},\n\t\tdetach: function(el, event, handler, capture){\n\t\t\tremoveEvent(el, event, handler, capture);\n\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\tvar handler = handlers[i];\n\t\t\t\tif(handler.element === el && handler.event === event && handler.callback === handler && handler.capture === capture){\n\t\t\t\t\thandlers.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdetachAll: function(){\n\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, handlers[i].capture);\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, undefined);\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, false);\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, true);\n\t\t\t}\n\t\t\thandlers = [];\n\t\t},\n\t\textend: function(){\n\t\t\treturn createScope(this.event, this.eventRemove);\n\t\t}\n\t};\n}\n\nmodule.exports = createScope;","var utils = require(\"../../utils/utils\");\n\nvar StateService = (function(){\n\tvar stateProviders = {};\n\n\tfunction getState(name){\n\t\tif(name){\n\t\t\treturn stateProviders[name].method();\n\t\t}else{\n\t\t\tvar res = {};\n\t\t\tfor(var i in stateProviders){\n\t\t\t\tif(!stateProviders[i].internal)\n\t\t\t\t\tutils.mixin(res, stateProviders[i].method(), true);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tfunction registerProvider(name, provider, internal){\n\t\tstateProviders[name] = { method: provider, internal: internal};\n\t}\n\n\tfunction unregisterProvider(name){\n\t\tdelete stateProviders[name];\n\t}\n\n\treturn {\n\t\tgetState: getState,\n\t\tregisterProvider: registerProvider,\n\t\tunregisterProvider: unregisterProvider\n\t};\n});\n\nmodule.exports = StateService;\n\n","module.exports = function(gantt) {\n\n\tvar regTemplates = {};\n\n\tfunction initTemplate(name, initial, template_name) {\n\t\ttemplate_name = template_name || name;\n\t\tvar config = gantt.config,\n\t\t\ttemplates = gantt.templates;\n\n\t\tif (gantt.config[name] && regTemplates[template_name] != config[name]) {\n\t\t\tif (!(initial && templates[template_name])) {\n\t\t\t\ttemplates[template_name] = gantt.date.date_to_str(config[name]);\n\t\t\t\tregTemplates[template_name] = config[name];\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction initTemplates() {\n\t\tvar labels = gantt.locale.labels;\n\t\tlabels.gantt_save_btn = labels.icon_save;\n\t\tlabels.gantt_cancel_btn = labels.icon_cancel;\n\t\tlabels.gantt_delete_btn = labels.icon_delete;\n\n\n\t\tvar date = gantt.date;\n\n\t\t//build configuration based templates\n\t\tvar d = date.date_to_str;\n\t\tvar c = gantt.config;\n\t\tinitTemplate(\"date_scale\", true, undefined, gantt.config, gantt.templates);\n\t\tinitTemplate(\"date_grid\", true, \"grid_date_format\", gantt.config, gantt.templates);\n\t\tinitTemplate(\"task_date\", true, undefined, gantt.config, gantt.templates);\n\n\t\tgantt.mixin(gantt.templates, {\n\t\t\txml_date: date.str_to_date(c.xml_date, c.server_utc),\n\t\t\txml_format: d(c.xml_date, c.server_utc),\n\t\t\tapi_date: date.str_to_date(c.api_date),\n\t\t\tprogress_text: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tgrid_header_class: function (column, config) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\ttask_text: function (start, end, task) {\n\t\t\t\treturn task.text;\n\t\t\t},\n\t\t\ttask_class: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tgrid_row_class: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\ttask_row_class: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\ttask_cell_class: function (item, date) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tscale_cell_class: function (date) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tscale_row_class: function (date) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\tgrid_indent: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_indent'></div>\";\n\t\t\t},\n\t\t\tgrid_folder: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_folder_\" + (item.$open ? \"open\" : \"closed\") + \"'></div>\";\n\t\t\t},\n\t\t\tgrid_file: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_file'></div>\";\n\t\t\t},\n\t\t\tgrid_open: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_\" + (item.$open ? \"close\" : \"open\") + \"'></div>\";\n\t\t\t},\n\t\t\tgrid_blank: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_blank'></div>\";\n\t\t\t},\n\t\t\tdate_grid: function (date, item) {\n\t\t\t\tif (item && gantt.isUnscheduledTask(item) && gantt.config.show_unscheduled) {\n\t\t\t\t\treturn gantt.templates.task_unscheduled_time(item);\n\t\t\t\t} else {\n\t\t\t\t\treturn gantt.templates.grid_date_format(date);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttask_time: function (start, end, ev) {\n\t\t\t\tif (gantt.isUnscheduledTask(ev) && gantt.config.show_unscheduled) {\n\t\t\t\t\treturn gantt.templates.task_unscheduled_time(ev);\n\t\t\t\t} else {\n\t\t\t\t\treturn gantt.templates.task_date(start) + \" - \" + gantt.templates.task_date(end);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttask_unscheduled_time: function (task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\ttime_picker: d(c.time_picker),\n\t\t\tlink_class: function (link) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tlink_description: function (link) {\n\t\t\t\tvar from = gantt.getTask(link.source),\n\t\t\t\t\tto = gantt.getTask(link.target);\n\n\t\t\t\treturn \"<b>\" + from.text + \"</b> &ndash;  <b>\" + to.text + \"</b>\";\n\t\t\t},\n\n\t\t\tdrag_link: function (from, from_start, to, to_start) {\n\t\t\t\tfrom = gantt.getTask(from);\n\t\t\t\tvar labels = gantt.locale.labels;\n\n\t\t\t\tvar text = \"<b>\" + from.text + \"</b> \" + (from_start ? labels.link_start : labels.link_end) + \"<br/>\";\n\t\t\t\tif (to) {\n\t\t\t\t\tto = gantt.getTask(to);\n\t\t\t\t\ttext += \"<b> \" + to.text + \"</b> \" + (to_start ? labels.link_start : labels.link_end) + \"<br/>\";\n\t\t\t\t}\n\t\t\t\treturn text;\n\t\t\t},\n\t\t\tdrag_link_class: function (from, from_start, to, to_start) {\n\t\t\t\tvar add = \"\";\n\n\t\t\t\tif (from && to) {\n\t\t\t\t\tvar allowed = gantt.isLinkAllowed(from, to, from_start, to_start);\n\t\t\t\t\tadd = \" \" + (allowed ? \"gantt_link_allow\" : \"gantt_link_deny\");\n\t\t\t\t}\n\n\t\t\t\treturn \"gantt_link_tooltip\" + add;\n\t\t\t},\n\n\t\t\t/* used for aria-labels of bar elements and for tooltip.js */\n\t\t\ttooltip_date_format: date.date_to_str(\"%Y-%m-%d\"),\n\t\t\ttooltip_text: function (start, end, event) {\n\t\t\t\treturn \"<b>Task:</b> \" + event.text + \"<br/><b>Start date:</b> \" + gantt.templates.tooltip_date_format(start) + \"<br/><b>End date:</b> \" + gantt.templates.tooltip_date_format(end);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tinitTemplates: initTemplates,\n\t\tinitTemplate: initTemplate\n\t};\n\n};","var eventable = require(\"../../utils/eventable\");\nvar utils = require(\"../../utils/utils\");\nvar timeout = require(\"../../utils/timeout\");\n\nmodule.exports = function(gantt){\n\n\tfunction copyDomEvent(e){\n\t\treturn {\n\t\t\ttarget: e.target || e.srcElement,\n\t\t\tpageX: e.pageX,\n\t\t\tpageY: e.pageY,\n\t\t\tclientX: e.clientX,\n\t\t\tclientY: e.clientY,\n\t\t\tmetaKey: e.metaKey,\n\t\t\tshiftKey: e.shiftKey,\n\t\t\tctrlKey: e.ctrlKey,\n\t\t\taltKey: e.altKey\n\t\t};\n\t}\n\n\tfunction DnD(obj, config) {\n\t\tthis._obj = obj;\n\t\tthis._settings = config || {};\n\t\teventable(this);\n\n\t\tvar inputMethods = this.getInputMethods();\n\n\t\tthis._drag_start_timer = null;\n\t\tgantt.attachEvent(\"onGanttScroll\", utils.bind(function (left, top) {\n\t\t\tthis.clearDragTimer();\n\t\t}, this));\n\n\t\tfor(var i = 0; i < inputMethods.length; i++){\n\t\t\t(utils.bind(function(input){\n\n\t\t\t\tgantt.event(obj, input.down, utils.bind(function (e) {\n\t\t\t\t\tif(!input.accessor(e)){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._settings.original_target = copyDomEvent(e);\n\n\t\t\t\t\tif (gantt.config.touch) {\n\t\t\t\t\t\tthis.clearDragTimer();\n\n\t\t\t\t\t\tthis._drag_start_timer = setTimeout(utils.bind(function () {\n\t\t\t\t\t\t\tthis.dragStart(obj, e, input);\n\t\t\t\t\t\t}, this), gantt.config.touch_drag);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.dragStart(obj, e, input);\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\n\t\t\t\tgantt.event(document.body, input.up, utils.bind(function (e) {\n\t\t\t\t\tif(!input.accessor(e)){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.clearDragTimer();\n\t\t\t\t}, this));\n\n\t\t\t}, this))(inputMethods[i]);\n\t\t}\n\t}\n\n\tDnD.prototype = {\n\t\ttraceDragEvents: function (domElement, inputMethod) {\n\t\t\tvar mousemove = utils.bind(function (e) {\n\t\t\t\treturn this.dragMove(domElement, e, inputMethod.accessor);\n\t\t\t}, this);\n\t\t\tutils.bind(function (e) {\n\t\t\t\treturn this.dragScroll(domElement, e);\n\t\t\t}, this);\n\n\t\t\tvar limited_mousemove = utils.bind(function (e) {\n\t\t\t\tif (e && e.preventDefault) //Cancel default action on DND\n\t\t\t\t\te.preventDefault();\n\t\t\t\t(e || event).cancelBubble = true;\n\t\t\t\tif (utils.defined(this.config.updates_per_second)) {\n\t\t\t\t\tif (!timeout(this, this.config.updates_per_second))\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn mousemove(e);\n\t\t\t}, this);\n\n\t\t\tvar mouseup = utils.bind(function (e) {\n\t\t\t\tgantt.eventRemove(document.body, inputMethod.move, limited_mousemove);\n\t\t\t\tgantt.eventRemove(document.body, inputMethod.up, mouseup);\n\t\t\t\treturn this.dragEnd(domElement);\n\t\t\t}, this);\n\n\t\t\tgantt.event(document.body, inputMethod.move, limited_mousemove);\n\t\t\tgantt.event(document.body, inputMethod.up, mouseup);\n\t\t},\n\t\tcheckPositionChange: function (pos) {\n\t\t\tvar diff_x = pos.x - this.config.pos.x;\n\t\t\tvar diff_y = pos.y - this.config.pos.y;\n\t\t\tvar distance = Math.sqrt(Math.pow(Math.abs(diff_x), 2) + Math.pow(Math.abs(diff_y), 2));\n\n\t\t\tif (distance > this.config.sensitivity) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tinitDnDMarker: function () {\n\t\t\t// create dnd placeholder and put it in dom\n\t\t\tvar marker = this.config.marker = document.createElement(\"div\");\n\t\t\tmarker.className = \"gantt_drag_marker\";\n\t\t\tmarker.innerHTML = \"Dragging object\";\n\t\t\tdocument.body.appendChild(marker);\n\t\t},\n\t\tbackupEventTarget: function (domEvent, getEvent) {\n\t\t\tif (!gantt.config.touch) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// keep original event target in DOM in order to keep dnd on touchmove event\n\t\t\tvar e = getEvent(domEvent);\n\n\t\t\tvar el = e.target || e.srcElement;\n\t\t\tvar copy = el.cloneNode(true);\n\t\t\t//this.config.target.target = copy;\n\t\t\tthis.config.original_target = copyDomEvent(e);\n\t\t\tthis.config.original_target.target = copy;\n\t\t\tthis.config.backup_element = el;\n\t\t\tel.parentNode.appendChild(copy);\n\n\t\t\tel.style.display = \"none\";\n\t\t\tdocument.body.appendChild(el);\n\t\t},\n\t\tgetInputMethods: function () {\n\t\t\t// bind actions to browser events\n\t\t\tvar inputMethods = [];\n\n\t\t\tinputMethods.push({\n\t\t\t\t\"move\": \"mousemove\",\n\t\t\t\t\"down\": \"mousedown\",\n\t\t\t\t\"up\": \"mouseup\",\n\t\t\t\t\"accessor\": function (e) {\n\t\t\t\t\treturn e;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (gantt.config.touch) {\n\n\t\t\t\tvar touchEventsSupported = true;\n\t\t\t\ttry{\n\t\t\t\t\tdocument.createEvent(\"TouchEvent\");\n\t\t\t\t}catch (e){\n\t\t\t\t\ttouchEventsSupported = false;\n\t\t\t\t}\n\n\t\t\t\tif(touchEventsSupported){\n\t\t\t\t\tinputMethods.push({\n\t\t\t\t\t\t\"move\": \"touchmove\",\n\t\t\t\t\t\t\"down\": \"touchstart\",\n\t\t\t\t\t\t\"up\": \"touchend\",\n\t\t\t\t\t\t\"accessor\": function (ev) {\n\t\t\t\t\t\t\tif (ev.touches && ev.touches.length > 1) return null;\n\t\t\t\t\t\t\tif (ev.touches[0])\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttarget: document.elementFromPoint(ev.touches[0].clientX, ev.touches[0].clientY),\n\t\t\t\t\t\t\t\t\tpageX: ev.touches[0].pageX,\n\t\t\t\t\t\t\t\t\tpageY: ev.touches[0].pageY,\n\t\t\t\t\t\t\t\t\tclientX: ev.touches[0].clientX,\n\t\t\t\t\t\t\t\t\tclientY: ev.touches[0].clientY\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn ev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}else if(window.navigator.pointerEnabled){\n\t\t\t\t\tinputMethods.push({\n\t\t\t\t\t\t\"move\": \"pointermove\",\n\t\t\t\t\t\t\"down\": \"pointerdown\",\n\t\t\t\t\t\t\"up\": \"pointerup\",\n\t\t\t\t\t\t\"accessor\": function (ev) {\n\t\t\t\t\t\t\tif (ev.pointerType == \"mouse\") return null;\n\t\t\t\t\t\t\treturn ev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t}else if (window.navigator.msPointerEnabled){\n\t\t\t\t\tinputMethods.push({\n\t\t\t\t\t\t\"move\": \"MSPointerMove\",\n\t\t\t\t\t\t\"down\": \"MSPointerDown\",\n\t\t\t\t\t\t\"up\": \"MSPointerUp\",\n\t\t\t\t\t\t\"accessor\": function (ev) {\n\t\t\t\t\t\t\tif (ev.pointerType == ev.MSPOINTER_TYPE_MOUSE) return null;\n\t\t\t\t\t\t\treturn ev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn inputMethods;\n\t\t},\n\t\tclearDragTimer: function () {\n\t\t\tif (this._drag_start_timer) {\n\t\t\t\tclearTimeout(this._drag_start_timer);\n\t\t\t\tthis._drag_start_timer = null;\n\t\t\t}\n\t\t},\n\t\tdragStart: function (obj, e, inputMethod) {\n\t\t\tif (this.config && this.config.started) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.config = {\n\t\t\t\tobj: obj,\n\t\t\t\tmarker: null,\n\t\t\t\tstarted: false,\n\t\t\t\tpos: this.getPosition(e),\n\t\t\t\tsensitivity: 4\n\t\t\t};\n\t\t\tif (this._settings)\n\t\t\t\tutils.mixin(this.config, this._settings, true);\n\n\n\t\t\tthis.traceDragEvents(obj, inputMethod);\n\n\t\t\tgantt._prevent_touch_scroll = true;\n\t\t\tdocument.body.className += \" gantt_noselect\";\n\n\t\t\tif (gantt.config.touch) {\n\t\t\t\tthis.dragMove(obj, e, inputMethod.accessor);\n\t\t\t}\n\n\t\t},\n\t\tdragMove: function (obj, e, getEvent) {\n\t\t\tvar source = getEvent(e);\n\t\t\tif (!source) return;\n\n\t\t\tif (!this.config.marker && !this.config.started) {\n\t\t\t\tvar pos = this.getPosition(source);\n\n\t\t\t\tif (gantt.config.touch || this.checkPositionChange(pos)) {\n\t\t\t\t\t// real drag starts here,\n\t\t\t\t\t// when user moves mouse at first time after onmousedown\n\t\t\t\t\tthis.config.started = true;\n\t\t\t\t\tthis.config.ignore = false;\n\t\t\t\t\tif (this.callEvent(\"onBeforeDragStart\", [obj, this.config.original_target]) === false) {\n\t\t\t\t\t\tthis.config.ignore = true;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.backupEventTarget(e, getEvent);\n\t\t\t\t\tthis.initDnDMarker();\n\t\t\t\t\tgantt._touch_feedback();\n\t\t\t\t\tthis.callEvent(\"onAfterDragStart\", [obj, this.config.original_target]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.config.ignore = true;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif (!this.config.ignore) {\n\t\t\t\tsource.pos = this.getPosition(source);\n\t\t\t\tthis.config.marker.style.left = source.pos.x + \"px\";\n\t\t\t\tthis.config.marker.style.top = source.pos.y + \"px\";\n\t\t\t\tthis.callEvent(\"onDragMove\", [obj, source]);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\tdragEnd: function (obj) {\n\t\t\tvar target = this.config.backup_element;\n\t\t\tif (target && target.parentNode) {\n\t\t\t\ttarget.parentNode.removeChild(target);\n\t\t\t}\n\t\t\tgantt._prevent_touch_scroll = false;\n\t\t\tif (this.config.marker) {\n\t\t\t\tthis.config.marker.parentNode.removeChild(this.config.marker);\n\t\t\t\tthis.config.marker = null;\n\n\t\t\t\tthis.callEvent(\"onDragEnd\", []);\n\t\t\t}\n\t\t\tthis.config.started = false;\n\t\t\tdocument.body.className = document.body.className.replace(\" gantt_noselect\", \"\");\n\t\t},\n\n\t\tgetPosition: function (e) {\n\t\t\tvar x = 0, y = 0;\n\t\t\te = e || window.event;\n\t\t\tif (e.pageX || e.pageY) {\n\t\t\t\tx = e.pageX;\n\t\t\t\ty = e.pageY;\n\t\t\t} else if (e.clientX || e.clientY) {\n\t\t\t\tx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t\t\ty = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t\t}\n\t\t\treturn {x: x, y: y};\n\t\t}\n\t};\n\n\treturn DnD;\n};\n","/*\n %d - the day as a number with a leading zero ( 01 to 31 );\n %j - the day as a number without a leading zero ( 1 to 31 );\n %D - the day as an abbreviation ( Sun to Sat );\n %l - the day as a full name ( Sunday to Saturday );\n %W - the ISO-8601 week number of the year. Weeks start on Monday; 1)\n %m - the month as a number without a leading zero ( 1 to 12 );\n %n - the month as a number with a leading zero ( 01 to 12);\n %M - the month as an abbreviation ( Jan to Dec );\n %F - the month as a full name ( January to December );\n %y - the year as a two-digit number ( 00 to 99 );\n %Y - the year as a four-digit number ( 1900–9999 );\n %h - the hour based on the 12-hour clock ( 00 to 11 );\n %H - the hour based on the 24-hour clock ( 00 to 23 );\n %i - the minute as a number with a leading zero ( 00 to 59 );\n %s - the second as a number without a leading zero ( 00 to 59 ); 2)\n %a - displays am (for times from midnight until noon) and pm (for times from noon until midnight);\n %A - displays AM (for times from midnight until noon) and PM (for times from noon until midnight).\n*/\n\nmodule.exports = function(gantt) {\n\tvar dateHelper = {\n\t\tinit: function () {\n\t\t\tvar locale = gantt.locale;\n\n\t\t\tvar s = locale.date.month_short;\n\t\t\tvar t = locale.date.month_short_hash = {};\n\t\t\tfor (var i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]] = i;\n\n\t\t\tvar s = locale.date.month_full;\n\t\t\tvar t = locale.date.month_full_hash = {};\n\t\t\tfor (var i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]] = i;\n\t\t},\n\t\tdate_part: function (date) {\n\t\t\tvar old = new Date(date);\n\t\t\tdate.setHours(0);\n\t\t\tthis.hour_start(date);\n\t\t\tif (date.getHours() && //shift to yesterday on dst\n\t\t\t\t(date.getDate() < old.getDate() || date.getMonth() < old.getMonth() || date.getFullYear() < old.getFullYear()))\n\t\t\t\tdate.setTime(date.getTime() + 60 * 60 * 1000 * (24 - date.getHours()));\n\t\t\treturn date;\n\t\t},\n\t\ttime_part: function (date) {\n\t\t\treturn (date.valueOf() / 1000 - date.getTimezoneOffset() * 60) % 86400;\n\t\t},\n\t\tweek_start: function (date) {\n\t\t\tvar shift = date.getDay();\n\t\t\tif (gantt.config.start_on_monday) {\n\t\t\t\tif (shift === 0) shift = 6;\n\t\t\t\telse shift--;\n\t\t\t}\n\t\t\treturn this.date_part(this.add(date, -1 * shift, \"day\"));\n\t\t},\n\t\tmonth_start: function (date) {\n\t\t\tdate.setDate(1);\n\t\t\treturn this.date_part(date);\n\t\t},\n\t\tquarter_start: function (date) {\n\t\t\tthis.month_start(date);\n\t\t\tvar m = date.getMonth(),\n\t\t\t\tres_month;\n\n\t\t\tif (m >= 9) {\n\t\t\t\tres_month = 9;\n\t\t\t} else if (m >= 6) {\n\t\t\t\tres_month = 6;\n\t\t\t} else if (m >= 3) {\n\t\t\t\tres_month = 3;\n\t\t\t} else {\n\t\t\t\tres_month = 0;\n\t\t\t}\n\n\t\t\tdate.setMonth(res_month);\n\t\t\treturn date;\n\t\t},\n\t\tyear_start: function (date) {\n\t\t\tdate.setMonth(0);\n\t\t\treturn this.month_start(date);\n\t\t},\n\t\tday_start: function (date) {\n\t\t\treturn this.date_part(date);\n\t\t},\n\t\thour_start: function (date) {\n\t\t\tif (date.getMinutes())\n\t\t\t\tdate.setMinutes(0);\n\t\t\tthis.minute_start(date);\n\n\t\t\treturn date;\n\t\t},\n\t\tminute_start: function (date) {\n\t\t\tif (date.getSeconds())\n\t\t\t\tdate.setSeconds(0);\n\t\t\tif (date.getMilliseconds())\n\t\t\t\tdate.setMilliseconds(0);\n\t\t\treturn date;\n\t\t},\n\t\t_add_days: function (date, inc) {\n\t\t\tvar ndate = new Date(date.valueOf());\n\n\t\t\tndate.setDate(ndate.getDate() + inc);\n\t\t\tif (inc >= 0 && (!date.getHours() && ndate.getHours()) &&//shift to yesterday on dst\n\t\t\t\t(ndate.getDate() <= date.getDate() || ndate.getMonth() < date.getMonth() || ndate.getFullYear() < date.getFullYear()))\n\t\t\t\tndate.setTime(ndate.getTime() + 60 * 60 * 1000 * (24 - ndate.getHours()));\n\t\t\treturn ndate;\n\t\t},\n\n\t\tadd: function (date, inc, mode) {\n\t\t\t/*jsl:ignore*/\n\t\t\tvar ndate = new Date(date.valueOf());\n\t\t\tswitch (mode) {\n\t\t\t\tcase \"day\":\n\t\t\t\t\tndate = this._add_days(ndate, inc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"week\":\n\t\t\t\t\tndate = this._add_days(ndate, inc * 7);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"month\":\n\t\t\t\t\tndate.setMonth(ndate.getMonth() + inc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"year\":\n\t\t\t\t\tndate.setYear(ndate.getFullYear() + inc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hour\":\n\t\t\t\t\t/*\n\t\t\t\t\t\tadding hours/minutes via setHour(getHour() + inc) gives weird result when\n\t\t\t\t\t\tadding one hour to the time before switch to a Daylight Saving time\n\n\t\t\t\t\t\texample: //Sun Mar 30 2014 01:00:00 GMT+0100 (W. Europe Standard Time)\n\t\t\t\t\t\tnew Date(2014, 02, 30, 1).setHours(2)\n\t\t\t\t\t\t>>Sun Mar 30 2014 01:00:00 GMT+0100 (W. Europe Standard Time)\n\n\t\t\t\t\t\tsetTime seems working as expected\n\t\t\t\t\t */\n\t\t\t\t\tndate.setTime(ndate.getTime() + inc * 60 * 60 * 1000);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"minute\":\n\n\t\t\t\t\tndate.setTime(ndate.getTime() + inc * 60 * 1000);\n\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn this[\"add_\" + mode](date, inc, mode);\n\t\t\t}\n\t\t\treturn ndate;\n\t\t\t/*jsl:end*/\n\t\t},\n\t\tadd_quarter: function (date, inc) {\n\t\t\treturn this.add(date, inc * 3, \"month\");\n\t\t},\n\n\t\tto_fixed: function (num) {\n\t\t\tif (num < 10) return \"0\" + num;\n\t\t\treturn num;\n\t\t},\n\t\tcopy: function (date) {\n\t\t\treturn new Date(date.valueOf());\n\t\t},\n\t\tdate_to_str: function (format, utc) {\n\t\t\tformat = format.replace(/%[a-zA-Z]/g, function (a) {\n\t\t\t\tswitch (a) {\n\t\t\t\t\tcase \"%d\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getDate())+\\\"\";\n\t\t\t\t\tcase \"%m\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed((date.getMonth()+1))+\\\"\";\n\t\t\t\t\tcase \"%j\":\n\t\t\t\t\t\treturn \"\\\"+date.getDate()+\\\"\";\n\t\t\t\t\tcase \"%n\":\n\t\t\t\t\t\treturn \"\\\"+(date.getMonth()+1)+\\\"\";\n\t\t\t\t\tcase \"%y\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getFullYear()%100)+\\\"\";\n\t\t\t\t\tcase \"%Y\":\n\t\t\t\t\t\treturn \"\\\"+date.getFullYear()+\\\"\";\n\t\t\t\t\tcase \"%D\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.day_short[date.getDay()]+\\\"\";\n\t\t\t\t\tcase \"%l\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.day_full[date.getDay()]+\\\"\";\n\t\t\t\t\tcase \"%M\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.month_short[date.getMonth()]+\\\"\";\n\t\t\t\t\tcase \"%F\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.month_full[date.getMonth()]+\\\"\";\n\t\t\t\t\tcase \"%h\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\t\tcase \"%g\":\n\t\t\t\t\t\treturn \"\\\"+((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\t\tcase \"%G\":\n\t\t\t\t\t\treturn \"\\\"+date.getHours()+\\\"\";\n\t\t\t\t\tcase \"%H\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getHours())+\\\"\";\n\t\t\t\t\tcase \"%i\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getMinutes())+\\\"\";\n\t\t\t\t\tcase \"%a\":\n\t\t\t\t\t\treturn \"\\\"+(date.getHours()>11?\\\"pm\\\":\\\"am\\\")+\\\"\";\n\t\t\t\t\tcase \"%A\":\n\t\t\t\t\t\treturn \"\\\"+(date.getHours()>11?\\\"PM\\\":\\\"AM\\\")+\\\"\";\n\t\t\t\t\tcase \"%s\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getSeconds())+\\\"\";\n\t\t\t\t\tcase \"%W\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(getISOWeek(date))+\\\"\";\n\t\t\t\t\tcase \"%w\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(getWeek(date))+\\\"\";\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (utc) format = format.replace(/date\\.get/g, \"date.getUTC\");\n\t\t\tvar dateToStr = new Function(\"date\", \"to_fixed\", \"locale\", \"getISOWeek\", \"getWeek\", \"return \\\"\" + format + \"\\\";\");\n\n\t\t\treturn function (date) {\n\t\t\t\treturn dateToStr(date, dateHelper.to_fixed, gantt.locale, dateHelper.getISOWeek, dateHelper.getWeek);\n\t\t\t};\n\t\t},\n\t\tstr_to_date: function (format, utc) {\n\t\t\tvar splt = \"var temp=date.match(/[a-zA-Z]+|[0-9]+/g);\";\n\t\t\tvar mask = format.match(/%[a-zA-Z]/g);\n\t\t\tfor (var i = 0; i < mask.length; i++) {\n\t\t\t\tswitch (mask[i]) {\n\t\t\t\t\tcase \"%j\":\n\t\t\t\t\tcase \"%d\":\n\t\t\t\t\t\tsplt += \"set[2]=temp[\" + i + \"]||1;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%n\":\n\t\t\t\t\tcase \"%m\":\n\t\t\t\t\t\tsplt += \"set[1]=(temp[\" + i + \"]||1)-1;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%y\":\n\t\t\t\t\t\tsplt += \"set[0]=temp[\" + i + \"]*1+(temp[\" + i + \"]>50?1900:2000);\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%g\":\n\t\t\t\t\tcase \"%G\":\n\t\t\t\t\tcase \"%h\":\n\t\t\t\t\tcase \"%H\":\n\t\t\t\t\t\tsplt += \"set[3]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%i\":\n\t\t\t\t\t\tsplt += \"set[4]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%Y\":\n\t\t\t\t\t\tsplt += \"set[0]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%a\":\n\t\t\t\t\tcase \"%A\":\n\t\t\t\t\t\tsplt += \"set[3]=set[3]%12+((temp[\" + i + \"]||'').toLowerCase()=='am'?0:12);\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%s\":\n\t\t\t\t\t\tsplt += \"set[5]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%M\":\n\t\t\t\t\t\tsplt += \"set[1]=locale.date.month_short_hash[temp[\" + i + \"]]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%F\":\n\t\t\t\t\t\tsplt += \"set[1]=locale.date.month_full_hash[temp[\" + i + \"]]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar code = \"set[0],set[1],set[2],set[3],set[4],set[5]\";\n\t\t\tif (utc) code = \" Date.UTC(\" + code + \")\";\n\t\t\tvar strToDate = new Function(\"date\", \"locale\", \"var set=[0,0,1,0,0,0]; \" + splt + \" return new Date(\" + code + \");\");\n\n\t\t\treturn function (dateString) {\n\t\t\t\treturn strToDate(dateString, gantt.locale);\n\t\t\t};\n\t\t},\n\t\tgetISOWeek: function (ndate) {\n\t\t\treturn gantt.date._getWeekNumber(ndate, true);\n\t\t},\n\t\t_getWeekNumber: function(ndate, isoWeek){\n\t\t\tif (!ndate) return false;\n\t\t\tvar nday = ndate.getDay();\n\t\t\tif(isoWeek){\n\t\t\t\tif (nday === 0) {\n\t\t\t\t\tnday = 7;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar first_thursday = new Date(ndate.valueOf());\n\t\t\tfirst_thursday.setDate(ndate.getDate() + (4 - nday));\n\t\t\tvar year_number = first_thursday.getFullYear(); // year of the first Thursday\n\t\t\tvar ordinal_date = Math.round((first_thursday.getTime() - new Date(year_number, 0, 1).getTime()) / 86400000); //ordinal date of the first Thursday - 1 (so not really ordinal date)\n\t\t\tvar week_number = 1 + Math.floor(ordinal_date / 7);\n\t\t\treturn week_number;\n\t\t},\n\n\t\tgetWeek: function(ndate){\n\t\t\treturn gantt.date._getWeekNumber(ndate, gantt.config.start_on_monday);\n\t\t},\n\t\tgetUTCISOWeek: function (ndate) {\n\t\t\treturn gantt.date.getISOWeek(ndate);\n\t\t},\n\t\tconvert_to_utc: function (date) {\n\t\t\treturn new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n\t\t},\n\t\tparseDate: function (date, format) {\n\t\t\t// raw date may be of type string, number (timestamp) or something else\n\t\t\t// do not check for instanceof Date explicitly, since we may swap native date with different date implementation at some point\n\t\t\tif (date && !date.getFullYear) {\n\t\t\t\tif (gantt.defined(format)) {\n\t\t\t\t\tif (typeof(format) == \"string\")\n\t\t\t\t\t\tformat = gantt.defined(gantt.templates[format]) ? gantt.templates[format] : gantt.date.str_to_date(format);\n\t\t\t\t\telse\n\t\t\t\t\t\tformat = gantt.templates.xml_date;\n\t\t\t\t}\n\t\t\t\tif (date)\n\t\t\t\t\tdate = format(date);\n\t\t\t\telse\n\t\t\t\t\tdate = null;\n\t\t\t}\n\t\t\treturn date;\n\t\t}\n\t};\n\treturn dateHelper;\n};","var env = require(\"../../utils/env\");\n\nmodule.exports = function(gantt){\n\treturn {\n\n\t\t// if false - dhxr param will added to prevent caching on client side (default),\n\t\t// if true - do not add extra params\n\t\tcache: true,\n\n\t\t// default method for load/loadStruct, post/get allowed\n\t\t// get - since 4.1.1, this should fix 412 error for macos safari\n\t\tmethod: \"get\",\n\n\t\tparse: function(data) {\n\t\t\tif (typeof data !== \"string\") return data;\n\n\t\t\tvar obj;\n\t\t\tdata = data.replace(/^[\\s]+/,\"\");\n\t\t\tif (window.DOMParser && !env.isIE) { // ff,ie9\n\t\t\t\tobj = (new window.DOMParser()).parseFromString(data, \"text/xml\");\n\t\t\t} else if (window.ActiveXObject !== window.undefined) {\n\t\t\t\tobj = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n\t\t\t\tobj.async = \"false\";\n\t\t\t\tobj.loadXML(data);\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\t\txmltop: function(tagname, xhr, obj) {\n\t\t\tif (typeof xhr.status == \"undefined\" || xhr.status < 400) {\n\t\t\t\tvar xml = (!xhr.responseXML) ? this.parse(xhr.responseText || xhr) : (xhr.responseXML || xhr);\n\t\t\t\tif (xml && xml.documentElement !== null && !xml.getElementsByTagName(\"parsererror\").length) {\n\t\t\t\t\treturn xml.getElementsByTagName(tagname)[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (obj !== -1) gantt.callEvent(\"onLoadXMLError\",[\"Incorrect XML\", arguments[1], obj]);\n\t\t\treturn document.createElement(\"DIV\");\n\t\t},\n\t\txpath: function(xpathExp, docObj) {\n\t\t\tif (!docObj.nodeName) docObj = docObj.responseXML || docObj;\n\t\t\tif (env.isIE) {\n\t\t\t\treturn docObj.selectNodes(xpathExp)||[];\n\t\t\t} else {\n\t\t\t\tvar rows = [];\n\t\t\t\tvar first;\n\t\t\t\tvar col = (docObj.ownerDocument||docObj).evaluate(xpathExp, docObj, null, XPathResult.ANY_TYPE, null);\n\n\t\t\t\twhile (true){\n\t\t\t\t\tfirst = col.iterateNext();\n\t\t\t\t\tif(first){\n\t\t\t\t\t\trows.push(first);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn rows;\n\t\t\t}\n\t\t},\n\t\tquery: function(config) {\n\t\t\tthis._call(\n\t\t\t\t(config.method || \"GET\"),\n\t\t\t\tconfig.url,\n\t\t\t\tconfig.data || \"\",\n\t\t\t\t(config.async || true),\n\t\t\t\tconfig.callback,\n\t\t\t\tnull,\n\t\t\t\tconfig.headers\n\t\t\t);\n\t\t},\n\t\tget: function(url, onLoad) {\n\t\t\tthis._call(\"GET\", url, null, true, onLoad);\n\t\t},\n\t\tgetSync: function(url) {\n\t\t\treturn this._call(\"GET\", url, null, false);\n\t\t},\n\t\tput: function(url, postData, onLoad) {\n\t\t\tthis._call(\"PUT\", url, postData, true, onLoad);\n\t\t},\n\t\tdel: function(url, postData, onLoad) {\n\t\t\tthis._call(\"DELETE\", url, postData, true, onLoad);\n\t\t},\n\t\tpost: function(url, postData, onLoad) {\n\t\t\tif (arguments.length == 1) {\n\t\t\t\tpostData = \"\";\n\t\t\t} else if (arguments.length == 2 && (typeof(postData) == \"function\" || typeof(window[postData]) == \"function\")) {\n\t\t\t\tonLoad = postData;\n\t\t\t\tpostData = \"\";\n\t\t\t} else {\n\t\t\t\tpostData = String(postData);\n\t\t\t}\n\t\t\tthis._call(\"POST\", url, postData, true, onLoad);\n\t\t},\n\t\tpostSync: function(url, postData) {\n\t\t\tpostData = (postData === null ? \"\" : String(postData));\n\t\t\treturn this._call(\"POST\", url, postData, false);\n\t\t},\n\t\tgetLong: function(url, onLoad) {\n\t\t\tthis._call(\"GET\", url, null, true, onLoad, {url:url});\n\t\t},\n\t\tpostLong: function(url, postData, onLoad) {\n\t\t\tif (arguments.length == 2 && (typeof(postData) == \"function\" || typeof(window[postData]))) {\n\t\t\t\tonLoad = postData;\n\t\t\t\tpostData = \"\";\n\t\t\t}\n\t\t\tthis._call(\"POST\", url, postData, true, onLoad, {url:url, postData:postData});\n\t\t},\n\t\t_call: function(method, url, postData, async, onLoad, longParams, headers) {\n\n\t\t\tvar t = (window.XMLHttpRequest && !env.isIE ? new XMLHttpRequest() : new window.ActiveXObject(\"Microsoft.XMLHTTP\"));\n\t\t\tvar isQt = (navigator.userAgent.match(/AppleWebKit/) !== null && navigator.userAgent.match(/Qt/) !== null && navigator.userAgent.match(/Safari/) !== null);\n\n\t\t\tif (!!async) {\n\t\t\t\tt.onreadystatechange = function() {\n\t\t\t\t\tif ((t.readyState == 4) || (isQt && t.readyState == 3)) { // what for long response and status 404?\n\t\t\t\t\t\tif (t.status != 200 || t.responseText === \"\")\n\t\t\t\t\t\t\tif (!gantt.callEvent(\"onAjaxError\", [t])) return;\n\n\t\t\t\t\t\twindow.setTimeout(function(){\n\t\t\t\t\t\t\tif (typeof(onLoad) == \"function\") {\n\t\t\t\t\t\t\t\tonLoad.apply(window, [{xmlDoc:t, filePath:url}]); // dhtmlx-compat, response.xmlDoc.responseXML/responseText\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (longParams) {\n\t\t\t\t\t\t\t\tif (typeof(longParams.postData) != \"undefined\") {\n\t\t\t\t\t\t\t\t\tthis.postLong(longParams.url, longParams.postData, onLoad);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.getLong(longParams.url, onLoad);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonLoad = null;\n\t\t\t\t\t\t\tt = null;\n\t\t\t\t\t\t},1);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (method == \"GET\" && !this.cache) {\n\t\t\t\turl += (url.indexOf(\"?\")>=0?\"&\":\"?\")+\"dhxr\"+new Date().getTime()+\"=1\";\n\t\t\t}\n\n\t\t\tt.open(method, url, async);\n\n\t\t\tif (headers){\n\t\t\t\tfor (var key in headers)\n\t\t\t\t\tt.setRequestHeader(key, headers[key]);\n\t\t\t} else if (method.toUpperCase() == \"POST\" || method == \"PUT\" || method == \"DELETE\") {\n\t\t\t\tt.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\t\t} else if (method == \"GET\") {\n\t\t\t\tpostData = null;\n\t\t\t}\n\n\t\t\tt.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t\t\tt.send(postData);\n\n\t\t\tif (!async) return {xmlDoc:t, filePath:url}; // dhtmlx-compat, response.xmlDoc.responseXML/responseText\n\n\t\t},\n\t\turlSeparator: function(str){\n\t\t\tif (str.indexOf(\"?\") != -1)\n\t\t\t\treturn \"&\";\n\t\t\telse\n\t\t\t\treturn \"?\";\n\t\t}\n\t};\n};\n","module.exports = function() {\n\treturn {\n\t\tlayout: {\n\t\t\tcss: \"gantt_container\",\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tcols: [\n\t\t\t\t\t\t{view: \"grid\", scrollX: \"scrollHor\", scrollY: \"scrollVer\"},\n\t\t\t\t\t\t{resizer: true, width: 1},\n\t\t\t\t\t\t{view: \"timeline\", scrollX: \"scrollHor\", scrollY: \"scrollVer\"},\n\t\t\t\t\t\t{view: \"scrollbar\", id: \"scrollVer\"}\n\t\t\t\t\t]\n\n\t\t\t\t},\n\t\t\t\t{view: \"scrollbar\", id: \"scrollHor\", height: 20}\n\t\t\t]\n\t\t},\n\t\tlinks: {\n\t\t\t\"finish_to_start\": \"0\",\n\t\t\t\"start_to_start\": \"1\",\n\t\t\t\"finish_to_finish\": \"2\",\n\t\t\t\"start_to_finish\": \"3\"\n\t\t},\n\t\ttypes: {\n\t\t\t'task': 'task',\n\t\t\t'project': 'project',\n\t\t\t'milestone': 'milestone'\n\t\t},\n\t\tauto_types: false,\n\t\tduration_unit: \"day\",\n\t\twork_time: false,\n\t\tcorrect_work_time: false,\n\t\tskip_off_time: false,\n\n\t\tcascade_delete: true,\n\n\t\tautosize: false,\n\t\tautosize_min_width: 0,\n\t\tautoscroll: true,\n\t\tautoscroll_speed: 30,\n\n\t\tshow_links: true,\n\t\tshow_task_cells: true,\n\t\t// replace backgroung of the task area with a canvas img\n\t\tstatic_background: false,\n\t\tbranch_loading: false,\n\t\tbranch_loading_property: \"$has_child\",\n\t\tshow_loading: false,\n\t\tshow_chart: true,\n\t\tshow_grid: true,\n\t\tmin_duration: 60 * 60 * 1000,\n\t\txml_date: \"%d-%m-%Y %H:%i\",\n\t\tapi_date: \"%d-%m-%Y %H:%i\",\n\t\tstart_on_monday: true,\n\t\tserver_utc: false,\n\t\tshow_progress: true,\n\t\tfit_tasks: false,\n\t\tselect_task: true,\n\t\tscroll_on_click: true,\n\t\tpreserve_scroll: true,\n\t\treadonly: false,\n\n\t\t/*grid */\n\t\tdate_grid: \"%Y-%m-%d\",\n\n\t\tdrag_links: true,\n\t\tdrag_progress: true,\n\t\tdrag_resize: true,\n\t\tdrag_project: false,\n\t\tdrag_move: true,\n\t\tdrag_mode: {\n\t\t\t\"resize\": \"resize\",\n\t\t\t\"progress\": \"progress\",\n\t\t\t\"move\": \"move\",\n\t\t\t\"ignore\": \"ignore\"\n\t\t},\n\t\tround_dnd_dates: true,\n\t\tlink_wrapper_width: 20,\n\t\troot_id: 0,\n\n\t\tautofit: false, // grid column automatic fit grid_width config\n\t\tcolumns: [\n\t\t\t{name: \"text\", tree: true, width: '*', resize: true},\n\t\t\t{name: \"start_date\", align: \"center\", resize: true},\n\t\t\t{name: \"duration\", align: \"center\"},\n\t\t\t{name: \"add\", width: 44}\n\t\t],\n\n\t\t/*scale*/\n\t\tstep: 1,\n\t\tscale_unit: \"day\",\n\t\tscale_offset_minimal: true,\n\t\tsubscales: [],\n\n\t\tinherit_scale_class: false,\n\n\t\ttime_step: 60,\n\t\tduration_step: 1,\n\t\tdate_scale: \"%d %M\",\n\t\ttask_date: \"%d %F %Y\",\n\t\ttime_picker: \"%H:%i\",\n\t\ttask_attribute: \"task_id\",\n\t\tlink_attribute: \"link_id\",\n\t\tlayer_attribute: \"data-layer\",\n\t\tbuttons_left: [\n\t\t\t\"gantt_save_btn\",\n\t\t\t\"gantt_cancel_btn\"\n\t\t],\n\t\t_migrate_buttons: {\n\t\t\t\"dhx_save_btn\": \"gantt_save_btn\",\n\t\t\t\"dhx_cancel_btn\": \"gantt_cancel_btn\",\n\t\t\t\"dhx_delete_btn\": \"gantt_delete_btn\"\n\t\t},\n\t\tbuttons_right: [\n\t\t\t\"gantt_delete_btn\"\n\t\t],\n\t\tlightbox: {\n\t\t\tsections: [\n\t\t\t\t{name: \"description\", height: 70, map_to: \"text\", type: \"textarea\", focus: true},\n\t\t\t\t{name: \"time\", type: \"duration\", map_to: \"auto\"}\n\t\t\t],\n\t\t\tproject_sections: [\n\t\t\t\t{name: \"description\", height: 70, map_to: \"text\", type: \"textarea\", focus: true},\n\t\t\t\t{name: \"type\", type: \"typeselect\", map_to: \"type\"},\n\t\t\t\t{name: \"time\", type: \"duration\", readonly: true, map_to: \"auto\"}\n\t\t\t],\n\t\t\tmilestone_sections: [\n\t\t\t\t{name: \"description\", height: 70, map_to: \"text\", type: \"textarea\", focus: true},\n\t\t\t\t{name: \"type\", type: \"typeselect\", map_to: \"type\"},\n\t\t\t\t{name: \"time\", type: \"duration\", single_date: true, map_to: \"auto\"}\n\t\t\t]\n\t\t},\n\t\tdrag_lightbox: true,\n\t\tsort: false,\n\t\tdetails_on_create: true,\n\t\tdetails_on_dblclick: true,\n\t\tinitial_scroll: true,\n\t\ttask_scroll_offset: 100,\n\n\t\torder_branch: false,\n\t\torder_branch_free: false,\n\n\t\ttask_height: \"full\",//number px of 'full' for row height\n\t\tmin_column_width: 70,\n\n\t\t// min width for grid column (when resizing)\n\t\tmin_grid_column_width: 70,\n\t\t// name of the attribute with column index for resize element\n\t\tgrid_resizer_column_attribute: \"column_index\",\n\t\t// name of the attribute with column index for resize element\n\t\tgrid_resizer_attribute: \"grid_resizer\",\n\n\t\t// grid width can be increased after the column has been resized\n\t\tkeep_grid_width: false,\n\n\t\t// grid width can be adjusted\n\t\tgrid_resize: false,\n\n\t\tshow_unscheduled: true,\n\n\t\t//\n\t\treadonly_property: \"readonly\",\n\t\teditable_property: \"editable\",\n\t\tcalendar_property: \"calendar_id\",\n\t\tresource_calendars: {},\n\n\t\ttype_renderers: {},\n\n\t\topen_tree_initially: false,\n\t\toptimize_render: true,\n\t\tprevent_default_scroll: false,\n\t\tshow_errors: true,\n\t\twai_aria_attributes: true,\n\t\tsmart_scales: true,\n\t\trtl:false,\n\t\tplaceholder_task: false\n\t};\n};\n","module.exports = function(){\n\tvar services = {};\n\tfunction register (name, getter){\n\t\tservices[name] = getter;\n\t}\n\n\tfunction getService(name){\n\t\tif(!services[name]){\n\t\t\treturn null;\n\t\t}\n\t\treturn services[name]();\n\t}\n\n\tvar servicesEnum = {\n\t\t\"config\": \"config\",\n\t\t\"templates\": \"templates\",\n\t\t\"locale\": \"locale\"\n\t};\n\n\treturn {\n\t\tservices: servicesEnum,\n\t\tsetService: register,\n\t\tgetService: getService,\n\t\tconfig: function(){\n\t\t\treturn this.getService(\"config\");\n\t\t},\n\t\ttemplates: function(){\n\t\t\treturn this.getService(\"templates\");\n\t\t},\n\t\tlocale: function(){\n\t\t\treturn this.getService(\"locale\");\n\t\t},\n\t\tdestructor: function(){\n\t\t\tfor(var i in services){\n\t\t\t\tif(services[i]){\n\t\t\t\t\tvar service = services[i];\n\t\t\t\t\tif(service && service.destructor){\n\t\t\t\t\t\tservice.destructor();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tservices = null;\n\t\t}\n\t};\n};\n","module.exports = function(gantt){\n\tgantt.$inject = function(module){\n\t\treturn module(this.$services);\n\t};\n};","module.exports = {\n\tKEY_CODES: {\n\t\tUP: 38,\n\t\tDOWN: 40,\n\t\tLEFT: 37,\n\t\tRIGHT: 39,\n\t\tSPACE: 32,\n\t\tENTER: 13,\n\t\tDELETE: 46,\n\t\tESC: 27,\n\t\tTAB: 9\n\t}\n};","require(\"css/skins/terrace.less\");\n\nfunction DHXGantt(){\n\tthis.constants = require(\"./../constants\");\n\tthis.version = VERSION;\n\tthis.templates = {};\n\tthis.ext = {};\n\tthis.keys = {\n\t\tedit_save: this.constants.KEY_CODES.ENTER,\n\t\tedit_cancel: this.constants.KEY_CODES.ESC\n\t};\n}\n\nmodule.exports = function() {\n\t// use a named constructor to make gantt instance discoverable in heap snapshots\n\tvar gantt = new DHXGantt();\n\n\trequire(\"./common/import\")(gantt);\n\n\tgantt.$services = gantt.$inject(require(\"./common/services\"));\n\tgantt.config = gantt.$inject(require(\"./common/config\"));\n\tgantt.ajax =  require(\"./common/ajax\")(gantt);\n\tgantt.date = require(\"./common/date\")(gantt);\n\tvar dnd = require(\"./common/dnd\")(gantt);\n\tgantt.$services.setService(\"dnd\", function(){return dnd;});\n\n\tgantt.$services.setService(\"config\", function () {\n\t\treturn gantt.config;\n\t});\n\tgantt.$services.setService(\"date\", function () {\n\t\treturn gantt.date;\n\t});\n\tgantt.$services.setService(\"locale\", function () {\n\t\treturn gantt.locale;\n\t});\n\tgantt.$services.setService(\"templates\", function () {\n\t\treturn gantt.templates;\n\t});\n\n\tvar templatesLoader = require(\"./common/templates\")(gantt);\n\tgantt.$services.setService(\"templateLoader\", function () {\n\t\treturn templatesLoader;\n\t});\n\n\tvar eventable = require(\"../utils/eventable\");\n\teventable(gantt);\n\n\tvar StateService = require(\"./common/state\");\n\tvar stateService = new StateService();\n\n\tstateService.registerProvider(\"global\", function () {\n\t\treturn {\n\t\t\tmin_date: gantt._min_date,\n\t\t\tmax_date: gantt._max_date,\n\t\t\tselected_task: gantt.$data.tasksStore.getSelectedId()\n\t\t};\n\t});\n\tgantt.getState = stateService.getState;\n\tgantt.$services.setService(\"state\", function () {\n\t\treturn stateService;\n\t});\n\n\tvar utils = require(\"../utils/utils\");\n\tutils.mixin(gantt, utils);\n\tgantt.env = require(\"../utils/env\");\n\n\tvar domEvents = require(\"../utils/dom_event_scope\")();\n\tgantt.event = domEvents.attach;\n\tgantt.eventRemove = domEvents.detach;\n\tgantt._eventRemoveAll = domEvents.detachAll;\n\tgantt._createDomEventScope = domEvents.extend;\n\n\tutils.mixin(gantt, require(\"./message\")(gantt));\n\tvar uiApi = require(\"./ui/index\").init(gantt);\n\tgantt.$ui = uiApi.factory;\n\tgantt.$ui.layers = uiApi.render;\n\tgantt.$mouseEvents = uiApi.mouseEvents;\n\tgantt.$services.setService(\"mouseEvents\", function () {\n\t\treturn gantt.$mouseEvents;\n\t});\n\tgantt.mixin(gantt, uiApi.layersApi);\n\n\trequire(\"./data_task_layers\")(gantt);\n\n\tgantt.$services.setService(\"layers\", function () {\n\t\treturn uiApi.layersService;\n\t});\n\n\tvar createLayoutFacade = require(\"./facades/layout\");\n\tgantt.mixin(gantt, createLayoutFacade());\n\n\trequire(\"./datastore/datastore_hooks\")(gantt);\n\n\trequire(\"./dataprocessor/hooks\")(gantt);\n\trequire(\"./plugins\")(gantt);\n\n\trequire(\"./dynamic_loading\")(gantt);\n\trequire(\"./grid_column_api\")(gantt);\n\trequire(\"./wai_aria\")(gantt);\n\trequire(\"./tasks\")(gantt);\n\trequire(\"./load\")(gantt);\n\trequire(\"./worktime/work_time\")(gantt);\n\trequire(\"./data\")(gantt);\n\trequire(\"./lightbox\")(gantt);\n\trequire(\"./lightbox_optional_time\")(gantt);\n\trequire(\"./data_task_types\")(gantt);\n\trequire(\"./cached_functions\")(gantt);\n\trequire(\"./skin\")(gantt);\n\trequire(\"../css/skins/skyblue\")(gantt);\n\trequire(\"../css/skins/meadow\")(gantt);\n\trequire(\"../css/skins/terrace\")(gantt);\n\trequire(\"../css/skins/broadway\")(gantt);\n\trequire(\"../css/skins/material\")(gantt);\n\trequire(\"../css/skins/contrast_black\")(gantt);\n\trequire(\"../css/skins/contrast_white\")(gantt);\n\trequire(\"./touch\")(gantt);\n\trequire(\"../locale/locale\")(gantt);\n\trequire(\"./gantt_core\")(gantt);\n\trequire(\"./destructor\")(gantt);\n\n\treturn gantt;\n};","module.exports = function(gantt){\n\n\t// no deprecated methods for now\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction deprecated(badCode, goodCode, versionDeprecated, versionDeleted) {\n\n\t\tvar formatting = gantt.env.isIE ? \"\" : \"%c\";\n\t\tversionDeprecated = versionDeprecated || \"v6.0\";\n\t\tversionDeleted = versionDeleted || \"v7.0\";\n\n\t\tvar message = [\n\t\t\tformatting, \"\\\"\", badCode, \"\\\"\",  formatting,\n\t\t\t\" has been deprecated in dhtmlxGantt \", versionDeprecated, \" and will stop working in \", versionDeleted,\". Use \",\n\t\t\tformatting, \"\\\"\", goodCode, \"\\\"\",  formatting,\n\t\t\t\" instead. \\nSee more details at http://docs.dhtmlx.com/gantt/migrating.html \"\n\t\t].join(\"\");\n\n\t\tvar log = window.console.warn || window.console.log;\n\n\t\tvar args = [message];\n\t\tif(!gantt.env.isIE){\n\t\t\targs = args.concat([\"font-weight:bold\", \"font-weight:normal\", \"font-weight:bold\", \"font-weight:normal\"]);\n\t\t}\n\n\t\tlog.apply(window.console, args);\n\t}\n\n\t// gantt.getSlack is defined inside an extension, leave it without message for now\n\n};","import * as warnings from \"./core/deprecated_warnings\";\nimport * as base from \"./core/gantt\";\n\n\nconst gantt = (window as any).gantt = base();\nwarnings(gantt);"],"sourceRoot":""}